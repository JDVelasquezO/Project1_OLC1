
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORANDrightUNOTleftMENQUEMAYQUEMENIGUALQUEMAYIGUALQUEIGUALQUENIGUALQUEleftMASMENOSleftPORDIVIDIDOMODleftELEVADOrightUMENOSleftINCREMENTDECREMENTAND BREAK CADENA CASE CHAR DECIMAL DECREMENT DEFAULT DIVIDIDO DOSPUNTOS ELEVADO ELSE ENTERO FALSE FOR ID IF IGUAL IGUALQUE INCREMENT LLAVDER LLAVIZQ MAIN MAS MAYIGUALQUE MAYQUE MENIGUALQUE MENOS MENQUE MOD NIGUALQUE NOT NULL OR PARDER PARIZQ POR PRINT PTCOMA SWITCH TRUE VAR WHILEinit       : instruccionesinstrucciones    : instrucciones instruccioninstrucciones    : instruccion\n                         | emptyinstruccion      : func_main\n                        | imprimir_instr\n                        | definicion_instr\n                        | asignacion_instr\n                        | def_asig_instr\n                        | while_instr\n                        | if_instr\n                        | switch_instr\n                        | for_instr\n                        | expresiondef_instr_prima   : PTCOMA\n                        | emptyempty :func_main      : MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDERimprimir_instr     : PRINT PARIZQ expresion PARDER def_instr_primadefinicion_instr   : VAR ID def_instr_primaasignacion_instr   : ID IGUAL expresion def_instr_primadef_asig_instr     : VAR ID IGUAL expresion def_instr_primaif_instr           : IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDERif_instr      : IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDERif_instr       : IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instrwhile_instr     : WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDERbreak_instr    : BREAK\n                    | emptyswitch_instr   : SWITCH PARIZQ expresion PARDER LLAVIZQ cases LLAVDERswitch_instr   : SWITCH PARIZQ expresion PARDER LLAVIZQ default_instr LLAVDERswitch_instr   : SWITCH PARIZQ expresion PARDER LLAVIZQ cases default_instr LLAVDERcases      :   cases case_instrcases      : case_instrcase_instr     : CASE expresion DOSPUNTOS instrucciones break_instr def_instr_primadefault_instr    : DEFAULT DOSPUNTOS instrucciones break_instr def_instr_primafor_instr : FOR PARIZQ def_asign_for def_instr_prima expresion def_instr_prima expresion PARDER LLAVIZQ instrucciones LLAVDERdef_asign_for  : ID\n                        | asignacion_instr\n                        | def_asig_instrexpresion    : NULLexpresion        : expresion INCREMENT def_instr_prima\n                        | expresion DECREMENT def_instr_prima expresion        : expresion MAS expresion\n                        | expresion MENOS expresion\n                        | expresion POR expresion\n                        | expresion DIVIDIDO expresion\n                        | expresion ELEVADO expresion\n                        | expresion MOD expresion\n                        | expresion AND expresion\n                        | expresion OR expresion\n                        | expresion MAYQUE expresion\n                        | expresion MENQUE expresion\n                        | expresion MAYIGUALQUE expresion\n                        | expresion MENIGUALQUE expresion\n                        | expresion IGUALQUE expresion\n                        | expresion NIGUALQUE expresionexpresion      : MENOS expresion %prec UMENOSexpresion      : NOT expresion %prec UNOTexpresion      : PARIZQ expresion PARDERexpresion   : IDexpresion        : ENTERO\n                        | DECIMALexpresion     : CADENAexpresion   : CHARexpresion          : TRUE\n                          | FALSE'
    
_lr_action_items = {'MAIN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,24,27,28,29,30,31,32,33,34,35,52,54,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,85,94,95,96,97,103,104,105,106,107,110,111,112,119,120,121,124,125,129,130,131,133,134,138,139,140,143,144,146,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-40,-61,-62,-63,-64,-65,-66,-2,-17,-17,-60,-17,-57,-58,-41,-15,-16,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-59,-20,-17,15,-17,-17,-21,15,-19,-22,15,15,-18,15,15,-26,-23,-29,-30,15,-31,15,15,15,-25,15,15,15,15,-24,-36,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,24,27,28,29,30,31,32,33,34,35,52,54,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,85,94,95,96,97,103,104,105,106,107,110,111,112,119,120,121,124,125,129,130,131,133,134,138,139,140,143,144,146,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-40,-61,-62,-63,-64,-65,-66,-2,-17,-17,-60,-17,-57,-58,-41,-15,-16,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-59,-20,-17,17,-17,-17,-21,17,-19,-22,17,17,-18,17,17,-26,-23,-29,-30,17,-31,17,17,17,-25,17,17,17,17,-24,-36,]),'VAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,24,27,28,29,30,31,32,33,34,35,52,54,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,85,94,95,96,97,103,104,105,106,107,110,111,112,119,120,121,124,125,129,130,131,133,134,138,139,140,143,144,146,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-40,-61,-62,-63,-64,-65,-66,-2,-17,-17,-60,-17,93,-57,-58,-41,-15,-16,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-59,-20,-17,18,-17,-17,-21,18,-19,-22,18,18,-18,18,18,-26,-23,-29,-30,18,-31,18,18,18,-25,18,18,18,18,-24,-36,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,18,19,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,84,85,89,90,91,92,93,94,95,96,97,101,103,104,105,106,107,109,110,111,112,117,118,119,120,121,124,125,129,130,131,133,134,138,139,140,143,144,146,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,52,54,-60,-40,52,52,-61,-62,-63,-64,-65,-66,-2,-17,-17,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-60,52,-17,52,52,52,52,90,-57,-58,-41,-15,-16,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-59,-20,52,-17,-17,-37,-38,-39,102,19,-17,-17,-21,52,19,-19,-22,19,19,-17,-18,19,19,52,52,-26,-23,-29,-30,19,-31,19,19,19,-25,19,19,19,19,-24,-36,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,24,27,28,29,30,31,32,33,34,35,52,54,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,85,94,95,96,97,103,104,105,106,107,110,111,112,119,120,121,124,125,129,130,131,133,134,138,139,140,143,144,146,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-40,-61,-62,-63,-64,-65,-66,-2,-17,-17,-60,-17,-57,-58,-41,-15,-16,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-59,-20,-17,20,-17,-17,-21,20,-19,-22,20,20,-18,20,20,-26,-23,-29,-30,20,-31,20,20,20,-25,20,20,20,20,-24,-36,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,24,27,28,29,30,31,32,33,34,35,52,54,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,85,94,95,96,97,103,104,105,106,107,110,111,112,119,120,121,124,125,128,129,130,131,133,134,138,139,140,143,144,146,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-40,-61,-62,-63,-64,-65,-66,-2,-17,-17,-60,-17,-57,-58,-41,-15,-16,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-59,-20,-17,21,-17,-17,-21,21,-19,-22,21,21,-18,21,21,-26,-23,-29,-30,21,21,-31,21,21,21,-25,21,21,21,21,-24,-36,]),'SWITCH':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,24,27,28,29,30,31,32,33,34,35,52,54,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,85,94,95,96,97,103,104,105,106,107,110,111,112,119,120,121,124,125,129,130,131,133,134,138,139,140,143,144,146,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-40,-61,-62,-63,-64,-65,-66,-2,-17,-17,-60,-17,-57,-58,-41,-15,-16,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-59,-20,-17,22,-17,-17,-21,22,-19,-22,22,22,-18,22,22,-26,-23,-29,-30,22,-31,22,22,22,-25,22,22,22,22,-24,-36,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,24,27,28,29,30,31,32,33,34,35,52,54,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,85,94,95,96,97,103,104,105,106,107,110,111,112,119,120,121,124,125,129,130,131,133,134,138,139,140,143,144,146,],[23,23,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-40,-61,-62,-63,-64,-65,-66,-2,-17,-17,-60,-17,-57,-58,-41,-15,-16,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-59,-20,-17,23,-17,-17,-21,23,-19,-22,23,23,-18,23,23,-26,-23,-29,-30,23,-31,23,23,23,-25,23,23,23,23,-24,-36,]),'NULL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,19,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,84,85,89,90,91,92,94,95,96,97,101,103,104,105,106,107,109,110,111,112,117,118,119,120,121,124,125,129,130,131,133,134,138,139,140,143,144,146,],[24,24,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,24,-60,-40,24,24,-61,-62,-63,-64,-65,-66,-2,-17,-17,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-60,24,-17,24,24,24,24,-57,-58,-41,-15,-16,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-59,-20,24,-17,-17,-37,-38,-39,24,-17,-17,-21,24,24,-19,-22,24,24,-17,-18,24,24,24,24,-26,-23,-29,-30,24,-31,24,24,24,-25,24,24,24,24,-24,-36,]),'MENOS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,19,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,101,103,104,105,106,107,109,110,111,112,117,118,119,120,121,124,125,126,127,129,130,131,133,134,138,139,140,143,144,146,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,37,25,-60,-40,25,25,-61,-62,-63,-64,-65,-66,-2,-17,-17,25,25,25,25,25,25,25,25,25,25,25,25,25,25,37,-60,25,-17,25,25,25,25,-57,37,-41,-15,-16,-42,-43,-44,-45,-46,-47,-48,37,37,37,37,37,37,37,37,-59,37,-20,25,37,37,37,37,-17,-37,-38,-39,25,-17,37,-21,25,25,-19,-22,25,25,37,-18,25,25,25,25,-26,-23,-29,-30,25,37,37,-31,25,25,25,-25,25,25,25,25,-24,-36,]),'NOT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,19,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,84,85,89,90,91,92,94,95,96,97,101,103,104,105,106,107,109,110,111,112,117,118,119,120,121,124,125,129,130,131,133,134,138,139,140,143,144,146,],[26,26,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,26,-60,-40,26,26,-61,-62,-63,-64,-65,-66,-2,-17,-17,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-60,26,-17,26,26,26,26,-57,-58,-41,-15,-16,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-59,-20,26,-17,-17,-37,-38,-39,26,-17,-17,-21,26,26,-19,-22,26,26,-17,-18,26,26,26,26,-26,-23,-29,-30,26,-31,26,26,26,-25,26,26,26,26,-24,-36,]),'PARIZQ':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,84,85,89,90,91,92,94,95,96,97,101,103,104,105,106,107,109,110,111,112,117,118,119,120,121,124,125,129,130,131,133,134,138,139,140,143,144,146,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,50,16,53,-60,56,57,58,59,-40,16,16,-61,-62,-63,-64,-65,-66,-2,-17,-17,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-60,16,-17,16,16,16,16,-57,-58,-41,-15,-16,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-59,-20,16,-17,-17,-37,-38,-39,16,-17,-17,-21,16,16,-19,-22,16,16,-17,-18,16,16,16,16,-26,-23,-29,-30,16,-31,16,16,16,-25,16,16,16,16,-24,-36,]),'ENTERO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,19,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,84,85,89,90,91,92,94,95,96,97,101,103,104,105,106,107,109,110,111,112,117,118,119,120,121,124,125,129,130,131,133,134,138,139,140,143,144,146,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,27,-60,-40,27,27,-61,-62,-63,-64,-65,-66,-2,-17,-17,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-60,27,-17,27,27,27,27,-57,-58,-41,-15,-16,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-59,-20,27,-17,-17,-37,-38,-39,27,-17,-17,-21,27,27,-19,-22,27,27,-17,-18,27,27,27,27,-26,-23,-29,-30,27,-31,27,27,27,-25,27,27,27,27,-24,-36,]),'DECIMAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,19,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,84,85,89,90,91,92,94,95,96,97,101,103,104,105,106,107,109,110,111,112,117,118,119,120,121,124,125,129,130,131,133,134,138,139,140,143,144,146,],[28,28,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,28,-60,-40,28,28,-61,-62,-63,-64,-65,-66,-2,-17,-17,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-60,28,-17,28,28,28,28,-57,-58,-41,-15,-16,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-59,-20,28,-17,-17,-37,-38,-39,28,-17,-17,-21,28,28,-19,-22,28,28,-17,-18,28,28,28,28,-26,-23,-29,-30,28,-31,28,28,28,-25,28,28,28,28,-24,-36,]),'CADENA':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,19,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,84,85,89,90,91,92,94,95,96,97,101,103,104,105,106,107,109,110,111,112,117,118,119,120,121,124,125,129,130,131,133,134,138,139,140,143,144,146,],[29,29,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,29,-60,-40,29,29,-61,-62,-63,-64,-65,-66,-2,-17,-17,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-60,29,-17,29,29,29,29,-57,-58,-41,-15,-16,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-59,-20,29,-17,-17,-37,-38,-39,29,-17,-17,-21,29,29,-19,-22,29,29,-17,-18,29,29,29,29,-26,-23,-29,-30,29,-31,29,29,29,-25,29,29,29,29,-24,-36,]),'CHAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,19,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,84,85,89,90,91,92,94,95,96,97,101,103,104,105,106,107,109,110,111,112,117,118,119,120,121,124,125,129,130,131,133,134,138,139,140,143,144,146,],[30,30,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,30,-60,-40,30,30,-61,-62,-63,-64,-65,-66,-2,-17,-17,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-60,30,-17,30,30,30,30,-57,-58,-41,-15,-16,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-59,-20,30,-17,-17,-37,-38,-39,30,-17,-17,-21,30,30,-19,-22,30,30,-17,-18,30,30,30,30,-26,-23,-29,-30,30,-31,30,30,30,-25,30,30,30,30,-24,-36,]),'TRUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,19,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,84,85,89,90,91,92,94,95,96,97,101,103,104,105,106,107,109,110,111,112,117,118,119,120,121,124,125,129,130,131,133,134,138,139,140,143,144,146,],[31,31,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,31,-60,-40,31,31,-61,-62,-63,-64,-65,-66,-2,-17,-17,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-60,31,-17,31,31,31,31,-57,-58,-41,-15,-16,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-59,-20,31,-17,-17,-37,-38,-39,31,-17,-17,-21,31,31,-19,-22,31,31,-17,-18,31,31,31,31,-26,-23,-29,-30,31,-31,31,31,31,-25,31,31,31,31,-24,-36,]),'FALSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,19,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,84,85,89,90,91,92,94,95,96,97,101,103,104,105,106,107,109,110,111,112,117,118,119,120,121,124,125,129,130,131,133,134,138,139,140,143,144,146,],[32,32,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,32,-60,-40,32,32,-61,-62,-63,-64,-65,-66,-2,-17,-17,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-60,32,-17,32,32,32,32,-57,-58,-41,-15,-16,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-59,-20,32,-17,-17,-37,-38,-39,32,-17,-17,-21,32,32,-19,-22,32,32,-17,-18,32,32,32,32,-26,-23,-29,-30,32,-31,32,32,32,-25,32,32,32,32,-24,-36,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,19,24,27,28,29,30,31,32,33,34,35,52,54,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,85,95,96,97,104,105,110,119,120,121,124,129,134,144,146,],[-17,0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-40,-61,-62,-63,-64,-65,-66,-2,-17,-17,-60,-17,-57,-58,-41,-15,-16,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-59,-20,-17,-17,-17,-21,-19,-22,-18,-26,-23,-29,-30,-31,-25,-24,-36,]),'LLAVDER':([3,4,5,6,7,8,9,10,11,12,13,14,19,24,27,28,29,30,31,32,33,34,35,52,54,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,85,94,95,96,97,103,104,105,106,107,110,111,112,113,114,115,119,120,121,122,123,124,125,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-40,-61,-62,-63,-64,-65,-66,-2,-17,-17,-60,-17,-57,-58,-41,-15,-16,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-59,-20,-17,-17,-17,-17,-21,110,-19,-22,-17,-17,-18,119,120,121,124,-33,-26,-23,-29,129,-32,-30,-17,-31,-17,-17,-17,-25,-17,-27,-28,-17,-17,144,-35,-17,146,-24,-34,-36,]),'BREAK':([3,4,5,6,7,8,9,10,11,12,13,14,19,24,27,28,29,30,31,32,33,34,35,52,54,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,85,95,96,97,104,105,110,119,120,121,124,125,129,130,131,134,138,144,146,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-40,-61,-62,-63,-64,-65,-66,-2,-17,-17,-60,-17,-57,-58,-41,-15,-16,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-59,-20,-17,-17,-17,-21,-19,-22,-18,-26,-23,-29,-30,-17,-31,136,-17,-25,136,-24,-36,]),'PTCOMA':([3,4,5,6,7,8,9,10,11,12,13,14,19,24,27,28,29,30,31,32,33,34,35,52,54,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,85,89,90,91,92,95,96,97,104,105,109,110,119,120,121,124,125,129,130,131,134,135,136,137,138,142,144,146,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-40,-61,-62,-63,-64,-65,-66,-2,63,63,-60,63,-57,-58,-41,-15,-16,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-59,-20,63,63,-37,-38,-39,63,63,-21,-19,-22,63,-18,-26,-23,-29,-30,-17,-31,-17,-17,-25,63,-27,-28,-17,63,-24,-36,]),'DEFAULT':([3,4,5,6,7,8,9,10,11,12,13,14,19,24,27,28,29,30,31,32,33,34,35,52,54,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,85,95,96,97,104,105,108,110,113,115,119,120,121,123,124,129,131,134,136,137,138,142,144,145,146,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-40,-61,-62,-63,-64,-65,-66,-2,-17,-17,-60,-17,-57,-58,-41,-15,-16,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-59,-20,-17,-17,-17,-21,-19,-22,116,-18,116,-33,-26,-23,-29,-32,-30,-31,-17,-25,-27,-28,-17,-17,-24,-34,-36,]),'CASE':([3,4,5,6,7,8,9,10,11,12,13,14,19,24,27,28,29,30,31,32,33,34,35,52,54,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,83,85,95,96,97,104,105,108,110,113,115,119,120,121,123,124,129,131,134,136,137,138,142,144,145,146,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-60,-40,-61,-62,-63,-64,-65,-66,-2,-17,-17,-60,-17,-57,-58,-41,-15,-16,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-59,-20,-17,-17,-17,-21,-19,-22,117,-18,117,-33,-26,-23,-29,-32,-30,-31,-17,-25,-27,-28,-17,-17,-24,-34,-36,]),'INCREMENT':([14,19,24,27,28,29,30,31,32,34,35,51,52,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,85,86,87,88,96,109,126,127,],[34,-60,-40,-61,-62,-63,-64,-65,-66,-17,-17,34,-60,34,34,-41,-15,-16,-42,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-59,34,34,34,34,34,34,34,34,34,]),'DECREMENT':([14,19,24,27,28,29,30,31,32,34,35,51,52,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,85,86,87,88,96,109,126,127,],[35,-60,-40,-61,-62,-63,-64,-65,-66,-17,-17,35,-60,35,35,-41,-15,-16,-42,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-59,35,35,35,35,35,35,35,35,35,]),'MAS':([14,19,24,27,28,29,30,31,32,34,35,51,52,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,85,86,87,88,96,109,126,127,],[36,-60,-40,-61,-62,-63,-64,-65,-66,-17,-17,36,-60,-57,36,-41,-15,-16,-42,-43,-44,-45,-46,-47,-48,36,36,36,36,36,36,36,36,-59,36,36,36,36,36,36,36,36,36,]),'POR':([14,19,24,27,28,29,30,31,32,34,35,51,52,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,85,86,87,88,96,109,126,127,],[38,-60,-40,-61,-62,-63,-64,-65,-66,-17,-17,38,-60,-57,38,-41,-15,-16,-42,38,38,-45,-46,-47,-48,38,38,38,38,38,38,38,38,-59,38,38,38,38,38,38,38,38,38,]),'DIVIDIDO':([14,19,24,27,28,29,30,31,32,34,35,51,52,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,85,86,87,88,96,109,126,127,],[39,-60,-40,-61,-62,-63,-64,-65,-66,-17,-17,39,-60,-57,39,-41,-15,-16,-42,39,39,-45,-46,-47,-48,39,39,39,39,39,39,39,39,-59,39,39,39,39,39,39,39,39,39,]),'ELEVADO':([14,19,24,27,28,29,30,31,32,34,35,51,52,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,85,86,87,88,96,109,126,127,],[40,-60,-40,-61,-62,-63,-64,-65,-66,-17,-17,40,-60,-57,40,-41,-15,-16,-42,40,40,40,40,-47,40,40,40,40,40,40,40,40,40,-59,40,40,40,40,40,40,40,40,40,]),'MOD':([14,19,24,27,28,29,30,31,32,34,35,51,52,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,85,86,87,88,96,109,126,127,],[41,-60,-40,-61,-62,-63,-64,-65,-66,-17,-17,41,-60,-57,41,-41,-15,-16,-42,41,41,-45,-46,-47,-48,41,41,41,41,41,41,41,41,-59,41,41,41,41,41,41,41,41,41,]),'AND':([14,19,24,27,28,29,30,31,32,34,35,51,52,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,85,86,87,88,96,109,126,127,],[42,-60,-40,-61,-62,-63,-64,-65,-66,-17,-17,42,-60,-57,-58,-41,-15,-16,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-59,42,42,42,42,42,42,42,42,42,]),'OR':([14,19,24,27,28,29,30,31,32,34,35,51,52,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,85,86,87,88,96,109,126,127,],[43,-60,-40,-61,-62,-63,-64,-65,-66,-17,-17,43,-60,-57,-58,-41,-15,-16,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-59,43,43,43,43,43,43,43,43,43,]),'MAYQUE':([14,19,24,27,28,29,30,31,32,34,35,51,52,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,85,86,87,88,96,109,126,127,],[44,-60,-40,-61,-62,-63,-64,-65,-66,-17,-17,44,-60,-57,44,-41,-15,-16,-42,-43,-44,-45,-46,-47,-48,44,44,-51,-52,-53,-54,-55,-56,-59,44,44,44,44,44,44,44,44,44,]),'MENQUE':([14,19,24,27,28,29,30,31,32,34,35,51,52,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,85,86,87,88,96,109,126,127,],[45,-60,-40,-61,-62,-63,-64,-65,-66,-17,-17,45,-60,-57,45,-41,-15,-16,-42,-43,-44,-45,-46,-47,-48,45,45,-51,-52,-53,-54,-55,-56,-59,45,45,45,45,45,45,45,45,45,]),'MAYIGUALQUE':([14,19,24,27,28,29,30,31,32,34,35,51,52,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,85,86,87,88,96,109,126,127,],[46,-60,-40,-61,-62,-63,-64,-65,-66,-17,-17,46,-60,-57,46,-41,-15,-16,-42,-43,-44,-45,-46,-47,-48,46,46,-51,-52,-53,-54,-55,-56,-59,46,46,46,46,46,46,46,46,46,]),'MENIGUALQUE':([14,19,24,27,28,29,30,31,32,34,35,51,52,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,85,86,87,88,96,109,126,127,],[47,-60,-40,-61,-62,-63,-64,-65,-66,-17,-17,47,-60,-57,47,-41,-15,-16,-42,-43,-44,-45,-46,-47,-48,47,47,-51,-52,-53,-54,-55,-56,-59,47,47,47,47,47,47,47,47,47,]),'IGUALQUE':([14,19,24,27,28,29,30,31,32,34,35,51,52,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,85,86,87,88,96,109,126,127,],[48,-60,-40,-61,-62,-63,-64,-65,-66,-17,-17,48,-60,-57,48,-41,-15,-16,-42,-43,-44,-45,-46,-47,-48,48,48,-51,-52,-53,-54,-55,-56,-59,48,48,48,48,48,48,48,48,48,]),'NIGUALQUE':([14,19,24,27,28,29,30,31,32,34,35,51,52,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,85,86,87,88,96,109,126,127,],[49,-60,-40,-61,-62,-63,-64,-65,-66,-17,-17,49,-60,-57,49,-41,-15,-16,-42,-43,-44,-45,-46,-47,-48,49,49,-51,-52,-53,-54,-55,-56,-59,49,49,49,49,49,49,49,49,49,]),'IGUAL':([19,54,90,102,],[55,84,55,84,]),'PARDER':([24,27,28,29,30,31,32,34,35,50,51,52,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,86,87,88,127,],[-40,-61,-62,-63,-64,-65,-66,-17,-17,80,81,-60,-57,-58,-41,-15,-16,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-59,95,98,99,100,132,]),'DOSPUNTOS':([24,27,28,29,30,31,32,34,35,52,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,116,126,],[-40,-61,-62,-63,-64,-65,-66,-17,-17,-60,-57,-58,-41,-15,-16,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-59,125,131,]),'LLAVIZQ':([80,98,99,100,128,132,],[94,106,107,108,133,139,]),'ELSE':([120,],[128,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,94,106,107,125,131,133,139,],[2,103,111,112,130,138,140,143,]),'instruccion':([0,2,94,103,106,107,111,112,125,130,131,133,138,139,140,143,],[3,33,3,33,3,3,33,33,3,33,3,3,33,3,33,33,]),'empty':([0,34,35,54,85,89,94,95,96,106,107,109,125,130,131,133,135,138,139,142,],[4,64,64,64,64,64,4,64,64,4,4,64,4,137,4,4,64,137,4,64,]),'func_main':([0,2,94,103,106,107,111,112,125,130,131,133,138,139,140,143,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'imprimir_instr':([0,2,94,103,106,107,111,112,125,130,131,133,138,139,140,143,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'definicion_instr':([0,2,94,103,106,107,111,112,125,130,131,133,138,139,140,143,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'asignacion_instr':([0,2,59,94,103,106,107,111,112,125,130,131,133,138,139,140,143,],[8,8,91,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'def_asig_instr':([0,2,59,94,103,106,107,111,112,125,130,131,133,138,139,140,143,],[9,9,92,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'while_instr':([0,2,94,103,106,107,111,112,125,130,131,133,138,139,140,143,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'if_instr':([0,2,94,103,106,107,111,112,125,128,130,131,133,138,139,140,143,],[11,11,11,11,11,11,11,11,11,134,11,11,11,11,11,11,11,]),'switch_instr':([0,2,94,103,106,107,111,112,125,130,131,133,138,139,140,143,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'for_instr':([0,2,94,103,106,107,111,112,125,130,131,133,138,139,140,143,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'expresion':([0,2,16,25,26,36,37,38,39,40,41,42,43,44,45,46,47,48,49,53,55,56,57,58,84,94,101,103,106,107,111,112,117,118,125,130,131,133,138,139,140,143,],[14,14,51,60,61,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,85,86,87,88,96,14,109,14,14,14,14,14,126,127,14,14,14,14,14,14,14,14,]),'def_instr_prima':([34,35,54,85,89,95,96,109,135,142,],[62,65,83,97,101,104,105,118,141,145,]),'def_asign_for':([59,],[89,]),'cases':([108,],[113,]),'default_instr':([108,113,],[114,122,]),'case_instr':([108,113,],[115,123,]),'break_instr':([130,138,],[135,142,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','grammar.py',186),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','grammar.py',192),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','grammar.py',198),
  ('instrucciones -> empty','instrucciones',1,'p_instrucciones_instruccion','grammar.py',199),
  ('instruccion -> func_main','instruccion',1,'p_instruccion','grammar.py',204),
  ('instruccion -> imprimir_instr','instruccion',1,'p_instruccion','grammar.py',205),
  ('instruccion -> definicion_instr','instruccion',1,'p_instruccion','grammar.py',206),
  ('instruccion -> asignacion_instr','instruccion',1,'p_instruccion','grammar.py',207),
  ('instruccion -> def_asig_instr','instruccion',1,'p_instruccion','grammar.py',208),
  ('instruccion -> while_instr','instruccion',1,'p_instruccion','grammar.py',209),
  ('instruccion -> if_instr','instruccion',1,'p_instruccion','grammar.py',210),
  ('instruccion -> switch_instr','instruccion',1,'p_instruccion','grammar.py',211),
  ('instruccion -> for_instr','instruccion',1,'p_instruccion','grammar.py',212),
  ('instruccion -> expresion','instruccion',1,'p_instruccion','grammar.py',213),
  ('def_instr_prima -> PTCOMA','def_instr_prima',1,'p_instrDef_prima','grammar.py',218),
  ('def_instr_prima -> empty','def_instr_prima',1,'p_instrDef_prima','grammar.py',219),
  ('empty -> <empty>','empty',0,'p_empty','grammar.py',224),
  ('func_main -> MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER','func_main',6,'p_func_main','grammar.py',230),
  ('imprimir_instr -> PRINT PARIZQ expresion PARDER def_instr_prima','imprimir_instr',5,'p_instruccion_imprimir','grammar.py',236),
  ('definicion_instr -> VAR ID def_instr_prima','definicion_instr',3,'p_instruccion_definicion','grammar.py',242),
  ('asignacion_instr -> ID IGUAL expresion def_instr_prima','asignacion_instr',4,'p_asignacion_instr','grammar.py',247),
  ('def_asig_instr -> VAR ID IGUAL expresion def_instr_prima','def_asig_instr',5,'p_definicion_asignacion','grammar.py',252),
  ('if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER','if_instr',7,'p_if_instr','grammar.py',258),
  ('if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER','if_instr',11,'p_if_else_instr','grammar.py',263),
  ('if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instr','if_instr',9,'p_else_if','grammar.py',268),
  ('while_instr -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER','while_instr',7,'p_while_instr','grammar.py',274),
  ('break_instr -> BREAK','break_instr',1,'p_break_instr','grammar.py',280),
  ('break_instr -> empty','break_instr',1,'p_break_instr','grammar.py',281),
  ('switch_instr -> SWITCH PARIZQ expresion PARDER LLAVIZQ cases LLAVDER','switch_instr',7,'p_switch','grammar.py',286),
  ('switch_instr -> SWITCH PARIZQ expresion PARDER LLAVIZQ default_instr LLAVDER','switch_instr',7,'p_switch_default','grammar.py',291),
  ('switch_instr -> SWITCH PARIZQ expresion PARDER LLAVIZQ cases default_instr LLAVDER','switch_instr',8,'p_switch_cases','grammar.py',296),
  ('cases -> cases case_instr','cases',2,'p_cases','grammar.py',301),
  ('cases -> case_instr','cases',1,'p_cases_recursive','grammar.py',308),
  ('case_instr -> CASE expresion DOSPUNTOS instrucciones break_instr def_instr_prima','case_instr',6,'p_case','grammar.py',316),
  ('default_instr -> DEFAULT DOSPUNTOS instrucciones break_instr def_instr_prima','default_instr',5,'p_default','grammar.py',321),
  ('for_instr -> FOR PARIZQ def_asign_for def_instr_prima expresion def_instr_prima expresion PARDER LLAVIZQ instrucciones LLAVDER','for_instr',11,'p_for','grammar.py',327),
  ('def_asign_for -> ID','def_asign_for',1,'p_def_asign_for','grammar.py',332),
  ('def_asign_for -> asignacion_instr','def_asign_for',1,'p_def_asign_for','grammar.py',333),
  ('def_asign_for -> def_asig_instr','def_asign_for',1,'p_def_asign_for','grammar.py',334),
  ('expresion -> NULL','expresion',1,'p_null','grammar.py',340),
  ('expresion -> expresion INCREMENT def_instr_prima','expresion',3,'p_increment','grammar.py',345),
  ('expresion -> expresion DECREMENT def_instr_prima','expresion',3,'p_increment','grammar.py',346),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_binaria','grammar.py',354),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_binaria','grammar.py',355),
  ('expresion -> expresion POR expresion','expresion',3,'p_expresion_binaria','grammar.py',356),
  ('expresion -> expresion DIVIDIDO expresion','expresion',3,'p_expresion_binaria','grammar.py',357),
  ('expresion -> expresion ELEVADO expresion','expresion',3,'p_expresion_binaria','grammar.py',358),
  ('expresion -> expresion MOD expresion','expresion',3,'p_expresion_binaria','grammar.py',359),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_binaria','grammar.py',360),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_binaria','grammar.py',361),
  ('expresion -> expresion MAYQUE expresion','expresion',3,'p_expresion_binaria','grammar.py',362),
  ('expresion -> expresion MENQUE expresion','expresion',3,'p_expresion_binaria','grammar.py',363),
  ('expresion -> expresion MAYIGUALQUE expresion','expresion',3,'p_expresion_binaria','grammar.py',364),
  ('expresion -> expresion MENIGUALQUE expresion','expresion',3,'p_expresion_binaria','grammar.py',365),
  ('expresion -> expresion IGUALQUE expresion','expresion',3,'p_expresion_binaria','grammar.py',366),
  ('expresion -> expresion NIGUALQUE expresion','expresion',3,'p_expresion_binaria','grammar.py',367),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_unaria','grammar.py',404),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_negar','grammar.py',409),
  ('expresion -> PARIZQ expresion PARDER','expresion',3,'p_expresion_agrupacion','grammar.py',414),
  ('expresion -> ID','expresion',1,'p_expresionId','grammar.py',419),
  ('expresion -> ENTERO','expresion',1,'p_expresion_number','grammar.py',424),
  ('expresion -> DECIMAL','expresion',1,'p_expresion_number','grammar.py',425),
  ('expresion -> CADENA','expresion',1,'p_expresion_cadena','grammar.py',430),
  ('expresion -> CHAR','expresion',1,'p_expresion_char','grammar.py',435),
  ('expresion -> TRUE','expresion',1,'p_expresionBoolean','grammar.py',440),
  ('expresion -> FALSE','expresion',1,'p_expresionBoolean','grammar.py',441),
]
