
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORANDrightUNOTleftMENQUEMAYQUEMENIGUALQUEMAYIGUALQUEIGUALQUENIGUALQUEleftMASMENOSleftPORDIVIDIDOMODleftELEVADOrightUMENOSAND CADENA CHAR DECIMAL DECREMENT DIVIDIDO ELEVADO ELSE ENTERO FALSE ID IF IGUAL IGUALQUE INCREMENT LLAVDER LLAVIZQ MAIN MAS MAYIGUALQUE MAYQUE MENIGUALQUE MENOS MENQUE MIENTRAS MOD NIGUALQUE NOT OR PARDER PARIZQ POR PRINT PTCOMA TRUE VARinit       : instruccionesinstrucciones    : instrucciones instruccioninstrucciones    : instruccion\n                         | emptyinstruccion      : func_main\n                        | imprimir_instr\n                        | definicion_instr\n                        | asignacion_instr\n                        | def_asig_instr\n                        | mientras_instr\n                        | if_instrfunc_main      : MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDERimprimir_instr     : PRINT PARIZQ expresion PARDER def_instr_primadefinicion_instr   : VAR ID def_instr_primaasignacion_instr   : ID IGUAL expresion def_instr_primadef_asig_instr     : VAR ID IGUAL expresion def_instr_primaif_instr           : IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDERif_instr      : IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDERif_instr       : IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instrmientras_instr     : MIENTRAS PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDERexpresion        : expresion MAS expresion\n                        | expresion MENOS expresion\n                        | expresion POR expresion\n                        | expresion DIVIDIDO expresion\n                        | expresion ELEVADO expresion\n                        | expresion MOD expresion\n                        | expresion AND expresion\n                        | expresion OR expresion\n                        | expresion MAYQUE expresion\n                        | expresion MENQUE expresion\n                        | expresion MAYIGUALQUE expresion\n                        | expresion MENIGUALQUE expresion\n                        | expresion IGUALQUE expresion\n                        | expresion NIGUALQUE expresionexpresion      : MENOS expresion %prec UMENOSexpresion      : NOT expresion %prec UNOTexpresion      : PARIZQ expresion PARDERexpresion   : IDexpresion        : ENTERO\n                        | DECIMALexpresion     : CADENAexpresion   : CHARexpresion          : TRUE\n                          | FALSEexpresion          : expresiondef_instr_prima   : PTCOMA\n                        | emptyempty :'
    
_lr_action_items = {'MAIN':([0,2,3,4,5,6,7,8,9,10,11,18,21,30,31,32,33,34,35,36,37,39,40,41,44,46,61,62,63,64,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,],[12,12,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-48,-38,-39,-40,-41,-42,-43,-44,-14,-46,-47,-45,12,-48,-35,-36,-45,-15,12,-37,-13,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-16,12,12,-12,12,12,-20,-17,12,-19,12,-18,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,18,21,30,31,32,33,34,35,36,37,39,40,41,44,46,61,62,63,64,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-48,-38,-39,-40,-41,-42,-43,-44,-14,-46,-47,-45,13,-48,-35,-36,-45,-15,13,-37,-13,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-16,13,13,-12,13,13,-20,-17,13,-19,13,-18,]),'VAR':([0,2,3,4,5,6,7,8,9,10,11,18,21,30,31,32,33,34,35,36,37,39,40,41,44,46,61,62,63,64,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-48,-38,-39,-40,-41,-42,-43,-44,-14,-46,-47,-45,14,-48,-35,-36,-45,-15,14,-37,-13,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-16,14,14,-12,14,14,-20,-17,14,-19,14,-18,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,14,18,20,21,22,23,24,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,21,-2,30,-48,30,30,30,30,30,30,-38,-39,-40,-41,-42,-43,-44,-14,30,-46,-47,-45,15,-48,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-35,-36,-45,-15,15,-37,-13,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-16,15,15,-12,15,15,-20,-17,15,-19,15,-18,]),'MIENTRAS':([0,2,3,4,5,6,7,8,9,10,11,18,21,30,31,32,33,34,35,36,37,39,40,41,44,46,61,62,63,64,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-48,-38,-39,-40,-41,-42,-43,-44,-14,-46,-47,-45,16,-48,-35,-36,-45,-15,16,-37,-13,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-16,16,16,-12,16,16,-20,-17,16,-19,16,-18,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,18,21,30,31,32,33,34,35,36,37,39,40,41,44,46,61,62,63,64,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-48,-38,-39,-40,-41,-42,-43,-44,-14,-46,-47,-45,17,-48,-35,-36,-45,-15,17,-37,-13,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-16,17,17,-12,17,17,-20,-17,17,17,-19,17,-18,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,18,21,30,31,32,33,34,35,36,37,39,40,41,46,61,62,63,64,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,90,91,94,96,],[-48,0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-48,-38,-39,-40,-41,-42,-43,-44,-14,-46,-47,-45,-48,-35,-36,-45,-15,-37,-13,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-16,-12,-20,-17,-19,-18,]),'LLAVDER':([3,4,5,6,7,8,9,10,11,18,21,30,31,32,33,34,35,36,37,39,40,41,44,46,61,62,63,64,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-48,-38,-39,-40,-41,-42,-43,-44,-14,-46,-47,-45,-48,-48,-35,-36,-45,-15,87,-37,-13,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-16,-48,-48,-12,90,91,-20,-17,-48,-19,96,-18,]),'PARIZQ':([12,13,16,17,20,22,23,24,26,28,29,38,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[19,20,23,24,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'IGUAL':([15,21,],[22,38,]),'PARDER':([19,27,30,31,32,33,34,35,36,42,43,45,61,62,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[25,46,-38,-39,-40,-41,-42,-43,-44,65,66,68,-35,-36,-37,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,]),'MENOS':([20,22,23,24,26,27,28,29,30,31,32,33,34,35,36,38,41,42,43,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[28,28,28,28,28,48,28,28,-38,-39,-40,-41,-42,-43,-44,28,48,48,48,48,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-35,48,48,-37,-21,-22,-23,-24,-25,-26,48,48,48,48,48,48,48,48,]),'NOT':([20,22,23,24,26,28,29,38,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'ENTERO':([20,22,23,24,26,28,29,38,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'DECIMAL':([20,22,23,24,26,28,29,38,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'CADENA':([20,22,23,24,26,28,29,38,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'CHAR':([20,22,23,24,26,28,29,38,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'TRUE':([20,22,23,24,26,28,29,38,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'FALSE':([20,22,23,24,26,28,29,38,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'PTCOMA':([21,30,31,32,33,34,35,36,41,46,61,62,63,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[39,-38,-39,-40,-41,-42,-43,-44,39,39,-35,-36,39,-37,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,]),'LLAVIZQ':([25,65,66,92,],[44,85,86,93,]),'MAS':([27,30,31,32,33,34,35,36,41,42,43,45,61,62,63,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[47,-38,-39,-40,-41,-42,-43,-44,47,47,47,47,-35,47,47,-37,-21,-22,-23,-24,-25,-26,47,47,47,47,47,47,47,47,]),'POR':([27,30,31,32,33,34,35,36,41,42,43,45,61,62,63,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[49,-38,-39,-40,-41,-42,-43,-44,49,49,49,49,-35,49,49,-37,49,49,-23,-24,-25,-26,49,49,49,49,49,49,49,49,]),'DIVIDIDO':([27,30,31,32,33,34,35,36,41,42,43,45,61,62,63,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[50,-38,-39,-40,-41,-42,-43,-44,50,50,50,50,-35,50,50,-37,50,50,-23,-24,-25,-26,50,50,50,50,50,50,50,50,]),'ELEVADO':([27,30,31,32,33,34,35,36,41,42,43,45,61,62,63,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[51,-38,-39,-40,-41,-42,-43,-44,51,51,51,51,-35,51,51,-37,51,51,51,51,-25,51,51,51,51,51,51,51,51,51,]),'MOD':([27,30,31,32,33,34,35,36,41,42,43,45,61,62,63,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[52,-38,-39,-40,-41,-42,-43,-44,52,52,52,52,-35,52,52,-37,52,52,-23,-24,-25,-26,52,52,52,52,52,52,52,52,]),'AND':([27,30,31,32,33,34,35,36,41,42,43,45,61,62,63,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[53,-38,-39,-40,-41,-42,-43,-44,53,53,53,53,-35,-36,53,-37,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,]),'OR':([27,30,31,32,33,34,35,36,41,42,43,45,61,62,63,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[54,-38,-39,-40,-41,-42,-43,-44,54,54,54,54,-35,-36,54,-37,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,]),'MAYQUE':([27,30,31,32,33,34,35,36,41,42,43,45,61,62,63,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[55,-38,-39,-40,-41,-42,-43,-44,55,55,55,55,-35,55,55,-37,-21,-22,-23,-24,-25,-26,55,55,-29,-30,-31,-32,-33,-34,]),'MENQUE':([27,30,31,32,33,34,35,36,41,42,43,45,61,62,63,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[56,-38,-39,-40,-41,-42,-43,-44,56,56,56,56,-35,56,56,-37,-21,-22,-23,-24,-25,-26,56,56,-29,-30,-31,-32,-33,-34,]),'MAYIGUALQUE':([27,30,31,32,33,34,35,36,41,42,43,45,61,62,63,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[57,-38,-39,-40,-41,-42,-43,-44,57,57,57,57,-35,57,57,-37,-21,-22,-23,-24,-25,-26,57,57,-29,-30,-31,-32,-33,-34,]),'MENIGUALQUE':([27,30,31,32,33,34,35,36,41,42,43,45,61,62,63,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[58,-38,-39,-40,-41,-42,-43,-44,58,58,58,58,-35,58,58,-37,-21,-22,-23,-24,-25,-26,58,58,-29,-30,-31,-32,-33,-34,]),'IGUALQUE':([27,30,31,32,33,34,35,36,41,42,43,45,61,62,63,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[59,-38,-39,-40,-41,-42,-43,-44,59,59,59,59,-35,59,59,-37,-21,-22,-23,-24,-25,-26,59,59,-29,-30,-31,-32,-33,-34,]),'NIGUALQUE':([27,30,31,32,33,34,35,36,41,42,43,45,61,62,63,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[60,-38,-39,-40,-41,-42,-43,-44,60,60,60,60,-35,60,60,-37,-21,-22,-23,-24,-25,-26,60,60,-29,-30,-31,-32,-33,-34,]),'ELSE':([91,],[92,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,44,85,86,93,],[2,67,88,89,95,]),'instruccion':([0,2,44,67,85,86,88,89,93,95,],[3,18,3,18,3,3,18,18,3,18,]),'empty':([0,21,41,44,46,63,85,86,93,],[4,40,40,4,40,40,4,4,4,]),'func_main':([0,2,44,67,85,86,88,89,93,95,],[5,5,5,5,5,5,5,5,5,5,]),'imprimir_instr':([0,2,44,67,85,86,88,89,93,95,],[6,6,6,6,6,6,6,6,6,6,]),'definicion_instr':([0,2,44,67,85,86,88,89,93,95,],[7,7,7,7,7,7,7,7,7,7,]),'asignacion_instr':([0,2,44,67,85,86,88,89,93,95,],[8,8,8,8,8,8,8,8,8,8,]),'def_asig_instr':([0,2,44,67,85,86,88,89,93,95,],[9,9,9,9,9,9,9,9,9,9,]),'mientras_instr':([0,2,44,67,85,86,88,89,93,95,],[10,10,10,10,10,10,10,10,10,10,]),'if_instr':([0,2,44,67,85,86,88,89,92,93,95,],[11,11,11,11,11,11,11,11,94,11,11,]),'expresion':([20,22,23,24,26,28,29,38,47,48,49,50,51,52,53,54,55,56,57,58,59,60,],[27,41,42,43,45,61,62,63,70,71,72,73,74,75,76,77,78,79,80,81,82,83,]),'def_instr_prima':([21,41,46,63,],[37,64,69,84,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','grammar.py',170),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','grammar.py',176),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','grammar.py',182),
  ('instrucciones -> empty','instrucciones',1,'p_instrucciones_instruccion','grammar.py',183),
  ('instruccion -> func_main','instruccion',1,'p_instruccion','grammar.py',188),
  ('instruccion -> imprimir_instr','instruccion',1,'p_instruccion','grammar.py',189),
  ('instruccion -> definicion_instr','instruccion',1,'p_instruccion','grammar.py',190),
  ('instruccion -> asignacion_instr','instruccion',1,'p_instruccion','grammar.py',191),
  ('instruccion -> def_asig_instr','instruccion',1,'p_instruccion','grammar.py',192),
  ('instruccion -> mientras_instr','instruccion',1,'p_instruccion','grammar.py',193),
  ('instruccion -> if_instr','instruccion',1,'p_instruccion','grammar.py',194),
  ('func_main -> MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER','func_main',6,'p_func_main','grammar.py',200),
  ('imprimir_instr -> PRINT PARIZQ expresion PARDER def_instr_prima','imprimir_instr',5,'p_instruccion_imprimir','grammar.py',206),
  ('definicion_instr -> VAR ID def_instr_prima','definicion_instr',3,'p_instruccion_definicion','grammar.py',212),
  ('asignacion_instr -> ID IGUAL expresion def_instr_prima','asignacion_instr',4,'p_asignacion_instr','grammar.py',217),
  ('def_asig_instr -> VAR ID IGUAL expresion def_instr_prima','def_asig_instr',5,'p_definicion_asignacion','grammar.py',222),
  ('if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER','if_instr',7,'p_if_instr','grammar.py',228),
  ('if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER','if_instr',11,'p_if_else_instr','grammar.py',233),
  ('if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instr','if_instr',9,'p_else_if','grammar.py',238),
  ('mientras_instr -> MIENTRAS PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER','mientras_instr',7,'p_mientras_instr','grammar.py',244),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_binaria','grammar.py',250),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_binaria','grammar.py',251),
  ('expresion -> expresion POR expresion','expresion',3,'p_expresion_binaria','grammar.py',252),
  ('expresion -> expresion DIVIDIDO expresion','expresion',3,'p_expresion_binaria','grammar.py',253),
  ('expresion -> expresion ELEVADO expresion','expresion',3,'p_expresion_binaria','grammar.py',254),
  ('expresion -> expresion MOD expresion','expresion',3,'p_expresion_binaria','grammar.py',255),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_binaria','grammar.py',256),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_binaria','grammar.py',257),
  ('expresion -> expresion MAYQUE expresion','expresion',3,'p_expresion_binaria','grammar.py',258),
  ('expresion -> expresion MENQUE expresion','expresion',3,'p_expresion_binaria','grammar.py',259),
  ('expresion -> expresion MAYIGUALQUE expresion','expresion',3,'p_expresion_binaria','grammar.py',260),
  ('expresion -> expresion MENIGUALQUE expresion','expresion',3,'p_expresion_binaria','grammar.py',261),
  ('expresion -> expresion IGUALQUE expresion','expresion',3,'p_expresion_binaria','grammar.py',262),
  ('expresion -> expresion NIGUALQUE expresion','expresion',3,'p_expresion_binaria','grammar.py',263),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_unaria','grammar.py',300),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_negar','grammar.py',305),
  ('expresion -> PARIZQ expresion PARDER','expresion',3,'p_expresion_agrupacion','grammar.py',310),
  ('expresion -> ID','expresion',1,'p_expresionId','grammar.py',315),
  ('expresion -> ENTERO','expresion',1,'p_expresion_number','grammar.py',320),
  ('expresion -> DECIMAL','expresion',1,'p_expresion_number','grammar.py',321),
  ('expresion -> CADENA','expresion',1,'p_expresion_cadena','grammar.py',326),
  ('expresion -> CHAR','expresion',1,'p_expresion_char','grammar.py',331),
  ('expresion -> TRUE','expresion',1,'p_expresionBoolean','grammar.py',336),
  ('expresion -> FALSE','expresion',1,'p_expresionBoolean','grammar.py',337),
  ('expresion -> expresion','expresion',1,'p_expresion_cadena_numerico','grammar.py',342),
  ('def_instr_prima -> PTCOMA','def_instr_prima',1,'p_instrDef_prima','grammar.py',352),
  ('def_instr_prima -> empty','def_instr_prima',1,'p_instrDef_prima','grammar.py',353),
  ('empty -> <empty>','empty',0,'p_empty','grammar.py',358),
]
