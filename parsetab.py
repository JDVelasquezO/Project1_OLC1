
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftCONCATleftMASMENOSleftPORDIVIDIDOleftELEVADOrightUMENOSBOOLEAN CADENA CONCAT DECIMAL DIVIDIDO ELEVADO ELSE ENTERO FALSE ID IF IGUAL IGUALQUE LLAVDER LLAVIZQ MAIN MAS MAYQUE MENOS MENQUE MIENTRAS NIGUALQUE PARDER PARIZQ POR PRINT PTCOMA TRUE VARinit       : instruccionesinstrucciones    : instrucciones instruccioninstrucciones    : instruccion\n                         | emptyinstruccion      : func_main\n                        | imprimir_instr\n                        | definicion_instr\n                        | asignacion_instr\n                        | def_asig_instr\n                        | mientras_instr\n                        | if_instr\n                        | if_else_instrdef_funcs_vars   : definicion_instr\n                        | asignacion_instr\n                        | emptyfunc_main  : MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDERimprimir_instr     : PRINT PARIZQ print_expresion_general PARDER def_instr_primaprint_expresion_general  :  expresion_numerica\n                                | expresion_cadena\n                                | expresion_idexpresion_id   : IDdefinicion_instr   : VAR ID def_instr_primadef_instr_prima   : PTCOMA\n                        | emptyempty :asignacion_instr   : ID IGUAL asign_expresion_general def_instr_primaasign_expresion_general  :  expresion_numerica\n                            | expresion_cadena\n                            | expresion_iddef_asig_instr     : VAR ID IGUAL asign_def_expresion_general def_instr_primaasign_def_expresion_general  :  expresion_numerica\n                                | expresion_cadena\n                                | expresion_idmientras_instr     : MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDERif_instr           : IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDERif_else_instr      : IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDERexpresion_numerica : expresion_numerica MAS expresion_numerica\n                        | expresion_numerica MENOS expresion_numerica\n                        | expresion_numerica POR expresion_numerica\n                        | expresion_numerica DIVIDIDO expresion_numerica\n                        | expresion_numerica ELEVADO expresion_numericaexpresion_numerica : MENOS expresion_numerica %prec UMENOSexpresion_numerica : PARIZQ expresion_numerica PARDERexpresion_numerica : ENTERO\n                        | DECIMALexpresion_numerica   : IDexpresion_cadena     : expresion_cadena CONCAT expresion_cadenaexpresion_cadena     : CADENAexpresion_cadena     : expresion_numericaexpresion_logica : expresion_numerica MAYQUE expresion_numerica\n                        | expresion_numerica MENQUE expresion_numerica\n                        | expresion_numerica IGUALQUE expresion_numerica\n                        | expresion_numerica NIGUALQUE expresion_numerica'
    
_lr_action_items = {'MAIN':([0,2,3,4,5,6,7,8,9,10,11,12,19,22,33,34,35,36,37,39,40,41,42,43,44,47,49,51,58,59,60,61,62,63,70,71,72,73,74,75,76,77,78,79,80,81,86,87,88,89,90,91,93,94,95,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-2,-25,-44,-45,-21,-48,-22,-23,-24,-25,-27,-28,-29,-46,13,-25,-42,-25,-31,-32,-33,-26,13,-43,-17,-37,-38,-39,-40,-41,-47,-49,-30,13,13,-16,13,13,-34,-35,13,13,-36,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,19,22,33,34,35,36,37,39,40,41,42,43,44,47,49,51,58,59,60,61,62,63,70,71,72,73,74,75,76,77,78,79,80,81,86,87,88,89,90,91,93,94,95,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-2,-25,-44,-45,-21,-48,-22,-23,-24,-25,-27,-28,-29,-46,14,-25,-42,-25,-31,-32,-33,-26,14,-43,-17,-37,-38,-39,-40,-41,-47,-49,-30,14,14,-16,14,14,-34,-35,14,14,-36,]),'VAR':([0,2,3,4,5,6,7,8,9,10,11,12,19,22,33,34,35,36,37,39,40,41,42,43,44,47,49,51,58,59,60,61,62,63,70,71,72,73,74,75,76,77,78,79,80,81,86,87,88,89,90,91,93,94,95,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-2,-25,-44,-45,-21,-48,-22,-23,-24,-25,-27,-28,-29,-46,15,-25,-42,-25,-31,-32,-33,-26,15,-43,-17,-37,-38,-39,-40,-41,-47,-49,-30,15,15,-16,15,15,-34,-35,15,15,-36,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,15,19,21,22,23,24,25,27,32,33,34,35,36,37,38,39,40,41,42,43,44,47,49,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,86,87,88,89,90,91,93,94,95,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,22,-2,35,-25,35,47,47,47,47,-44,-45,-21,-48,-22,35,-23,-24,-25,-27,-28,-29,-46,16,-25,47,47,47,47,47,47,-42,-25,-31,-32,-33,-26,47,47,47,47,16,-43,-17,-37,-38,-39,-40,-41,-47,-49,-30,16,16,-16,16,16,-34,-35,16,16,-36,]),'MIENTRAS':([0,2,3,4,5,6,7,8,9,10,11,12,19,22,33,34,35,36,37,39,40,41,42,43,44,47,49,51,58,59,60,61,62,63,70,71,72,73,74,75,76,77,78,79,80,81,86,87,88,89,90,91,93,94,95,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-2,-25,-44,-45,-21,-48,-22,-23,-24,-25,-27,-28,-29,-46,17,-25,-42,-25,-31,-32,-33,-26,17,-43,-17,-37,-38,-39,-40,-41,-47,-49,-30,17,17,-16,17,17,-34,-35,17,17,-36,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,19,22,33,34,35,36,37,39,40,41,42,43,44,47,49,51,58,59,60,61,62,63,70,71,72,73,74,75,76,77,78,79,80,81,86,87,88,89,90,91,93,94,95,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-2,-25,-44,-45,-21,-48,-22,-23,-24,-25,-27,-28,-29,-46,18,-25,-42,-25,-31,-32,-33,-26,18,-43,-17,-37,-38,-39,-40,-41,-47,-49,-30,18,18,-16,18,18,-34,-35,18,18,-36,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,19,22,33,34,35,36,37,39,40,41,42,43,44,47,51,58,59,60,61,62,63,71,72,73,74,75,76,77,78,79,80,87,90,91,95,],[-25,0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-2,-25,-44,-45,-21,-48,-22,-23,-24,-25,-27,-28,-29,-46,-25,-42,-25,-31,-32,-33,-26,-43,-17,-37,-38,-39,-40,-41,-47,-49,-30,-16,-34,-35,-36,]),'LLAVDER':([3,4,5,6,7,8,9,10,11,12,19,22,33,34,35,36,37,39,40,41,42,43,44,47,49,51,58,59,60,61,62,63,70,71,72,73,74,75,76,77,78,79,80,81,86,87,88,89,90,91,93,94,95,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-2,-25,-44,-45,-21,-48,-22,-23,-24,-25,-27,-28,-29,-46,-25,-25,-42,-25,-31,-32,-33,-26,87,-43,-17,-37,-38,-39,-40,-41,-47,-49,-30,-25,-25,-16,90,91,-34,-35,-25,95,-36,]),'PARIZQ':([13,14,17,18,21,23,24,25,27,32,38,52,53,54,55,56,57,65,66,67,68,],[20,21,24,25,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'IGUAL':([16,22,],[23,38,]),'PARDER':([20,28,29,30,31,33,34,35,36,45,47,48,50,58,71,73,74,75,76,77,78,79,82,83,84,85,],[26,51,-18,-19,-20,-44,-45,-21,-48,64,-46,69,71,-42,-43,-37,-38,-39,-40,-41,-47,-49,-50,-51,-52,-53,]),'MENOS':([21,23,24,25,27,29,32,33,34,35,38,42,46,47,50,52,53,54,55,56,57,58,60,65,66,67,68,71,73,74,75,76,77,79,82,83,84,85,],[32,32,32,32,32,53,32,-44,-45,-46,32,53,53,-46,53,32,32,32,32,32,32,-42,53,32,32,32,32,-43,-37,-38,-39,-40,-41,53,53,53,53,53,]),'ENTERO':([21,23,24,25,27,32,38,52,53,54,55,56,57,65,66,67,68,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'DECIMAL':([21,23,24,25,27,32,38,52,53,54,55,56,57,65,66,67,68,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'CADENA':([21,23,38,57,],[36,36,36,36,]),'PTCOMA':([22,33,34,35,36,41,42,43,44,47,51,58,59,60,61,62,71,73,74,75,76,77,78,79,],[39,-44,-45,-21,-48,39,-27,-28,-29,-46,39,-42,39,-31,-32,-33,-43,-37,-38,-39,-40,-41,-47,-49,]),'LLAVIZQ':([26,64,69,92,],[49,81,86,93,]),'MAS':([29,33,34,35,42,46,47,50,58,60,71,73,74,75,76,77,79,82,83,84,85,],[52,-44,-45,-46,52,52,-46,52,-42,52,-43,-37,-38,-39,-40,-41,52,52,52,52,52,]),'POR':([29,33,34,35,42,46,47,50,58,60,71,73,74,75,76,77,79,82,83,84,85,],[54,-44,-45,-46,54,54,-46,54,-42,54,-43,54,54,-39,-40,-41,54,54,54,54,54,]),'DIVIDIDO':([29,33,34,35,42,46,47,50,58,60,71,73,74,75,76,77,79,82,83,84,85,],[55,-44,-45,-46,55,55,-46,55,-42,55,-43,55,55,-39,-40,-41,55,55,55,55,55,]),'ELEVADO':([29,33,34,35,42,46,47,50,58,60,71,73,74,75,76,77,79,82,83,84,85,],[56,-44,-45,-46,56,56,-46,56,-42,56,-43,56,56,56,56,-41,56,56,56,56,56,]),'CONCAT':([29,30,33,34,35,36,42,43,47,58,60,61,71,73,74,75,76,77,78,79,],[-49,57,-44,-45,-46,-48,-49,57,-46,-42,-49,57,-43,-37,-38,-39,-40,-41,-47,-49,]),'MAYQUE':([33,34,46,47,58,71,73,74,75,76,77,],[-44,-45,65,-46,-42,-43,-37,-38,-39,-40,-41,]),'MENQUE':([33,34,46,47,58,71,73,74,75,76,77,],[-44,-45,66,-46,-42,-43,-37,-38,-39,-40,-41,]),'IGUALQUE':([33,34,46,47,58,71,73,74,75,76,77,],[-44,-45,67,-46,-42,-43,-37,-38,-39,-40,-41,]),'NIGUALQUE':([33,34,46,47,58,71,73,74,75,76,77,],[-44,-45,68,-46,-42,-43,-37,-38,-39,-40,-41,]),'ELSE':([91,],[92,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,49,81,86,93,],[2,70,88,89,94,]),'instruccion':([0,2,49,70,81,86,88,89,93,94,],[3,19,3,19,3,3,19,19,3,19,]),'empty':([0,22,41,49,51,59,81,86,93,],[4,40,40,4,40,40,4,4,4,]),'func_main':([0,2,49,70,81,86,88,89,93,94,],[5,5,5,5,5,5,5,5,5,5,]),'imprimir_instr':([0,2,49,70,81,86,88,89,93,94,],[6,6,6,6,6,6,6,6,6,6,]),'definicion_instr':([0,2,49,70,81,86,88,89,93,94,],[7,7,7,7,7,7,7,7,7,7,]),'asignacion_instr':([0,2,49,70,81,86,88,89,93,94,],[8,8,8,8,8,8,8,8,8,8,]),'def_asig_instr':([0,2,49,70,81,86,88,89,93,94,],[9,9,9,9,9,9,9,9,9,9,]),'mientras_instr':([0,2,49,70,81,86,88,89,93,94,],[10,10,10,10,10,10,10,10,10,10,]),'if_instr':([0,2,49,70,81,86,88,89,93,94,],[11,11,11,11,11,11,11,11,11,11,]),'if_else_instr':([0,2,49,70,81,86,88,89,93,94,],[12,12,12,12,12,12,12,12,12,12,]),'print_expresion_general':([21,],[28,]),'expresion_numerica':([21,23,24,25,27,32,38,52,53,54,55,56,57,65,66,67,68,],[29,42,46,46,50,58,60,73,74,75,76,77,79,82,83,84,85,]),'expresion_cadena':([21,23,38,57,],[30,43,61,78,]),'expresion_id':([21,23,38,],[31,44,62,]),'def_instr_prima':([22,41,51,59,],[37,63,72,80,]),'asign_expresion_general':([23,],[41,]),'expresion_logica':([24,25,],[45,48,]),'asign_def_expresion_general':([38,],[59,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','grammar.py',143),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','grammar.py',148),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','grammar.py',154),
  ('instrucciones -> empty','instrucciones',1,'p_instrucciones_instruccion','grammar.py',155),
  ('instruccion -> func_main','instruccion',1,'p_instruccion','grammar.py',160),
  ('instruccion -> imprimir_instr','instruccion',1,'p_instruccion','grammar.py',161),
  ('instruccion -> definicion_instr','instruccion',1,'p_instruccion','grammar.py',162),
  ('instruccion -> asignacion_instr','instruccion',1,'p_instruccion','grammar.py',163),
  ('instruccion -> def_asig_instr','instruccion',1,'p_instruccion','grammar.py',164),
  ('instruccion -> mientras_instr','instruccion',1,'p_instruccion','grammar.py',165),
  ('instruccion -> if_instr','instruccion',1,'p_instruccion','grammar.py',166),
  ('instruccion -> if_else_instr','instruccion',1,'p_instruccion','grammar.py',167),
  ('def_funcs_vars -> definicion_instr','def_funcs_vars',1,'p_beforeOfMain','grammar.py',172),
  ('def_funcs_vars -> asignacion_instr','def_funcs_vars',1,'p_beforeOfMain','grammar.py',173),
  ('def_funcs_vars -> empty','def_funcs_vars',1,'p_beforeOfMain','grammar.py',174),
  ('func_main -> MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER','func_main',6,'p_func_main','grammar.py',179),
  ('imprimir_instr -> PRINT PARIZQ print_expresion_general PARDER def_instr_prima','imprimir_instr',5,'p_instruccion_imprimir','grammar.py',184),
  ('print_expresion_general -> expresion_numerica','print_expresion_general',1,'p_expresionGeneralImprimir','grammar.py',189),
  ('print_expresion_general -> expresion_cadena','print_expresion_general',1,'p_expresionGeneralImprimir','grammar.py',190),
  ('print_expresion_general -> expresion_id','print_expresion_general',1,'p_expresionGeneralImprimir','grammar.py',191),
  ('expresion_id -> ID','expresion_id',1,'p_expresionId','grammar.py',196),
  ('definicion_instr -> VAR ID def_instr_prima','definicion_instr',3,'p_instruccion_definicion','grammar.py',207),
  ('def_instr_prima -> PTCOMA','def_instr_prima',1,'p_instrDef_prima','grammar.py',212),
  ('def_instr_prima -> empty','def_instr_prima',1,'p_instrDef_prima','grammar.py',213),
  ('empty -> <empty>','empty',0,'p_empty','grammar.py',218),
  ('asignacion_instr -> ID IGUAL asign_expresion_general def_instr_prima','asignacion_instr',4,'p_asignacion_instr','grammar.py',223),
  ('asign_expresion_general -> expresion_numerica','asign_expresion_general',1,'p_expresionGeneralAsignar','grammar.py',228),
  ('asign_expresion_general -> expresion_cadena','asign_expresion_general',1,'p_expresionGeneralAsignar','grammar.py',229),
  ('asign_expresion_general -> expresion_id','asign_expresion_general',1,'p_expresionGeneralAsignar','grammar.py',230),
  ('def_asig_instr -> VAR ID IGUAL asign_def_expresion_general def_instr_prima','def_asig_instr',5,'p_definicion_asignacion','grammar.py',235),
  ('asign_def_expresion_general -> expresion_numerica','asign_def_expresion_general',1,'p_expresionGeneralDefAsign','grammar.py',240),
  ('asign_def_expresion_general -> expresion_cadena','asign_def_expresion_general',1,'p_expresionGeneralDefAsign','grammar.py',241),
  ('asign_def_expresion_general -> expresion_id','asign_def_expresion_general',1,'p_expresionGeneralDefAsign','grammar.py',242),
  ('mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER','mientras_instr',7,'p_mientras_instr','grammar.py',247),
  ('if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER','if_instr',7,'p_if_instr','grammar.py',252),
  ('if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER','if_else_instr',11,'p_if_else_instr','grammar.py',257),
  ('expresion_numerica -> expresion_numerica MAS expresion_numerica','expresion_numerica',3,'p_expresion_binaria','grammar.py',262),
  ('expresion_numerica -> expresion_numerica MENOS expresion_numerica','expresion_numerica',3,'p_expresion_binaria','grammar.py',263),
  ('expresion_numerica -> expresion_numerica POR expresion_numerica','expresion_numerica',3,'p_expresion_binaria','grammar.py',264),
  ('expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica','expresion_numerica',3,'p_expresion_binaria','grammar.py',265),
  ('expresion_numerica -> expresion_numerica ELEVADO expresion_numerica','expresion_numerica',3,'p_expresion_binaria','grammar.py',266),
  ('expresion_numerica -> MENOS expresion_numerica','expresion_numerica',2,'p_expresion_unaria','grammar.py',285),
  ('expresion_numerica -> PARIZQ expresion_numerica PARDER','expresion_numerica',3,'p_expresion_agrupacion','grammar.py',290),
  ('expresion_numerica -> ENTERO','expresion_numerica',1,'p_expresion_number','grammar.py',295),
  ('expresion_numerica -> DECIMAL','expresion_numerica',1,'p_expresion_number','grammar.py',296),
  ('expresion_numerica -> ID','expresion_numerica',1,'p_expresion_id','grammar.py',301),
  ('expresion_cadena -> expresion_cadena CONCAT expresion_cadena','expresion_cadena',3,'p_expresion_concatenacion','grammar.py',306),
  ('expresion_cadena -> CADENA','expresion_cadena',1,'p_expresion_cadena','grammar.py',311),
  ('expresion_cadena -> expresion_numerica','expresion_cadena',1,'p_expresion_cadena_numerico','grammar.py',316),
  ('expresion_logica -> expresion_numerica MAYQUE expresion_numerica','expresion_logica',3,'p_expresion_logica','grammar.py',321),
  ('expresion_logica -> expresion_numerica MENQUE expresion_numerica','expresion_logica',3,'p_expresion_logica','grammar.py',322),
  ('expresion_logica -> expresion_numerica IGUALQUE expresion_numerica','expresion_logica',3,'p_expresion_logica','grammar.py',323),
  ('expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica','expresion_logica',3,'p_expresion_logica','grammar.py',324),
]
