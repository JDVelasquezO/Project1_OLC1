Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instrucciones -> empty
Rule 5     instruccion -> func_main
Rule 6     instruccion -> imprimir_instr
Rule 7     instruccion -> definicion_instr
Rule 8     instruccion -> asignacion_instr
Rule 9     instruccion -> def_asig_instr
Rule 10    instruccion -> while_instr
Rule 11    instruccion -> if_instr
Rule 12    instruccion -> expresion
Rule 13    func_main -> MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
Rule 14    imprimir_instr -> PRINT PARIZQ expresion PARDER def_instr_prima
Rule 15    definicion_instr -> VAR ID def_instr_prima
Rule 16    asignacion_instr -> ID IGUAL expresion def_instr_prima
Rule 17    def_asig_instr -> VAR ID IGUAL expresion def_instr_prima
Rule 18    if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
Rule 19    if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
Rule 20    if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instr
Rule 21    while_instr -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
Rule 22    expresion -> expresion INCREMENT def_instr_prima
Rule 23    expresion -> expresion DECREMENT def_instr_prima
Rule 24    expresion -> expresion MAS expresion
Rule 25    expresion -> expresion MENOS expresion
Rule 26    expresion -> expresion POR expresion
Rule 27    expresion -> expresion DIVIDIDO expresion
Rule 28    expresion -> expresion ELEVADO expresion
Rule 29    expresion -> expresion MOD expresion
Rule 30    expresion -> expresion AND expresion
Rule 31    expresion -> expresion OR expresion
Rule 32    expresion -> expresion MAYQUE expresion
Rule 33    expresion -> expresion MENQUE expresion
Rule 34    expresion -> expresion MAYIGUALQUE expresion
Rule 35    expresion -> expresion MENIGUALQUE expresion
Rule 36    expresion -> expresion IGUALQUE expresion
Rule 37    expresion -> expresion NIGUALQUE expresion
Rule 38    expresion -> MENOS expresion
Rule 39    expresion -> NOT expresion
Rule 40    expresion -> PARIZQ expresion PARDER
Rule 41    expresion -> ID
Rule 42    expresion -> ENTERO
Rule 43    expresion -> DECIMAL
Rule 44    expresion -> CADENA
Rule 45    expresion -> CHAR
Rule 46    expresion -> TRUE
Rule 47    expresion -> FALSE
Rule 48    def_instr_prima -> PTCOMA
Rule 49    def_instr_prima -> empty
Rule 50    empty -> <empty>

Terminals, with rules where they appear

AND                  : 30
CADENA               : 44
CHAR                 : 45
DECIMAL              : 43
DECREMENT            : 23
DIVIDIDO             : 27
ELEVADO              : 28
ELSE                 : 19 20
ENTERO               : 42
FALSE                : 47
ID                   : 15 16 17 41
IF                   : 18 19 20
IGUAL                : 16 17
IGUALQUE             : 36
INCREMENT            : 22
LLAVDER              : 13 18 19 19 20 21
LLAVIZQ              : 13 18 19 19 20 21
MAIN                 : 13
MAS                  : 24
MAYIGUALQUE          : 34
MAYQUE               : 32
MENIGUALQUE          : 35
MENOS                : 25 38
MENQUE               : 33
MOD                  : 29
NIGUALQUE            : 37
NOT                  : 39
OR                   : 31
PARDER               : 13 14 18 19 20 21 40
PARIZQ               : 13 14 18 19 20 21 40
POR                  : 26
PRINT                : 14
PTCOMA               : 48
TRUE                 : 46
VAR                  : 15 17
WHILE                : 21
error                : 

Nonterminals, with rules where they appear

asignacion_instr     : 8
def_asig_instr       : 9
def_instr_prima      : 14 15 16 17 22 23
definicion_instr     : 7
empty                : 4 49
expresion            : 12 14 16 17 18 19 20 21 22 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 39 40
func_main            : 5
if_instr             : 11 20
imprimir_instr       : 6
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2 13 18 19 19 20 21
while_instr          : 10

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instrucciones -> . empty
    (5) instruccion -> . func_main
    (6) instruccion -> . imprimir_instr
    (7) instruccion -> . definicion_instr
    (8) instruccion -> . asignacion_instr
    (9) instruccion -> . def_asig_instr
    (10) instruccion -> . while_instr
    (11) instruccion -> . if_instr
    (12) instruccion -> . expresion
    (50) empty -> .
    (13) func_main -> . MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (14) imprimir_instr -> . PRINT PARIZQ expresion PARDER def_instr_prima
    (15) definicion_instr -> . VAR ID def_instr_prima
    (16) asignacion_instr -> . ID IGUAL expresion def_instr_prima
    (17) def_asig_instr -> . VAR ID IGUAL expresion def_instr_prima
    (21) while_instr -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (18) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (19) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (20) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instr
    (22) expresion -> . expresion INCREMENT def_instr_prima
    (23) expresion -> . expresion DECREMENT def_instr_prima
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion ELEVADO expresion
    (29) expresion -> . expresion MOD expresion
    (30) expresion -> . expresion AND expresion
    (31) expresion -> . expresion OR expresion
    (32) expresion -> . expresion MAYQUE expresion
    (33) expresion -> . expresion MENQUE expresion
    (34) expresion -> . expresion MAYIGUALQUE expresion
    (35) expresion -> . expresion MENIGUALQUE expresion
    (36) expresion -> . expresion IGUALQUE expresion
    (37) expresion -> . expresion NIGUALQUE expresion
    (38) expresion -> . MENOS expresion
    (39) expresion -> . NOT expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . ID
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . CHAR
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE

  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    $end            reduce using rule 50 (empty -> .)
    MAIN            shift and go to state 13
    PRINT           shift and go to state 15
    VAR             shift and go to state 16
    ID              shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    MENOS           shift and go to state 20
    NOT             shift and go to state 21
    PARIZQ          shift and go to state 14
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 24
    CHAR            shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

  ! MAIN            [ reduce using rule 50 (empty -> .) ]
  ! PRINT           [ reduce using rule 50 (empty -> .) ]
  ! VAR             [ reduce using rule 50 (empty -> .) ]
  ! ID              [ reduce using rule 50 (empty -> .) ]
  ! WHILE           [ reduce using rule 50 (empty -> .) ]
  ! IF              [ reduce using rule 50 (empty -> .) ]
  ! MENOS           [ reduce using rule 50 (empty -> .) ]
  ! NOT             [ reduce using rule 50 (empty -> .) ]
  ! PARIZQ          [ reduce using rule 50 (empty -> .) ]
  ! ENTERO          [ reduce using rule 50 (empty -> .) ]
  ! DECIMAL         [ reduce using rule 50 (empty -> .) ]
  ! CADENA          [ reduce using rule 50 (empty -> .) ]
  ! CHAR            [ reduce using rule 50 (empty -> .) ]
  ! TRUE            [ reduce using rule 50 (empty -> .) ]
  ! FALSE           [ reduce using rule 50 (empty -> .) ]

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    empty                          shift and go to state 4
    func_main                      shift and go to state 5
    imprimir_instr                 shift and go to state 6
    definicion_instr               shift and go to state 7
    asignacion_instr               shift and go to state 8
    def_asig_instr                 shift and go to state 9
    while_instr                    shift and go to state 10
    if_instr                       shift and go to state 11
    expresion                      shift and go to state 12

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (5) instruccion -> . func_main
    (6) instruccion -> . imprimir_instr
    (7) instruccion -> . definicion_instr
    (8) instruccion -> . asignacion_instr
    (9) instruccion -> . def_asig_instr
    (10) instruccion -> . while_instr
    (11) instruccion -> . if_instr
    (12) instruccion -> . expresion
    (13) func_main -> . MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (14) imprimir_instr -> . PRINT PARIZQ expresion PARDER def_instr_prima
    (15) definicion_instr -> . VAR ID def_instr_prima
    (16) asignacion_instr -> . ID IGUAL expresion def_instr_prima
    (17) def_asig_instr -> . VAR ID IGUAL expresion def_instr_prima
    (21) while_instr -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (18) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (19) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (20) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instr
    (22) expresion -> . expresion INCREMENT def_instr_prima
    (23) expresion -> . expresion DECREMENT def_instr_prima
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion ELEVADO expresion
    (29) expresion -> . expresion MOD expresion
    (30) expresion -> . expresion AND expresion
    (31) expresion -> . expresion OR expresion
    (32) expresion -> . expresion MAYQUE expresion
    (33) expresion -> . expresion MENQUE expresion
    (34) expresion -> . expresion MAYIGUALQUE expresion
    (35) expresion -> . expresion MENIGUALQUE expresion
    (36) expresion -> . expresion IGUALQUE expresion
    (37) expresion -> . expresion NIGUALQUE expresion
    (38) expresion -> . MENOS expresion
    (39) expresion -> . NOT expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . ID
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . CHAR
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE

    $end            reduce using rule 1 (init -> instrucciones .)
    MAIN            shift and go to state 13
    PRINT           shift and go to state 15
    VAR             shift and go to state 16
    ID              shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    MENOS           shift and go to state 20
    NOT             shift and go to state 21
    PARIZQ          shift and go to state 14
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 24
    CHAR            shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    instruccion                    shift and go to state 28
    func_main                      shift and go to state 5
    imprimir_instr                 shift and go to state 6
    definicion_instr               shift and go to state 7
    asignacion_instr               shift and go to state 8
    def_asig_instr                 shift and go to state 9
    while_instr                    shift and go to state 10
    if_instr                       shift and go to state 11
    expresion                      shift and go to state 12

state 3

    (3) instrucciones -> instruccion .

    MAIN            reduce using rule 3 (instrucciones -> instruccion .)
    PRINT           reduce using rule 3 (instrucciones -> instruccion .)
    VAR             reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    WHILE           reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    MENOS           reduce using rule 3 (instrucciones -> instruccion .)
    NOT             reduce using rule 3 (instrucciones -> instruccion .)
    PARIZQ          reduce using rule 3 (instrucciones -> instruccion .)
    ENTERO          reduce using rule 3 (instrucciones -> instruccion .)
    DECIMAL         reduce using rule 3 (instrucciones -> instruccion .)
    CADENA          reduce using rule 3 (instrucciones -> instruccion .)
    CHAR            reduce using rule 3 (instrucciones -> instruccion .)
    TRUE            reduce using rule 3 (instrucciones -> instruccion .)
    FALSE           reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLAVDER         reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instrucciones -> empty .

    MAIN            reduce using rule 4 (instrucciones -> empty .)
    PRINT           reduce using rule 4 (instrucciones -> empty .)
    VAR             reduce using rule 4 (instrucciones -> empty .)
    ID              reduce using rule 4 (instrucciones -> empty .)
    WHILE           reduce using rule 4 (instrucciones -> empty .)
    IF              reduce using rule 4 (instrucciones -> empty .)
    MENOS           reduce using rule 4 (instrucciones -> empty .)
    NOT             reduce using rule 4 (instrucciones -> empty .)
    PARIZQ          reduce using rule 4 (instrucciones -> empty .)
    ENTERO          reduce using rule 4 (instrucciones -> empty .)
    DECIMAL         reduce using rule 4 (instrucciones -> empty .)
    CADENA          reduce using rule 4 (instrucciones -> empty .)
    CHAR            reduce using rule 4 (instrucciones -> empty .)
    TRUE            reduce using rule 4 (instrucciones -> empty .)
    FALSE           reduce using rule 4 (instrucciones -> empty .)
    $end            reduce using rule 4 (instrucciones -> empty .)
    LLAVDER         reduce using rule 4 (instrucciones -> empty .)


state 5

    (5) instruccion -> func_main .

    MAIN            reduce using rule 5 (instruccion -> func_main .)
    PRINT           reduce using rule 5 (instruccion -> func_main .)
    VAR             reduce using rule 5 (instruccion -> func_main .)
    ID              reduce using rule 5 (instruccion -> func_main .)
    WHILE           reduce using rule 5 (instruccion -> func_main .)
    IF              reduce using rule 5 (instruccion -> func_main .)
    MENOS           reduce using rule 5 (instruccion -> func_main .)
    NOT             reduce using rule 5 (instruccion -> func_main .)
    PARIZQ          reduce using rule 5 (instruccion -> func_main .)
    ENTERO          reduce using rule 5 (instruccion -> func_main .)
    DECIMAL         reduce using rule 5 (instruccion -> func_main .)
    CADENA          reduce using rule 5 (instruccion -> func_main .)
    CHAR            reduce using rule 5 (instruccion -> func_main .)
    TRUE            reduce using rule 5 (instruccion -> func_main .)
    FALSE           reduce using rule 5 (instruccion -> func_main .)
    $end            reduce using rule 5 (instruccion -> func_main .)
    LLAVDER         reduce using rule 5 (instruccion -> func_main .)


state 6

    (6) instruccion -> imprimir_instr .

    MAIN            reduce using rule 6 (instruccion -> imprimir_instr .)
    PRINT           reduce using rule 6 (instruccion -> imprimir_instr .)
    VAR             reduce using rule 6 (instruccion -> imprimir_instr .)
    ID              reduce using rule 6 (instruccion -> imprimir_instr .)
    WHILE           reduce using rule 6 (instruccion -> imprimir_instr .)
    IF              reduce using rule 6 (instruccion -> imprimir_instr .)
    MENOS           reduce using rule 6 (instruccion -> imprimir_instr .)
    NOT             reduce using rule 6 (instruccion -> imprimir_instr .)
    PARIZQ          reduce using rule 6 (instruccion -> imprimir_instr .)
    ENTERO          reduce using rule 6 (instruccion -> imprimir_instr .)
    DECIMAL         reduce using rule 6 (instruccion -> imprimir_instr .)
    CADENA          reduce using rule 6 (instruccion -> imprimir_instr .)
    CHAR            reduce using rule 6 (instruccion -> imprimir_instr .)
    TRUE            reduce using rule 6 (instruccion -> imprimir_instr .)
    FALSE           reduce using rule 6 (instruccion -> imprimir_instr .)
    $end            reduce using rule 6 (instruccion -> imprimir_instr .)
    LLAVDER         reduce using rule 6 (instruccion -> imprimir_instr .)


state 7

    (7) instruccion -> definicion_instr .

    MAIN            reduce using rule 7 (instruccion -> definicion_instr .)
    PRINT           reduce using rule 7 (instruccion -> definicion_instr .)
    VAR             reduce using rule 7 (instruccion -> definicion_instr .)
    ID              reduce using rule 7 (instruccion -> definicion_instr .)
    WHILE           reduce using rule 7 (instruccion -> definicion_instr .)
    IF              reduce using rule 7 (instruccion -> definicion_instr .)
    MENOS           reduce using rule 7 (instruccion -> definicion_instr .)
    NOT             reduce using rule 7 (instruccion -> definicion_instr .)
    PARIZQ          reduce using rule 7 (instruccion -> definicion_instr .)
    ENTERO          reduce using rule 7 (instruccion -> definicion_instr .)
    DECIMAL         reduce using rule 7 (instruccion -> definicion_instr .)
    CADENA          reduce using rule 7 (instruccion -> definicion_instr .)
    CHAR            reduce using rule 7 (instruccion -> definicion_instr .)
    TRUE            reduce using rule 7 (instruccion -> definicion_instr .)
    FALSE           reduce using rule 7 (instruccion -> definicion_instr .)
    $end            reduce using rule 7 (instruccion -> definicion_instr .)
    LLAVDER         reduce using rule 7 (instruccion -> definicion_instr .)


state 8

    (8) instruccion -> asignacion_instr .

    MAIN            reduce using rule 8 (instruccion -> asignacion_instr .)
    PRINT           reduce using rule 8 (instruccion -> asignacion_instr .)
    VAR             reduce using rule 8 (instruccion -> asignacion_instr .)
    ID              reduce using rule 8 (instruccion -> asignacion_instr .)
    WHILE           reduce using rule 8 (instruccion -> asignacion_instr .)
    IF              reduce using rule 8 (instruccion -> asignacion_instr .)
    MENOS           reduce using rule 8 (instruccion -> asignacion_instr .)
    NOT             reduce using rule 8 (instruccion -> asignacion_instr .)
    PARIZQ          reduce using rule 8 (instruccion -> asignacion_instr .)
    ENTERO          reduce using rule 8 (instruccion -> asignacion_instr .)
    DECIMAL         reduce using rule 8 (instruccion -> asignacion_instr .)
    CADENA          reduce using rule 8 (instruccion -> asignacion_instr .)
    CHAR            reduce using rule 8 (instruccion -> asignacion_instr .)
    TRUE            reduce using rule 8 (instruccion -> asignacion_instr .)
    FALSE           reduce using rule 8 (instruccion -> asignacion_instr .)
    $end            reduce using rule 8 (instruccion -> asignacion_instr .)
    LLAVDER         reduce using rule 8 (instruccion -> asignacion_instr .)


state 9

    (9) instruccion -> def_asig_instr .

    MAIN            reduce using rule 9 (instruccion -> def_asig_instr .)
    PRINT           reduce using rule 9 (instruccion -> def_asig_instr .)
    VAR             reduce using rule 9 (instruccion -> def_asig_instr .)
    ID              reduce using rule 9 (instruccion -> def_asig_instr .)
    WHILE           reduce using rule 9 (instruccion -> def_asig_instr .)
    IF              reduce using rule 9 (instruccion -> def_asig_instr .)
    MENOS           reduce using rule 9 (instruccion -> def_asig_instr .)
    NOT             reduce using rule 9 (instruccion -> def_asig_instr .)
    PARIZQ          reduce using rule 9 (instruccion -> def_asig_instr .)
    ENTERO          reduce using rule 9 (instruccion -> def_asig_instr .)
    DECIMAL         reduce using rule 9 (instruccion -> def_asig_instr .)
    CADENA          reduce using rule 9 (instruccion -> def_asig_instr .)
    CHAR            reduce using rule 9 (instruccion -> def_asig_instr .)
    TRUE            reduce using rule 9 (instruccion -> def_asig_instr .)
    FALSE           reduce using rule 9 (instruccion -> def_asig_instr .)
    $end            reduce using rule 9 (instruccion -> def_asig_instr .)
    LLAVDER         reduce using rule 9 (instruccion -> def_asig_instr .)


state 10

    (10) instruccion -> while_instr .

    MAIN            reduce using rule 10 (instruccion -> while_instr .)
    PRINT           reduce using rule 10 (instruccion -> while_instr .)
    VAR             reduce using rule 10 (instruccion -> while_instr .)
    ID              reduce using rule 10 (instruccion -> while_instr .)
    WHILE           reduce using rule 10 (instruccion -> while_instr .)
    IF              reduce using rule 10 (instruccion -> while_instr .)
    MENOS           reduce using rule 10 (instruccion -> while_instr .)
    NOT             reduce using rule 10 (instruccion -> while_instr .)
    PARIZQ          reduce using rule 10 (instruccion -> while_instr .)
    ENTERO          reduce using rule 10 (instruccion -> while_instr .)
    DECIMAL         reduce using rule 10 (instruccion -> while_instr .)
    CADENA          reduce using rule 10 (instruccion -> while_instr .)
    CHAR            reduce using rule 10 (instruccion -> while_instr .)
    TRUE            reduce using rule 10 (instruccion -> while_instr .)
    FALSE           reduce using rule 10 (instruccion -> while_instr .)
    $end            reduce using rule 10 (instruccion -> while_instr .)
    LLAVDER         reduce using rule 10 (instruccion -> while_instr .)


state 11

    (11) instruccion -> if_instr .

    MAIN            reduce using rule 11 (instruccion -> if_instr .)
    PRINT           reduce using rule 11 (instruccion -> if_instr .)
    VAR             reduce using rule 11 (instruccion -> if_instr .)
    ID              reduce using rule 11 (instruccion -> if_instr .)
    WHILE           reduce using rule 11 (instruccion -> if_instr .)
    IF              reduce using rule 11 (instruccion -> if_instr .)
    MENOS           reduce using rule 11 (instruccion -> if_instr .)
    NOT             reduce using rule 11 (instruccion -> if_instr .)
    PARIZQ          reduce using rule 11 (instruccion -> if_instr .)
    ENTERO          reduce using rule 11 (instruccion -> if_instr .)
    DECIMAL         reduce using rule 11 (instruccion -> if_instr .)
    CADENA          reduce using rule 11 (instruccion -> if_instr .)
    CHAR            reduce using rule 11 (instruccion -> if_instr .)
    TRUE            reduce using rule 11 (instruccion -> if_instr .)
    FALSE           reduce using rule 11 (instruccion -> if_instr .)
    $end            reduce using rule 11 (instruccion -> if_instr .)
    LLAVDER         reduce using rule 11 (instruccion -> if_instr .)


state 12

    (12) instruccion -> expresion .
    (22) expresion -> expresion . INCREMENT def_instr_prima
    (23) expresion -> expresion . DECREMENT def_instr_prima
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . ELEVADO expresion
    (29) expresion -> expresion . MOD expresion
    (30) expresion -> expresion . AND expresion
    (31) expresion -> expresion . OR expresion
    (32) expresion -> expresion . MAYQUE expresion
    (33) expresion -> expresion . MENQUE expresion
    (34) expresion -> expresion . MAYIGUALQUE expresion
    (35) expresion -> expresion . MENIGUALQUE expresion
    (36) expresion -> expresion . IGUALQUE expresion
    (37) expresion -> expresion . NIGUALQUE expresion

  ! shift/reduce conflict for MENOS resolved as shift
    MAIN            reduce using rule 12 (instruccion -> expresion .)
    PRINT           reduce using rule 12 (instruccion -> expresion .)
    VAR             reduce using rule 12 (instruccion -> expresion .)
    ID              reduce using rule 12 (instruccion -> expresion .)
    WHILE           reduce using rule 12 (instruccion -> expresion .)
    IF              reduce using rule 12 (instruccion -> expresion .)
    NOT             reduce using rule 12 (instruccion -> expresion .)
    PARIZQ          reduce using rule 12 (instruccion -> expresion .)
    ENTERO          reduce using rule 12 (instruccion -> expresion .)
    DECIMAL         reduce using rule 12 (instruccion -> expresion .)
    CADENA          reduce using rule 12 (instruccion -> expresion .)
    CHAR            reduce using rule 12 (instruccion -> expresion .)
    TRUE            reduce using rule 12 (instruccion -> expresion .)
    FALSE           reduce using rule 12 (instruccion -> expresion .)
    $end            reduce using rule 12 (instruccion -> expresion .)
    LLAVDER         reduce using rule 12 (instruccion -> expresion .)
    INCREMENT       shift and go to state 29
    DECREMENT       shift and go to state 30
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    ELEVADO         shift and go to state 35
    MOD             shift and go to state 36
    AND             shift and go to state 37
    OR              shift and go to state 38
    MAYQUE          shift and go to state 39
    MENQUE          shift and go to state 40
    MAYIGUALQUE     shift and go to state 41
    MENIGUALQUE     shift and go to state 42
    IGUALQUE        shift and go to state 43
    NIGUALQUE       shift and go to state 44

  ! MENOS           [ reduce using rule 12 (instruccion -> expresion .) ]


state 13

    (13) func_main -> MAIN . PARIZQ PARDER LLAVIZQ instrucciones LLAVDER

    PARIZQ          shift and go to state 45


state 14

    (40) expresion -> PARIZQ . expresion PARDER
    (22) expresion -> . expresion INCREMENT def_instr_prima
    (23) expresion -> . expresion DECREMENT def_instr_prima
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion ELEVADO expresion
    (29) expresion -> . expresion MOD expresion
    (30) expresion -> . expresion AND expresion
    (31) expresion -> . expresion OR expresion
    (32) expresion -> . expresion MAYQUE expresion
    (33) expresion -> . expresion MENQUE expresion
    (34) expresion -> . expresion MAYIGUALQUE expresion
    (35) expresion -> . expresion MENIGUALQUE expresion
    (36) expresion -> . expresion IGUALQUE expresion
    (37) expresion -> . expresion NIGUALQUE expresion
    (38) expresion -> . MENOS expresion
    (39) expresion -> . NOT expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . ID
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . CHAR
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE

    MENOS           shift and go to state 20
    NOT             shift and go to state 21
    PARIZQ          shift and go to state 14
    ID              shift and go to state 47
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 24
    CHAR            shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expresion                      shift and go to state 46

state 15

    (14) imprimir_instr -> PRINT . PARIZQ expresion PARDER def_instr_prima

    PARIZQ          shift and go to state 48


state 16

    (15) definicion_instr -> VAR . ID def_instr_prima
    (17) def_asig_instr -> VAR . ID IGUAL expresion def_instr_prima

    ID              shift and go to state 49


state 17

    (16) asignacion_instr -> ID . IGUAL expresion def_instr_prima
    (41) expresion -> ID .

    IGUAL           shift and go to state 50
    INCREMENT       reduce using rule 41 (expresion -> ID .)
    DECREMENT       reduce using rule 41 (expresion -> ID .)
    MAS             reduce using rule 41 (expresion -> ID .)
    MENOS           reduce using rule 41 (expresion -> ID .)
    POR             reduce using rule 41 (expresion -> ID .)
    DIVIDIDO        reduce using rule 41 (expresion -> ID .)
    ELEVADO         reduce using rule 41 (expresion -> ID .)
    MOD             reduce using rule 41 (expresion -> ID .)
    AND             reduce using rule 41 (expresion -> ID .)
    OR              reduce using rule 41 (expresion -> ID .)
    MAYQUE          reduce using rule 41 (expresion -> ID .)
    MENQUE          reduce using rule 41 (expresion -> ID .)
    MAYIGUALQUE     reduce using rule 41 (expresion -> ID .)
    MENIGUALQUE     reduce using rule 41 (expresion -> ID .)
    IGUALQUE        reduce using rule 41 (expresion -> ID .)
    NIGUALQUE       reduce using rule 41 (expresion -> ID .)
    MAIN            reduce using rule 41 (expresion -> ID .)
    PRINT           reduce using rule 41 (expresion -> ID .)
    VAR             reduce using rule 41 (expresion -> ID .)
    ID              reduce using rule 41 (expresion -> ID .)
    WHILE           reduce using rule 41 (expresion -> ID .)
    IF              reduce using rule 41 (expresion -> ID .)
    NOT             reduce using rule 41 (expresion -> ID .)
    PARIZQ          reduce using rule 41 (expresion -> ID .)
    ENTERO          reduce using rule 41 (expresion -> ID .)
    DECIMAL         reduce using rule 41 (expresion -> ID .)
    CADENA          reduce using rule 41 (expresion -> ID .)
    CHAR            reduce using rule 41 (expresion -> ID .)
    TRUE            reduce using rule 41 (expresion -> ID .)
    FALSE           reduce using rule 41 (expresion -> ID .)
    $end            reduce using rule 41 (expresion -> ID .)
    LLAVDER         reduce using rule 41 (expresion -> ID .)


state 18

    (21) while_instr -> WHILE . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER

    PARIZQ          shift and go to state 51


state 19

    (18) if_instr -> IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (19) if_instr -> IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (20) if_instr -> IF . PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instr

    PARIZQ          shift and go to state 52


state 20

    (38) expresion -> MENOS . expresion
    (22) expresion -> . expresion INCREMENT def_instr_prima
    (23) expresion -> . expresion DECREMENT def_instr_prima
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion ELEVADO expresion
    (29) expresion -> . expresion MOD expresion
    (30) expresion -> . expresion AND expresion
    (31) expresion -> . expresion OR expresion
    (32) expresion -> . expresion MAYQUE expresion
    (33) expresion -> . expresion MENQUE expresion
    (34) expresion -> . expresion MAYIGUALQUE expresion
    (35) expresion -> . expresion MENIGUALQUE expresion
    (36) expresion -> . expresion IGUALQUE expresion
    (37) expresion -> . expresion NIGUALQUE expresion
    (38) expresion -> . MENOS expresion
    (39) expresion -> . NOT expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . ID
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . CHAR
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE

    MENOS           shift and go to state 20
    NOT             shift and go to state 21
    PARIZQ          shift and go to state 14
    ID              shift and go to state 47
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 24
    CHAR            shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expresion                      shift and go to state 53

state 21

    (39) expresion -> NOT . expresion
    (22) expresion -> . expresion INCREMENT def_instr_prima
    (23) expresion -> . expresion DECREMENT def_instr_prima
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion ELEVADO expresion
    (29) expresion -> . expresion MOD expresion
    (30) expresion -> . expresion AND expresion
    (31) expresion -> . expresion OR expresion
    (32) expresion -> . expresion MAYQUE expresion
    (33) expresion -> . expresion MENQUE expresion
    (34) expresion -> . expresion MAYIGUALQUE expresion
    (35) expresion -> . expresion MENIGUALQUE expresion
    (36) expresion -> . expresion IGUALQUE expresion
    (37) expresion -> . expresion NIGUALQUE expresion
    (38) expresion -> . MENOS expresion
    (39) expresion -> . NOT expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . ID
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . CHAR
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE

    MENOS           shift and go to state 20
    NOT             shift and go to state 21
    PARIZQ          shift and go to state 14
    ID              shift and go to state 47
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 24
    CHAR            shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expresion                      shift and go to state 54

state 22

    (42) expresion -> ENTERO .

    INCREMENT       reduce using rule 42 (expresion -> ENTERO .)
    DECREMENT       reduce using rule 42 (expresion -> ENTERO .)
    MAS             reduce using rule 42 (expresion -> ENTERO .)
    MENOS           reduce using rule 42 (expresion -> ENTERO .)
    POR             reduce using rule 42 (expresion -> ENTERO .)
    DIVIDIDO        reduce using rule 42 (expresion -> ENTERO .)
    ELEVADO         reduce using rule 42 (expresion -> ENTERO .)
    MOD             reduce using rule 42 (expresion -> ENTERO .)
    AND             reduce using rule 42 (expresion -> ENTERO .)
    OR              reduce using rule 42 (expresion -> ENTERO .)
    MAYQUE          reduce using rule 42 (expresion -> ENTERO .)
    MENQUE          reduce using rule 42 (expresion -> ENTERO .)
    MAYIGUALQUE     reduce using rule 42 (expresion -> ENTERO .)
    MENIGUALQUE     reduce using rule 42 (expresion -> ENTERO .)
    IGUALQUE        reduce using rule 42 (expresion -> ENTERO .)
    NIGUALQUE       reduce using rule 42 (expresion -> ENTERO .)
    MAIN            reduce using rule 42 (expresion -> ENTERO .)
    PRINT           reduce using rule 42 (expresion -> ENTERO .)
    VAR             reduce using rule 42 (expresion -> ENTERO .)
    ID              reduce using rule 42 (expresion -> ENTERO .)
    WHILE           reduce using rule 42 (expresion -> ENTERO .)
    IF              reduce using rule 42 (expresion -> ENTERO .)
    NOT             reduce using rule 42 (expresion -> ENTERO .)
    PARIZQ          reduce using rule 42 (expresion -> ENTERO .)
    ENTERO          reduce using rule 42 (expresion -> ENTERO .)
    DECIMAL         reduce using rule 42 (expresion -> ENTERO .)
    CADENA          reduce using rule 42 (expresion -> ENTERO .)
    CHAR            reduce using rule 42 (expresion -> ENTERO .)
    TRUE            reduce using rule 42 (expresion -> ENTERO .)
    FALSE           reduce using rule 42 (expresion -> ENTERO .)
    $end            reduce using rule 42 (expresion -> ENTERO .)
    PARDER          reduce using rule 42 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 42 (expresion -> ENTERO .)
    LLAVDER         reduce using rule 42 (expresion -> ENTERO .)


state 23

    (43) expresion -> DECIMAL .

    INCREMENT       reduce using rule 43 (expresion -> DECIMAL .)
    DECREMENT       reduce using rule 43 (expresion -> DECIMAL .)
    MAS             reduce using rule 43 (expresion -> DECIMAL .)
    MENOS           reduce using rule 43 (expresion -> DECIMAL .)
    POR             reduce using rule 43 (expresion -> DECIMAL .)
    DIVIDIDO        reduce using rule 43 (expresion -> DECIMAL .)
    ELEVADO         reduce using rule 43 (expresion -> DECIMAL .)
    MOD             reduce using rule 43 (expresion -> DECIMAL .)
    AND             reduce using rule 43 (expresion -> DECIMAL .)
    OR              reduce using rule 43 (expresion -> DECIMAL .)
    MAYQUE          reduce using rule 43 (expresion -> DECIMAL .)
    MENQUE          reduce using rule 43 (expresion -> DECIMAL .)
    MAYIGUALQUE     reduce using rule 43 (expresion -> DECIMAL .)
    MENIGUALQUE     reduce using rule 43 (expresion -> DECIMAL .)
    IGUALQUE        reduce using rule 43 (expresion -> DECIMAL .)
    NIGUALQUE       reduce using rule 43 (expresion -> DECIMAL .)
    MAIN            reduce using rule 43 (expresion -> DECIMAL .)
    PRINT           reduce using rule 43 (expresion -> DECIMAL .)
    VAR             reduce using rule 43 (expresion -> DECIMAL .)
    ID              reduce using rule 43 (expresion -> DECIMAL .)
    WHILE           reduce using rule 43 (expresion -> DECIMAL .)
    IF              reduce using rule 43 (expresion -> DECIMAL .)
    NOT             reduce using rule 43 (expresion -> DECIMAL .)
    PARIZQ          reduce using rule 43 (expresion -> DECIMAL .)
    ENTERO          reduce using rule 43 (expresion -> DECIMAL .)
    DECIMAL         reduce using rule 43 (expresion -> DECIMAL .)
    CADENA          reduce using rule 43 (expresion -> DECIMAL .)
    CHAR            reduce using rule 43 (expresion -> DECIMAL .)
    TRUE            reduce using rule 43 (expresion -> DECIMAL .)
    FALSE           reduce using rule 43 (expresion -> DECIMAL .)
    $end            reduce using rule 43 (expresion -> DECIMAL .)
    PARDER          reduce using rule 43 (expresion -> DECIMAL .)
    PTCOMA          reduce using rule 43 (expresion -> DECIMAL .)
    LLAVDER         reduce using rule 43 (expresion -> DECIMAL .)


state 24

    (44) expresion -> CADENA .

    INCREMENT       reduce using rule 44 (expresion -> CADENA .)
    DECREMENT       reduce using rule 44 (expresion -> CADENA .)
    MAS             reduce using rule 44 (expresion -> CADENA .)
    MENOS           reduce using rule 44 (expresion -> CADENA .)
    POR             reduce using rule 44 (expresion -> CADENA .)
    DIVIDIDO        reduce using rule 44 (expresion -> CADENA .)
    ELEVADO         reduce using rule 44 (expresion -> CADENA .)
    MOD             reduce using rule 44 (expresion -> CADENA .)
    AND             reduce using rule 44 (expresion -> CADENA .)
    OR              reduce using rule 44 (expresion -> CADENA .)
    MAYQUE          reduce using rule 44 (expresion -> CADENA .)
    MENQUE          reduce using rule 44 (expresion -> CADENA .)
    MAYIGUALQUE     reduce using rule 44 (expresion -> CADENA .)
    MENIGUALQUE     reduce using rule 44 (expresion -> CADENA .)
    IGUALQUE        reduce using rule 44 (expresion -> CADENA .)
    NIGUALQUE       reduce using rule 44 (expresion -> CADENA .)
    MAIN            reduce using rule 44 (expresion -> CADENA .)
    PRINT           reduce using rule 44 (expresion -> CADENA .)
    VAR             reduce using rule 44 (expresion -> CADENA .)
    ID              reduce using rule 44 (expresion -> CADENA .)
    WHILE           reduce using rule 44 (expresion -> CADENA .)
    IF              reduce using rule 44 (expresion -> CADENA .)
    NOT             reduce using rule 44 (expresion -> CADENA .)
    PARIZQ          reduce using rule 44 (expresion -> CADENA .)
    ENTERO          reduce using rule 44 (expresion -> CADENA .)
    DECIMAL         reduce using rule 44 (expresion -> CADENA .)
    CADENA          reduce using rule 44 (expresion -> CADENA .)
    CHAR            reduce using rule 44 (expresion -> CADENA .)
    TRUE            reduce using rule 44 (expresion -> CADENA .)
    FALSE           reduce using rule 44 (expresion -> CADENA .)
    $end            reduce using rule 44 (expresion -> CADENA .)
    PARDER          reduce using rule 44 (expresion -> CADENA .)
    PTCOMA          reduce using rule 44 (expresion -> CADENA .)
    LLAVDER         reduce using rule 44 (expresion -> CADENA .)


state 25

    (45) expresion -> CHAR .

    INCREMENT       reduce using rule 45 (expresion -> CHAR .)
    DECREMENT       reduce using rule 45 (expresion -> CHAR .)
    MAS             reduce using rule 45 (expresion -> CHAR .)
    MENOS           reduce using rule 45 (expresion -> CHAR .)
    POR             reduce using rule 45 (expresion -> CHAR .)
    DIVIDIDO        reduce using rule 45 (expresion -> CHAR .)
    ELEVADO         reduce using rule 45 (expresion -> CHAR .)
    MOD             reduce using rule 45 (expresion -> CHAR .)
    AND             reduce using rule 45 (expresion -> CHAR .)
    OR              reduce using rule 45 (expresion -> CHAR .)
    MAYQUE          reduce using rule 45 (expresion -> CHAR .)
    MENQUE          reduce using rule 45 (expresion -> CHAR .)
    MAYIGUALQUE     reduce using rule 45 (expresion -> CHAR .)
    MENIGUALQUE     reduce using rule 45 (expresion -> CHAR .)
    IGUALQUE        reduce using rule 45 (expresion -> CHAR .)
    NIGUALQUE       reduce using rule 45 (expresion -> CHAR .)
    MAIN            reduce using rule 45 (expresion -> CHAR .)
    PRINT           reduce using rule 45 (expresion -> CHAR .)
    VAR             reduce using rule 45 (expresion -> CHAR .)
    ID              reduce using rule 45 (expresion -> CHAR .)
    WHILE           reduce using rule 45 (expresion -> CHAR .)
    IF              reduce using rule 45 (expresion -> CHAR .)
    NOT             reduce using rule 45 (expresion -> CHAR .)
    PARIZQ          reduce using rule 45 (expresion -> CHAR .)
    ENTERO          reduce using rule 45 (expresion -> CHAR .)
    DECIMAL         reduce using rule 45 (expresion -> CHAR .)
    CADENA          reduce using rule 45 (expresion -> CHAR .)
    CHAR            reduce using rule 45 (expresion -> CHAR .)
    TRUE            reduce using rule 45 (expresion -> CHAR .)
    FALSE           reduce using rule 45 (expresion -> CHAR .)
    $end            reduce using rule 45 (expresion -> CHAR .)
    PARDER          reduce using rule 45 (expresion -> CHAR .)
    PTCOMA          reduce using rule 45 (expresion -> CHAR .)
    LLAVDER         reduce using rule 45 (expresion -> CHAR .)


state 26

    (46) expresion -> TRUE .

    INCREMENT       reduce using rule 46 (expresion -> TRUE .)
    DECREMENT       reduce using rule 46 (expresion -> TRUE .)
    MAS             reduce using rule 46 (expresion -> TRUE .)
    MENOS           reduce using rule 46 (expresion -> TRUE .)
    POR             reduce using rule 46 (expresion -> TRUE .)
    DIVIDIDO        reduce using rule 46 (expresion -> TRUE .)
    ELEVADO         reduce using rule 46 (expresion -> TRUE .)
    MOD             reduce using rule 46 (expresion -> TRUE .)
    AND             reduce using rule 46 (expresion -> TRUE .)
    OR              reduce using rule 46 (expresion -> TRUE .)
    MAYQUE          reduce using rule 46 (expresion -> TRUE .)
    MENQUE          reduce using rule 46 (expresion -> TRUE .)
    MAYIGUALQUE     reduce using rule 46 (expresion -> TRUE .)
    MENIGUALQUE     reduce using rule 46 (expresion -> TRUE .)
    IGUALQUE        reduce using rule 46 (expresion -> TRUE .)
    NIGUALQUE       reduce using rule 46 (expresion -> TRUE .)
    MAIN            reduce using rule 46 (expresion -> TRUE .)
    PRINT           reduce using rule 46 (expresion -> TRUE .)
    VAR             reduce using rule 46 (expresion -> TRUE .)
    ID              reduce using rule 46 (expresion -> TRUE .)
    WHILE           reduce using rule 46 (expresion -> TRUE .)
    IF              reduce using rule 46 (expresion -> TRUE .)
    NOT             reduce using rule 46 (expresion -> TRUE .)
    PARIZQ          reduce using rule 46 (expresion -> TRUE .)
    ENTERO          reduce using rule 46 (expresion -> TRUE .)
    DECIMAL         reduce using rule 46 (expresion -> TRUE .)
    CADENA          reduce using rule 46 (expresion -> TRUE .)
    CHAR            reduce using rule 46 (expresion -> TRUE .)
    TRUE            reduce using rule 46 (expresion -> TRUE .)
    FALSE           reduce using rule 46 (expresion -> TRUE .)
    $end            reduce using rule 46 (expresion -> TRUE .)
    PARDER          reduce using rule 46 (expresion -> TRUE .)
    PTCOMA          reduce using rule 46 (expresion -> TRUE .)
    LLAVDER         reduce using rule 46 (expresion -> TRUE .)


state 27

    (47) expresion -> FALSE .

    INCREMENT       reduce using rule 47 (expresion -> FALSE .)
    DECREMENT       reduce using rule 47 (expresion -> FALSE .)
    MAS             reduce using rule 47 (expresion -> FALSE .)
    MENOS           reduce using rule 47 (expresion -> FALSE .)
    POR             reduce using rule 47 (expresion -> FALSE .)
    DIVIDIDO        reduce using rule 47 (expresion -> FALSE .)
    ELEVADO         reduce using rule 47 (expresion -> FALSE .)
    MOD             reduce using rule 47 (expresion -> FALSE .)
    AND             reduce using rule 47 (expresion -> FALSE .)
    OR              reduce using rule 47 (expresion -> FALSE .)
    MAYQUE          reduce using rule 47 (expresion -> FALSE .)
    MENQUE          reduce using rule 47 (expresion -> FALSE .)
    MAYIGUALQUE     reduce using rule 47 (expresion -> FALSE .)
    MENIGUALQUE     reduce using rule 47 (expresion -> FALSE .)
    IGUALQUE        reduce using rule 47 (expresion -> FALSE .)
    NIGUALQUE       reduce using rule 47 (expresion -> FALSE .)
    MAIN            reduce using rule 47 (expresion -> FALSE .)
    PRINT           reduce using rule 47 (expresion -> FALSE .)
    VAR             reduce using rule 47 (expresion -> FALSE .)
    ID              reduce using rule 47 (expresion -> FALSE .)
    WHILE           reduce using rule 47 (expresion -> FALSE .)
    IF              reduce using rule 47 (expresion -> FALSE .)
    NOT             reduce using rule 47 (expresion -> FALSE .)
    PARIZQ          reduce using rule 47 (expresion -> FALSE .)
    ENTERO          reduce using rule 47 (expresion -> FALSE .)
    DECIMAL         reduce using rule 47 (expresion -> FALSE .)
    CADENA          reduce using rule 47 (expresion -> FALSE .)
    CHAR            reduce using rule 47 (expresion -> FALSE .)
    TRUE            reduce using rule 47 (expresion -> FALSE .)
    FALSE           reduce using rule 47 (expresion -> FALSE .)
    $end            reduce using rule 47 (expresion -> FALSE .)
    PARDER          reduce using rule 47 (expresion -> FALSE .)
    PTCOMA          reduce using rule 47 (expresion -> FALSE .)
    LLAVDER         reduce using rule 47 (expresion -> FALSE .)


state 28

    (2) instrucciones -> instrucciones instruccion .

    MAIN            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PRINT           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    VAR             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    MENOS           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    NOT             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PARIZQ          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ENTERO          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    DECIMAL         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CADENA          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CHAR            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    TRUE            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FALSE           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLAVDER         reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 29

    (22) expresion -> expresion INCREMENT . def_instr_prima
    (48) def_instr_prima -> . PTCOMA
    (49) def_instr_prima -> . empty
    (50) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
    PTCOMA          shift and go to state 56
    INCREMENT       reduce using rule 50 (empty -> .)
    DECREMENT       reduce using rule 50 (empty -> .)
    MAS             reduce using rule 50 (empty -> .)
    MENOS           reduce using rule 50 (empty -> .)
    POR             reduce using rule 50 (empty -> .)
    DIVIDIDO        reduce using rule 50 (empty -> .)
    ELEVADO         reduce using rule 50 (empty -> .)
    MOD             reduce using rule 50 (empty -> .)
    AND             reduce using rule 50 (empty -> .)
    OR              reduce using rule 50 (empty -> .)
    MAYQUE          reduce using rule 50 (empty -> .)
    MENQUE          reduce using rule 50 (empty -> .)
    MAYIGUALQUE     reduce using rule 50 (empty -> .)
    MENIGUALQUE     reduce using rule 50 (empty -> .)
    IGUALQUE        reduce using rule 50 (empty -> .)
    NIGUALQUE       reduce using rule 50 (empty -> .)
    MAIN            reduce using rule 50 (empty -> .)
    PRINT           reduce using rule 50 (empty -> .)
    VAR             reduce using rule 50 (empty -> .)
    ID              reduce using rule 50 (empty -> .)
    WHILE           reduce using rule 50 (empty -> .)
    IF              reduce using rule 50 (empty -> .)
    NOT             reduce using rule 50 (empty -> .)
    PARIZQ          reduce using rule 50 (empty -> .)
    ENTERO          reduce using rule 50 (empty -> .)
    DECIMAL         reduce using rule 50 (empty -> .)
    CADENA          reduce using rule 50 (empty -> .)
    CHAR            reduce using rule 50 (empty -> .)
    TRUE            reduce using rule 50 (empty -> .)
    FALSE           reduce using rule 50 (empty -> .)
    $end            reduce using rule 50 (empty -> .)
    PARDER          reduce using rule 50 (empty -> .)
    LLAVDER         reduce using rule 50 (empty -> .)

  ! PTCOMA          [ reduce using rule 50 (empty -> .) ]

    def_instr_prima                shift and go to state 55
    empty                          shift and go to state 57

state 30

    (23) expresion -> expresion DECREMENT . def_instr_prima
    (48) def_instr_prima -> . PTCOMA
    (49) def_instr_prima -> . empty
    (50) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
    PTCOMA          shift and go to state 56
    INCREMENT       reduce using rule 50 (empty -> .)
    DECREMENT       reduce using rule 50 (empty -> .)
    MAS             reduce using rule 50 (empty -> .)
    MENOS           reduce using rule 50 (empty -> .)
    POR             reduce using rule 50 (empty -> .)
    DIVIDIDO        reduce using rule 50 (empty -> .)
    ELEVADO         reduce using rule 50 (empty -> .)
    MOD             reduce using rule 50 (empty -> .)
    AND             reduce using rule 50 (empty -> .)
    OR              reduce using rule 50 (empty -> .)
    MAYQUE          reduce using rule 50 (empty -> .)
    MENQUE          reduce using rule 50 (empty -> .)
    MAYIGUALQUE     reduce using rule 50 (empty -> .)
    MENIGUALQUE     reduce using rule 50 (empty -> .)
    IGUALQUE        reduce using rule 50 (empty -> .)
    NIGUALQUE       reduce using rule 50 (empty -> .)
    MAIN            reduce using rule 50 (empty -> .)
    PRINT           reduce using rule 50 (empty -> .)
    VAR             reduce using rule 50 (empty -> .)
    ID              reduce using rule 50 (empty -> .)
    WHILE           reduce using rule 50 (empty -> .)
    IF              reduce using rule 50 (empty -> .)
    NOT             reduce using rule 50 (empty -> .)
    PARIZQ          reduce using rule 50 (empty -> .)
    ENTERO          reduce using rule 50 (empty -> .)
    DECIMAL         reduce using rule 50 (empty -> .)
    CADENA          reduce using rule 50 (empty -> .)
    CHAR            reduce using rule 50 (empty -> .)
    TRUE            reduce using rule 50 (empty -> .)
    FALSE           reduce using rule 50 (empty -> .)
    $end            reduce using rule 50 (empty -> .)
    PARDER          reduce using rule 50 (empty -> .)
    LLAVDER         reduce using rule 50 (empty -> .)

  ! PTCOMA          [ reduce using rule 50 (empty -> .) ]

    def_instr_prima                shift and go to state 58
    empty                          shift and go to state 57

state 31

    (24) expresion -> expresion MAS . expresion
    (22) expresion -> . expresion INCREMENT def_instr_prima
    (23) expresion -> . expresion DECREMENT def_instr_prima
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion ELEVADO expresion
    (29) expresion -> . expresion MOD expresion
    (30) expresion -> . expresion AND expresion
    (31) expresion -> . expresion OR expresion
    (32) expresion -> . expresion MAYQUE expresion
    (33) expresion -> . expresion MENQUE expresion
    (34) expresion -> . expresion MAYIGUALQUE expresion
    (35) expresion -> . expresion MENIGUALQUE expresion
    (36) expresion -> . expresion IGUALQUE expresion
    (37) expresion -> . expresion NIGUALQUE expresion
    (38) expresion -> . MENOS expresion
    (39) expresion -> . NOT expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . ID
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . CHAR
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE

    MENOS           shift and go to state 20
    NOT             shift and go to state 21
    PARIZQ          shift and go to state 14
    ID              shift and go to state 47
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 24
    CHAR            shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expresion                      shift and go to state 59

state 32

    (25) expresion -> expresion MENOS . expresion
    (22) expresion -> . expresion INCREMENT def_instr_prima
    (23) expresion -> . expresion DECREMENT def_instr_prima
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion ELEVADO expresion
    (29) expresion -> . expresion MOD expresion
    (30) expresion -> . expresion AND expresion
    (31) expresion -> . expresion OR expresion
    (32) expresion -> . expresion MAYQUE expresion
    (33) expresion -> . expresion MENQUE expresion
    (34) expresion -> . expresion MAYIGUALQUE expresion
    (35) expresion -> . expresion MENIGUALQUE expresion
    (36) expresion -> . expresion IGUALQUE expresion
    (37) expresion -> . expresion NIGUALQUE expresion
    (38) expresion -> . MENOS expresion
    (39) expresion -> . NOT expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . ID
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . CHAR
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE

    MENOS           shift and go to state 20
    NOT             shift and go to state 21
    PARIZQ          shift and go to state 14
    ID              shift and go to state 47
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 24
    CHAR            shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expresion                      shift and go to state 60

state 33

    (26) expresion -> expresion POR . expresion
    (22) expresion -> . expresion INCREMENT def_instr_prima
    (23) expresion -> . expresion DECREMENT def_instr_prima
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion ELEVADO expresion
    (29) expresion -> . expresion MOD expresion
    (30) expresion -> . expresion AND expresion
    (31) expresion -> . expresion OR expresion
    (32) expresion -> . expresion MAYQUE expresion
    (33) expresion -> . expresion MENQUE expresion
    (34) expresion -> . expresion MAYIGUALQUE expresion
    (35) expresion -> . expresion MENIGUALQUE expresion
    (36) expresion -> . expresion IGUALQUE expresion
    (37) expresion -> . expresion NIGUALQUE expresion
    (38) expresion -> . MENOS expresion
    (39) expresion -> . NOT expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . ID
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . CHAR
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE

    MENOS           shift and go to state 20
    NOT             shift and go to state 21
    PARIZQ          shift and go to state 14
    ID              shift and go to state 47
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 24
    CHAR            shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expresion                      shift and go to state 61

state 34

    (27) expresion -> expresion DIVIDIDO . expresion
    (22) expresion -> . expresion INCREMENT def_instr_prima
    (23) expresion -> . expresion DECREMENT def_instr_prima
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion ELEVADO expresion
    (29) expresion -> . expresion MOD expresion
    (30) expresion -> . expresion AND expresion
    (31) expresion -> . expresion OR expresion
    (32) expresion -> . expresion MAYQUE expresion
    (33) expresion -> . expresion MENQUE expresion
    (34) expresion -> . expresion MAYIGUALQUE expresion
    (35) expresion -> . expresion MENIGUALQUE expresion
    (36) expresion -> . expresion IGUALQUE expresion
    (37) expresion -> . expresion NIGUALQUE expresion
    (38) expresion -> . MENOS expresion
    (39) expresion -> . NOT expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . ID
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . CHAR
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE

    MENOS           shift and go to state 20
    NOT             shift and go to state 21
    PARIZQ          shift and go to state 14
    ID              shift and go to state 47
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 24
    CHAR            shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expresion                      shift and go to state 62

state 35

    (28) expresion -> expresion ELEVADO . expresion
    (22) expresion -> . expresion INCREMENT def_instr_prima
    (23) expresion -> . expresion DECREMENT def_instr_prima
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion ELEVADO expresion
    (29) expresion -> . expresion MOD expresion
    (30) expresion -> . expresion AND expresion
    (31) expresion -> . expresion OR expresion
    (32) expresion -> . expresion MAYQUE expresion
    (33) expresion -> . expresion MENQUE expresion
    (34) expresion -> . expresion MAYIGUALQUE expresion
    (35) expresion -> . expresion MENIGUALQUE expresion
    (36) expresion -> . expresion IGUALQUE expresion
    (37) expresion -> . expresion NIGUALQUE expresion
    (38) expresion -> . MENOS expresion
    (39) expresion -> . NOT expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . ID
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . CHAR
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE

    MENOS           shift and go to state 20
    NOT             shift and go to state 21
    PARIZQ          shift and go to state 14
    ID              shift and go to state 47
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 24
    CHAR            shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expresion                      shift and go to state 63

state 36

    (29) expresion -> expresion MOD . expresion
    (22) expresion -> . expresion INCREMENT def_instr_prima
    (23) expresion -> . expresion DECREMENT def_instr_prima
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion ELEVADO expresion
    (29) expresion -> . expresion MOD expresion
    (30) expresion -> . expresion AND expresion
    (31) expresion -> . expresion OR expresion
    (32) expresion -> . expresion MAYQUE expresion
    (33) expresion -> . expresion MENQUE expresion
    (34) expresion -> . expresion MAYIGUALQUE expresion
    (35) expresion -> . expresion MENIGUALQUE expresion
    (36) expresion -> . expresion IGUALQUE expresion
    (37) expresion -> . expresion NIGUALQUE expresion
    (38) expresion -> . MENOS expresion
    (39) expresion -> . NOT expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . ID
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . CHAR
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE

    MENOS           shift and go to state 20
    NOT             shift and go to state 21
    PARIZQ          shift and go to state 14
    ID              shift and go to state 47
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 24
    CHAR            shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expresion                      shift and go to state 64

state 37

    (30) expresion -> expresion AND . expresion
    (22) expresion -> . expresion INCREMENT def_instr_prima
    (23) expresion -> . expresion DECREMENT def_instr_prima
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion ELEVADO expresion
    (29) expresion -> . expresion MOD expresion
    (30) expresion -> . expresion AND expresion
    (31) expresion -> . expresion OR expresion
    (32) expresion -> . expresion MAYQUE expresion
    (33) expresion -> . expresion MENQUE expresion
    (34) expresion -> . expresion MAYIGUALQUE expresion
    (35) expresion -> . expresion MENIGUALQUE expresion
    (36) expresion -> . expresion IGUALQUE expresion
    (37) expresion -> . expresion NIGUALQUE expresion
    (38) expresion -> . MENOS expresion
    (39) expresion -> . NOT expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . ID
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . CHAR
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE

    MENOS           shift and go to state 20
    NOT             shift and go to state 21
    PARIZQ          shift and go to state 14
    ID              shift and go to state 47
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 24
    CHAR            shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expresion                      shift and go to state 65

state 38

    (31) expresion -> expresion OR . expresion
    (22) expresion -> . expresion INCREMENT def_instr_prima
    (23) expresion -> . expresion DECREMENT def_instr_prima
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion ELEVADO expresion
    (29) expresion -> . expresion MOD expresion
    (30) expresion -> . expresion AND expresion
    (31) expresion -> . expresion OR expresion
    (32) expresion -> . expresion MAYQUE expresion
    (33) expresion -> . expresion MENQUE expresion
    (34) expresion -> . expresion MAYIGUALQUE expresion
    (35) expresion -> . expresion MENIGUALQUE expresion
    (36) expresion -> . expresion IGUALQUE expresion
    (37) expresion -> . expresion NIGUALQUE expresion
    (38) expresion -> . MENOS expresion
    (39) expresion -> . NOT expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . ID
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . CHAR
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE

    MENOS           shift and go to state 20
    NOT             shift and go to state 21
    PARIZQ          shift and go to state 14
    ID              shift and go to state 47
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 24
    CHAR            shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expresion                      shift and go to state 66

state 39

    (32) expresion -> expresion MAYQUE . expresion
    (22) expresion -> . expresion INCREMENT def_instr_prima
    (23) expresion -> . expresion DECREMENT def_instr_prima
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion ELEVADO expresion
    (29) expresion -> . expresion MOD expresion
    (30) expresion -> . expresion AND expresion
    (31) expresion -> . expresion OR expresion
    (32) expresion -> . expresion MAYQUE expresion
    (33) expresion -> . expresion MENQUE expresion
    (34) expresion -> . expresion MAYIGUALQUE expresion
    (35) expresion -> . expresion MENIGUALQUE expresion
    (36) expresion -> . expresion IGUALQUE expresion
    (37) expresion -> . expresion NIGUALQUE expresion
    (38) expresion -> . MENOS expresion
    (39) expresion -> . NOT expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . ID
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . CHAR
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE

    MENOS           shift and go to state 20
    NOT             shift and go to state 21
    PARIZQ          shift and go to state 14
    ID              shift and go to state 47
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 24
    CHAR            shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expresion                      shift and go to state 67

state 40

    (33) expresion -> expresion MENQUE . expresion
    (22) expresion -> . expresion INCREMENT def_instr_prima
    (23) expresion -> . expresion DECREMENT def_instr_prima
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion ELEVADO expresion
    (29) expresion -> . expresion MOD expresion
    (30) expresion -> . expresion AND expresion
    (31) expresion -> . expresion OR expresion
    (32) expresion -> . expresion MAYQUE expresion
    (33) expresion -> . expresion MENQUE expresion
    (34) expresion -> . expresion MAYIGUALQUE expresion
    (35) expresion -> . expresion MENIGUALQUE expresion
    (36) expresion -> . expresion IGUALQUE expresion
    (37) expresion -> . expresion NIGUALQUE expresion
    (38) expresion -> . MENOS expresion
    (39) expresion -> . NOT expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . ID
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . CHAR
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE

    MENOS           shift and go to state 20
    NOT             shift and go to state 21
    PARIZQ          shift and go to state 14
    ID              shift and go to state 47
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 24
    CHAR            shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expresion                      shift and go to state 68

state 41

    (34) expresion -> expresion MAYIGUALQUE . expresion
    (22) expresion -> . expresion INCREMENT def_instr_prima
    (23) expresion -> . expresion DECREMENT def_instr_prima
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion ELEVADO expresion
    (29) expresion -> . expresion MOD expresion
    (30) expresion -> . expresion AND expresion
    (31) expresion -> . expresion OR expresion
    (32) expresion -> . expresion MAYQUE expresion
    (33) expresion -> . expresion MENQUE expresion
    (34) expresion -> . expresion MAYIGUALQUE expresion
    (35) expresion -> . expresion MENIGUALQUE expresion
    (36) expresion -> . expresion IGUALQUE expresion
    (37) expresion -> . expresion NIGUALQUE expresion
    (38) expresion -> . MENOS expresion
    (39) expresion -> . NOT expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . ID
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . CHAR
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE

    MENOS           shift and go to state 20
    NOT             shift and go to state 21
    PARIZQ          shift and go to state 14
    ID              shift and go to state 47
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 24
    CHAR            shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expresion                      shift and go to state 69

state 42

    (35) expresion -> expresion MENIGUALQUE . expresion
    (22) expresion -> . expresion INCREMENT def_instr_prima
    (23) expresion -> . expresion DECREMENT def_instr_prima
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion ELEVADO expresion
    (29) expresion -> . expresion MOD expresion
    (30) expresion -> . expresion AND expresion
    (31) expresion -> . expresion OR expresion
    (32) expresion -> . expresion MAYQUE expresion
    (33) expresion -> . expresion MENQUE expresion
    (34) expresion -> . expresion MAYIGUALQUE expresion
    (35) expresion -> . expresion MENIGUALQUE expresion
    (36) expresion -> . expresion IGUALQUE expresion
    (37) expresion -> . expresion NIGUALQUE expresion
    (38) expresion -> . MENOS expresion
    (39) expresion -> . NOT expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . ID
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . CHAR
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE

    MENOS           shift and go to state 20
    NOT             shift and go to state 21
    PARIZQ          shift and go to state 14
    ID              shift and go to state 47
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 24
    CHAR            shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expresion                      shift and go to state 70

state 43

    (36) expresion -> expresion IGUALQUE . expresion
    (22) expresion -> . expresion INCREMENT def_instr_prima
    (23) expresion -> . expresion DECREMENT def_instr_prima
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion ELEVADO expresion
    (29) expresion -> . expresion MOD expresion
    (30) expresion -> . expresion AND expresion
    (31) expresion -> . expresion OR expresion
    (32) expresion -> . expresion MAYQUE expresion
    (33) expresion -> . expresion MENQUE expresion
    (34) expresion -> . expresion MAYIGUALQUE expresion
    (35) expresion -> . expresion MENIGUALQUE expresion
    (36) expresion -> . expresion IGUALQUE expresion
    (37) expresion -> . expresion NIGUALQUE expresion
    (38) expresion -> . MENOS expresion
    (39) expresion -> . NOT expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . ID
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . CHAR
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE

    MENOS           shift and go to state 20
    NOT             shift and go to state 21
    PARIZQ          shift and go to state 14
    ID              shift and go to state 47
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 24
    CHAR            shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expresion                      shift and go to state 71

state 44

    (37) expresion -> expresion NIGUALQUE . expresion
    (22) expresion -> . expresion INCREMENT def_instr_prima
    (23) expresion -> . expresion DECREMENT def_instr_prima
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion ELEVADO expresion
    (29) expresion -> . expresion MOD expresion
    (30) expresion -> . expresion AND expresion
    (31) expresion -> . expresion OR expresion
    (32) expresion -> . expresion MAYQUE expresion
    (33) expresion -> . expresion MENQUE expresion
    (34) expresion -> . expresion MAYIGUALQUE expresion
    (35) expresion -> . expresion MENIGUALQUE expresion
    (36) expresion -> . expresion IGUALQUE expresion
    (37) expresion -> . expresion NIGUALQUE expresion
    (38) expresion -> . MENOS expresion
    (39) expresion -> . NOT expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . ID
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . CHAR
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE

    MENOS           shift and go to state 20
    NOT             shift and go to state 21
    PARIZQ          shift and go to state 14
    ID              shift and go to state 47
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 24
    CHAR            shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expresion                      shift and go to state 72

state 45

    (13) func_main -> MAIN PARIZQ . PARDER LLAVIZQ instrucciones LLAVDER

    PARDER          shift and go to state 73


state 46

    (40) expresion -> PARIZQ expresion . PARDER
    (22) expresion -> expresion . INCREMENT def_instr_prima
    (23) expresion -> expresion . DECREMENT def_instr_prima
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . ELEVADO expresion
    (29) expresion -> expresion . MOD expresion
    (30) expresion -> expresion . AND expresion
    (31) expresion -> expresion . OR expresion
    (32) expresion -> expresion . MAYQUE expresion
    (33) expresion -> expresion . MENQUE expresion
    (34) expresion -> expresion . MAYIGUALQUE expresion
    (35) expresion -> expresion . MENIGUALQUE expresion
    (36) expresion -> expresion . IGUALQUE expresion
    (37) expresion -> expresion . NIGUALQUE expresion

    PARDER          shift and go to state 74
    INCREMENT       shift and go to state 29
    DECREMENT       shift and go to state 30
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    ELEVADO         shift and go to state 35
    MOD             shift and go to state 36
    AND             shift and go to state 37
    OR              shift and go to state 38
    MAYQUE          shift and go to state 39
    MENQUE          shift and go to state 40
    MAYIGUALQUE     shift and go to state 41
    MENIGUALQUE     shift and go to state 42
    IGUALQUE        shift and go to state 43
    NIGUALQUE       shift and go to state 44


state 47

    (41) expresion -> ID .

    PARDER          reduce using rule 41 (expresion -> ID .)
    INCREMENT       reduce using rule 41 (expresion -> ID .)
    DECREMENT       reduce using rule 41 (expresion -> ID .)
    MAS             reduce using rule 41 (expresion -> ID .)
    MENOS           reduce using rule 41 (expresion -> ID .)
    POR             reduce using rule 41 (expresion -> ID .)
    DIVIDIDO        reduce using rule 41 (expresion -> ID .)
    ELEVADO         reduce using rule 41 (expresion -> ID .)
    MOD             reduce using rule 41 (expresion -> ID .)
    AND             reduce using rule 41 (expresion -> ID .)
    OR              reduce using rule 41 (expresion -> ID .)
    MAYQUE          reduce using rule 41 (expresion -> ID .)
    MENQUE          reduce using rule 41 (expresion -> ID .)
    MAYIGUALQUE     reduce using rule 41 (expresion -> ID .)
    MENIGUALQUE     reduce using rule 41 (expresion -> ID .)
    IGUALQUE        reduce using rule 41 (expresion -> ID .)
    NIGUALQUE       reduce using rule 41 (expresion -> ID .)
    MAIN            reduce using rule 41 (expresion -> ID .)
    PRINT           reduce using rule 41 (expresion -> ID .)
    VAR             reduce using rule 41 (expresion -> ID .)
    ID              reduce using rule 41 (expresion -> ID .)
    WHILE           reduce using rule 41 (expresion -> ID .)
    IF              reduce using rule 41 (expresion -> ID .)
    NOT             reduce using rule 41 (expresion -> ID .)
    PARIZQ          reduce using rule 41 (expresion -> ID .)
    ENTERO          reduce using rule 41 (expresion -> ID .)
    DECIMAL         reduce using rule 41 (expresion -> ID .)
    CADENA          reduce using rule 41 (expresion -> ID .)
    CHAR            reduce using rule 41 (expresion -> ID .)
    TRUE            reduce using rule 41 (expresion -> ID .)
    FALSE           reduce using rule 41 (expresion -> ID .)
    $end            reduce using rule 41 (expresion -> ID .)
    PTCOMA          reduce using rule 41 (expresion -> ID .)
    LLAVDER         reduce using rule 41 (expresion -> ID .)


state 48

    (14) imprimir_instr -> PRINT PARIZQ . expresion PARDER def_instr_prima
    (22) expresion -> . expresion INCREMENT def_instr_prima
    (23) expresion -> . expresion DECREMENT def_instr_prima
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion ELEVADO expresion
    (29) expresion -> . expresion MOD expresion
    (30) expresion -> . expresion AND expresion
    (31) expresion -> . expresion OR expresion
    (32) expresion -> . expresion MAYQUE expresion
    (33) expresion -> . expresion MENQUE expresion
    (34) expresion -> . expresion MAYIGUALQUE expresion
    (35) expresion -> . expresion MENIGUALQUE expresion
    (36) expresion -> . expresion IGUALQUE expresion
    (37) expresion -> . expresion NIGUALQUE expresion
    (38) expresion -> . MENOS expresion
    (39) expresion -> . NOT expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . ID
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . CHAR
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE

    MENOS           shift and go to state 20
    NOT             shift and go to state 21
    PARIZQ          shift and go to state 14
    ID              shift and go to state 47
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 24
    CHAR            shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expresion                      shift and go to state 75

state 49

    (15) definicion_instr -> VAR ID . def_instr_prima
    (17) def_asig_instr -> VAR ID . IGUAL expresion def_instr_prima
    (48) def_instr_prima -> . PTCOMA
    (49) def_instr_prima -> . empty
    (50) empty -> .

    IGUAL           shift and go to state 77
    PTCOMA          shift and go to state 56
    MAIN            reduce using rule 50 (empty -> .)
    PRINT           reduce using rule 50 (empty -> .)
    VAR             reduce using rule 50 (empty -> .)
    ID              reduce using rule 50 (empty -> .)
    WHILE           reduce using rule 50 (empty -> .)
    IF              reduce using rule 50 (empty -> .)
    MENOS           reduce using rule 50 (empty -> .)
    NOT             reduce using rule 50 (empty -> .)
    PARIZQ          reduce using rule 50 (empty -> .)
    ENTERO          reduce using rule 50 (empty -> .)
    DECIMAL         reduce using rule 50 (empty -> .)
    CADENA          reduce using rule 50 (empty -> .)
    CHAR            reduce using rule 50 (empty -> .)
    TRUE            reduce using rule 50 (empty -> .)
    FALSE           reduce using rule 50 (empty -> .)
    $end            reduce using rule 50 (empty -> .)
    LLAVDER         reduce using rule 50 (empty -> .)

    def_instr_prima                shift and go to state 76
    empty                          shift and go to state 57

state 50

    (16) asignacion_instr -> ID IGUAL . expresion def_instr_prima
    (22) expresion -> . expresion INCREMENT def_instr_prima
    (23) expresion -> . expresion DECREMENT def_instr_prima
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion ELEVADO expresion
    (29) expresion -> . expresion MOD expresion
    (30) expresion -> . expresion AND expresion
    (31) expresion -> . expresion OR expresion
    (32) expresion -> . expresion MAYQUE expresion
    (33) expresion -> . expresion MENQUE expresion
    (34) expresion -> . expresion MAYIGUALQUE expresion
    (35) expresion -> . expresion MENIGUALQUE expresion
    (36) expresion -> . expresion IGUALQUE expresion
    (37) expresion -> . expresion NIGUALQUE expresion
    (38) expresion -> . MENOS expresion
    (39) expresion -> . NOT expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . ID
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . CHAR
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE

    MENOS           shift and go to state 20
    NOT             shift and go to state 21
    PARIZQ          shift and go to state 14
    ID              shift and go to state 47
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 24
    CHAR            shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expresion                      shift and go to state 78

state 51

    (21) while_instr -> WHILE PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER
    (22) expresion -> . expresion INCREMENT def_instr_prima
    (23) expresion -> . expresion DECREMENT def_instr_prima
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion ELEVADO expresion
    (29) expresion -> . expresion MOD expresion
    (30) expresion -> . expresion AND expresion
    (31) expresion -> . expresion OR expresion
    (32) expresion -> . expresion MAYQUE expresion
    (33) expresion -> . expresion MENQUE expresion
    (34) expresion -> . expresion MAYIGUALQUE expresion
    (35) expresion -> . expresion MENIGUALQUE expresion
    (36) expresion -> . expresion IGUALQUE expresion
    (37) expresion -> . expresion NIGUALQUE expresion
    (38) expresion -> . MENOS expresion
    (39) expresion -> . NOT expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . ID
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . CHAR
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE

    MENOS           shift and go to state 20
    NOT             shift and go to state 21
    PARIZQ          shift and go to state 14
    ID              shift and go to state 47
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 24
    CHAR            shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expresion                      shift and go to state 79

state 52

    (18) if_instr -> IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER
    (19) if_instr -> IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (20) if_instr -> IF PARIZQ . expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instr
    (22) expresion -> . expresion INCREMENT def_instr_prima
    (23) expresion -> . expresion DECREMENT def_instr_prima
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion ELEVADO expresion
    (29) expresion -> . expresion MOD expresion
    (30) expresion -> . expresion AND expresion
    (31) expresion -> . expresion OR expresion
    (32) expresion -> . expresion MAYQUE expresion
    (33) expresion -> . expresion MENQUE expresion
    (34) expresion -> . expresion MAYIGUALQUE expresion
    (35) expresion -> . expresion MENIGUALQUE expresion
    (36) expresion -> . expresion IGUALQUE expresion
    (37) expresion -> . expresion NIGUALQUE expresion
    (38) expresion -> . MENOS expresion
    (39) expresion -> . NOT expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . ID
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . CHAR
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE

    MENOS           shift and go to state 20
    NOT             shift and go to state 21
    PARIZQ          shift and go to state 14
    ID              shift and go to state 47
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 24
    CHAR            shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expresion                      shift and go to state 80

state 53

    (38) expresion -> MENOS expresion .
    (22) expresion -> expresion . INCREMENT def_instr_prima
    (23) expresion -> expresion . DECREMENT def_instr_prima
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . ELEVADO expresion
    (29) expresion -> expresion . MOD expresion
    (30) expresion -> expresion . AND expresion
    (31) expresion -> expresion . OR expresion
    (32) expresion -> expresion . MAYQUE expresion
    (33) expresion -> expresion . MENQUE expresion
    (34) expresion -> expresion . MAYIGUALQUE expresion
    (35) expresion -> expresion . MENIGUALQUE expresion
    (36) expresion -> expresion . IGUALQUE expresion
    (37) expresion -> expresion . NIGUALQUE expresion

    MAS             reduce using rule 38 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 38 (expresion -> MENOS expresion .)
    POR             reduce using rule 38 (expresion -> MENOS expresion .)
    DIVIDIDO        reduce using rule 38 (expresion -> MENOS expresion .)
    ELEVADO         reduce using rule 38 (expresion -> MENOS expresion .)
    MOD             reduce using rule 38 (expresion -> MENOS expresion .)
    AND             reduce using rule 38 (expresion -> MENOS expresion .)
    OR              reduce using rule 38 (expresion -> MENOS expresion .)
    MAYQUE          reduce using rule 38 (expresion -> MENOS expresion .)
    MENQUE          reduce using rule 38 (expresion -> MENOS expresion .)
    MAYIGUALQUE     reduce using rule 38 (expresion -> MENOS expresion .)
    MENIGUALQUE     reduce using rule 38 (expresion -> MENOS expresion .)
    IGUALQUE        reduce using rule 38 (expresion -> MENOS expresion .)
    NIGUALQUE       reduce using rule 38 (expresion -> MENOS expresion .)
    MAIN            reduce using rule 38 (expresion -> MENOS expresion .)
    PRINT           reduce using rule 38 (expresion -> MENOS expresion .)
    VAR             reduce using rule 38 (expresion -> MENOS expresion .)
    ID              reduce using rule 38 (expresion -> MENOS expresion .)
    WHILE           reduce using rule 38 (expresion -> MENOS expresion .)
    IF              reduce using rule 38 (expresion -> MENOS expresion .)
    NOT             reduce using rule 38 (expresion -> MENOS expresion .)
    PARIZQ          reduce using rule 38 (expresion -> MENOS expresion .)
    ENTERO          reduce using rule 38 (expresion -> MENOS expresion .)
    DECIMAL         reduce using rule 38 (expresion -> MENOS expresion .)
    CADENA          reduce using rule 38 (expresion -> MENOS expresion .)
    CHAR            reduce using rule 38 (expresion -> MENOS expresion .)
    TRUE            reduce using rule 38 (expresion -> MENOS expresion .)
    FALSE           reduce using rule 38 (expresion -> MENOS expresion .)
    $end            reduce using rule 38 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 38 (expresion -> MENOS expresion .)
    PTCOMA          reduce using rule 38 (expresion -> MENOS expresion .)
    LLAVDER         reduce using rule 38 (expresion -> MENOS expresion .)
    INCREMENT       shift and go to state 29
    DECREMENT       shift and go to state 30

  ! INCREMENT       [ reduce using rule 38 (expresion -> MENOS expresion .) ]
  ! DECREMENT       [ reduce using rule 38 (expresion -> MENOS expresion .) ]
  ! MAS             [ shift and go to state 31 ]
  ! MENOS           [ shift and go to state 32 ]
  ! POR             [ shift and go to state 33 ]
  ! DIVIDIDO        [ shift and go to state 34 ]
  ! ELEVADO         [ shift and go to state 35 ]
  ! MOD             [ shift and go to state 36 ]
  ! AND             [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! MAYQUE          [ shift and go to state 39 ]
  ! MENQUE          [ shift and go to state 40 ]
  ! MAYIGUALQUE     [ shift and go to state 41 ]
  ! MENIGUALQUE     [ shift and go to state 42 ]
  ! IGUALQUE        [ shift and go to state 43 ]
  ! NIGUALQUE       [ shift and go to state 44 ]


state 54

    (39) expresion -> NOT expresion .
    (22) expresion -> expresion . INCREMENT def_instr_prima
    (23) expresion -> expresion . DECREMENT def_instr_prima
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . ELEVADO expresion
    (29) expresion -> expresion . MOD expresion
    (30) expresion -> expresion . AND expresion
    (31) expresion -> expresion . OR expresion
    (32) expresion -> expresion . MAYQUE expresion
    (33) expresion -> expresion . MENQUE expresion
    (34) expresion -> expresion . MAYIGUALQUE expresion
    (35) expresion -> expresion . MENIGUALQUE expresion
    (36) expresion -> expresion . IGUALQUE expresion
    (37) expresion -> expresion . NIGUALQUE expresion

    AND             reduce using rule 39 (expresion -> NOT expresion .)
    OR              reduce using rule 39 (expresion -> NOT expresion .)
    MAIN            reduce using rule 39 (expresion -> NOT expresion .)
    PRINT           reduce using rule 39 (expresion -> NOT expresion .)
    VAR             reduce using rule 39 (expresion -> NOT expresion .)
    ID              reduce using rule 39 (expresion -> NOT expresion .)
    WHILE           reduce using rule 39 (expresion -> NOT expresion .)
    IF              reduce using rule 39 (expresion -> NOT expresion .)
    NOT             reduce using rule 39 (expresion -> NOT expresion .)
    PARIZQ          reduce using rule 39 (expresion -> NOT expresion .)
    ENTERO          reduce using rule 39 (expresion -> NOT expresion .)
    DECIMAL         reduce using rule 39 (expresion -> NOT expresion .)
    CADENA          reduce using rule 39 (expresion -> NOT expresion .)
    CHAR            reduce using rule 39 (expresion -> NOT expresion .)
    TRUE            reduce using rule 39 (expresion -> NOT expresion .)
    FALSE           reduce using rule 39 (expresion -> NOT expresion .)
    $end            reduce using rule 39 (expresion -> NOT expresion .)
    PARDER          reduce using rule 39 (expresion -> NOT expresion .)
    PTCOMA          reduce using rule 39 (expresion -> NOT expresion .)
    LLAVDER         reduce using rule 39 (expresion -> NOT expresion .)
    INCREMENT       shift and go to state 29
    DECREMENT       shift and go to state 30
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    ELEVADO         shift and go to state 35
    MOD             shift and go to state 36
    MAYQUE          shift and go to state 39
    MENQUE          shift and go to state 40
    MAYIGUALQUE     shift and go to state 41
    MENIGUALQUE     shift and go to state 42
    IGUALQUE        shift and go to state 43
    NIGUALQUE       shift and go to state 44

  ! INCREMENT       [ reduce using rule 39 (expresion -> NOT expresion .) ]
  ! DECREMENT       [ reduce using rule 39 (expresion -> NOT expresion .) ]
  ! MAS             [ reduce using rule 39 (expresion -> NOT expresion .) ]
  ! MENOS           [ reduce using rule 39 (expresion -> NOT expresion .) ]
  ! POR             [ reduce using rule 39 (expresion -> NOT expresion .) ]
  ! DIVIDIDO        [ reduce using rule 39 (expresion -> NOT expresion .) ]
  ! ELEVADO         [ reduce using rule 39 (expresion -> NOT expresion .) ]
  ! MOD             [ reduce using rule 39 (expresion -> NOT expresion .) ]
  ! MAYQUE          [ reduce using rule 39 (expresion -> NOT expresion .) ]
  ! MENQUE          [ reduce using rule 39 (expresion -> NOT expresion .) ]
  ! MAYIGUALQUE     [ reduce using rule 39 (expresion -> NOT expresion .) ]
  ! MENIGUALQUE     [ reduce using rule 39 (expresion -> NOT expresion .) ]
  ! IGUALQUE        [ reduce using rule 39 (expresion -> NOT expresion .) ]
  ! NIGUALQUE       [ reduce using rule 39 (expresion -> NOT expresion .) ]
  ! AND             [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]


state 55

    (22) expresion -> expresion INCREMENT def_instr_prima .

    INCREMENT       reduce using rule 22 (expresion -> expresion INCREMENT def_instr_prima .)
    DECREMENT       reduce using rule 22 (expresion -> expresion INCREMENT def_instr_prima .)
    MAS             reduce using rule 22 (expresion -> expresion INCREMENT def_instr_prima .)
    MENOS           reduce using rule 22 (expresion -> expresion INCREMENT def_instr_prima .)
    POR             reduce using rule 22 (expresion -> expresion INCREMENT def_instr_prima .)
    DIVIDIDO        reduce using rule 22 (expresion -> expresion INCREMENT def_instr_prima .)
    ELEVADO         reduce using rule 22 (expresion -> expresion INCREMENT def_instr_prima .)
    MOD             reduce using rule 22 (expresion -> expresion INCREMENT def_instr_prima .)
    AND             reduce using rule 22 (expresion -> expresion INCREMENT def_instr_prima .)
    OR              reduce using rule 22 (expresion -> expresion INCREMENT def_instr_prima .)
    MAYQUE          reduce using rule 22 (expresion -> expresion INCREMENT def_instr_prima .)
    MENQUE          reduce using rule 22 (expresion -> expresion INCREMENT def_instr_prima .)
    MAYIGUALQUE     reduce using rule 22 (expresion -> expresion INCREMENT def_instr_prima .)
    MENIGUALQUE     reduce using rule 22 (expresion -> expresion INCREMENT def_instr_prima .)
    IGUALQUE        reduce using rule 22 (expresion -> expresion INCREMENT def_instr_prima .)
    NIGUALQUE       reduce using rule 22 (expresion -> expresion INCREMENT def_instr_prima .)
    MAIN            reduce using rule 22 (expresion -> expresion INCREMENT def_instr_prima .)
    PRINT           reduce using rule 22 (expresion -> expresion INCREMENT def_instr_prima .)
    VAR             reduce using rule 22 (expresion -> expresion INCREMENT def_instr_prima .)
    ID              reduce using rule 22 (expresion -> expresion INCREMENT def_instr_prima .)
    WHILE           reduce using rule 22 (expresion -> expresion INCREMENT def_instr_prima .)
    IF              reduce using rule 22 (expresion -> expresion INCREMENT def_instr_prima .)
    NOT             reduce using rule 22 (expresion -> expresion INCREMENT def_instr_prima .)
    PARIZQ          reduce using rule 22 (expresion -> expresion INCREMENT def_instr_prima .)
    ENTERO          reduce using rule 22 (expresion -> expresion INCREMENT def_instr_prima .)
    DECIMAL         reduce using rule 22 (expresion -> expresion INCREMENT def_instr_prima .)
    CADENA          reduce using rule 22 (expresion -> expresion INCREMENT def_instr_prima .)
    CHAR            reduce using rule 22 (expresion -> expresion INCREMENT def_instr_prima .)
    TRUE            reduce using rule 22 (expresion -> expresion INCREMENT def_instr_prima .)
    FALSE           reduce using rule 22 (expresion -> expresion INCREMENT def_instr_prima .)
    $end            reduce using rule 22 (expresion -> expresion INCREMENT def_instr_prima .)
    PARDER          reduce using rule 22 (expresion -> expresion INCREMENT def_instr_prima .)
    PTCOMA          reduce using rule 22 (expresion -> expresion INCREMENT def_instr_prima .)
    LLAVDER         reduce using rule 22 (expresion -> expresion INCREMENT def_instr_prima .)


state 56

    (48) def_instr_prima -> PTCOMA .

    INCREMENT       reduce using rule 48 (def_instr_prima -> PTCOMA .)
    DECREMENT       reduce using rule 48 (def_instr_prima -> PTCOMA .)
    MAS             reduce using rule 48 (def_instr_prima -> PTCOMA .)
    MENOS           reduce using rule 48 (def_instr_prima -> PTCOMA .)
    POR             reduce using rule 48 (def_instr_prima -> PTCOMA .)
    DIVIDIDO        reduce using rule 48 (def_instr_prima -> PTCOMA .)
    ELEVADO         reduce using rule 48 (def_instr_prima -> PTCOMA .)
    MOD             reduce using rule 48 (def_instr_prima -> PTCOMA .)
    AND             reduce using rule 48 (def_instr_prima -> PTCOMA .)
    OR              reduce using rule 48 (def_instr_prima -> PTCOMA .)
    MAYQUE          reduce using rule 48 (def_instr_prima -> PTCOMA .)
    MENQUE          reduce using rule 48 (def_instr_prima -> PTCOMA .)
    MAYIGUALQUE     reduce using rule 48 (def_instr_prima -> PTCOMA .)
    MENIGUALQUE     reduce using rule 48 (def_instr_prima -> PTCOMA .)
    IGUALQUE        reduce using rule 48 (def_instr_prima -> PTCOMA .)
    NIGUALQUE       reduce using rule 48 (def_instr_prima -> PTCOMA .)
    MAIN            reduce using rule 48 (def_instr_prima -> PTCOMA .)
    PRINT           reduce using rule 48 (def_instr_prima -> PTCOMA .)
    VAR             reduce using rule 48 (def_instr_prima -> PTCOMA .)
    ID              reduce using rule 48 (def_instr_prima -> PTCOMA .)
    WHILE           reduce using rule 48 (def_instr_prima -> PTCOMA .)
    IF              reduce using rule 48 (def_instr_prima -> PTCOMA .)
    NOT             reduce using rule 48 (def_instr_prima -> PTCOMA .)
    PARIZQ          reduce using rule 48 (def_instr_prima -> PTCOMA .)
    ENTERO          reduce using rule 48 (def_instr_prima -> PTCOMA .)
    DECIMAL         reduce using rule 48 (def_instr_prima -> PTCOMA .)
    CADENA          reduce using rule 48 (def_instr_prima -> PTCOMA .)
    CHAR            reduce using rule 48 (def_instr_prima -> PTCOMA .)
    TRUE            reduce using rule 48 (def_instr_prima -> PTCOMA .)
    FALSE           reduce using rule 48 (def_instr_prima -> PTCOMA .)
    $end            reduce using rule 48 (def_instr_prima -> PTCOMA .)
    PARDER          reduce using rule 48 (def_instr_prima -> PTCOMA .)
    PTCOMA          reduce using rule 48 (def_instr_prima -> PTCOMA .)
    LLAVDER         reduce using rule 48 (def_instr_prima -> PTCOMA .)


state 57

    (49) def_instr_prima -> empty .

    INCREMENT       reduce using rule 49 (def_instr_prima -> empty .)
    DECREMENT       reduce using rule 49 (def_instr_prima -> empty .)
    MAS             reduce using rule 49 (def_instr_prima -> empty .)
    MENOS           reduce using rule 49 (def_instr_prima -> empty .)
    POR             reduce using rule 49 (def_instr_prima -> empty .)
    DIVIDIDO        reduce using rule 49 (def_instr_prima -> empty .)
    ELEVADO         reduce using rule 49 (def_instr_prima -> empty .)
    MOD             reduce using rule 49 (def_instr_prima -> empty .)
    AND             reduce using rule 49 (def_instr_prima -> empty .)
    OR              reduce using rule 49 (def_instr_prima -> empty .)
    MAYQUE          reduce using rule 49 (def_instr_prima -> empty .)
    MENQUE          reduce using rule 49 (def_instr_prima -> empty .)
    MAYIGUALQUE     reduce using rule 49 (def_instr_prima -> empty .)
    MENIGUALQUE     reduce using rule 49 (def_instr_prima -> empty .)
    IGUALQUE        reduce using rule 49 (def_instr_prima -> empty .)
    NIGUALQUE       reduce using rule 49 (def_instr_prima -> empty .)
    MAIN            reduce using rule 49 (def_instr_prima -> empty .)
    PRINT           reduce using rule 49 (def_instr_prima -> empty .)
    VAR             reduce using rule 49 (def_instr_prima -> empty .)
    ID              reduce using rule 49 (def_instr_prima -> empty .)
    WHILE           reduce using rule 49 (def_instr_prima -> empty .)
    IF              reduce using rule 49 (def_instr_prima -> empty .)
    NOT             reduce using rule 49 (def_instr_prima -> empty .)
    PARIZQ          reduce using rule 49 (def_instr_prima -> empty .)
    ENTERO          reduce using rule 49 (def_instr_prima -> empty .)
    DECIMAL         reduce using rule 49 (def_instr_prima -> empty .)
    CADENA          reduce using rule 49 (def_instr_prima -> empty .)
    CHAR            reduce using rule 49 (def_instr_prima -> empty .)
    TRUE            reduce using rule 49 (def_instr_prima -> empty .)
    FALSE           reduce using rule 49 (def_instr_prima -> empty .)
    $end            reduce using rule 49 (def_instr_prima -> empty .)
    PARDER          reduce using rule 49 (def_instr_prima -> empty .)
    PTCOMA          reduce using rule 49 (def_instr_prima -> empty .)
    LLAVDER         reduce using rule 49 (def_instr_prima -> empty .)


state 58

    (23) expresion -> expresion DECREMENT def_instr_prima .

    INCREMENT       reduce using rule 23 (expresion -> expresion DECREMENT def_instr_prima .)
    DECREMENT       reduce using rule 23 (expresion -> expresion DECREMENT def_instr_prima .)
    MAS             reduce using rule 23 (expresion -> expresion DECREMENT def_instr_prima .)
    MENOS           reduce using rule 23 (expresion -> expresion DECREMENT def_instr_prima .)
    POR             reduce using rule 23 (expresion -> expresion DECREMENT def_instr_prima .)
    DIVIDIDO        reduce using rule 23 (expresion -> expresion DECREMENT def_instr_prima .)
    ELEVADO         reduce using rule 23 (expresion -> expresion DECREMENT def_instr_prima .)
    MOD             reduce using rule 23 (expresion -> expresion DECREMENT def_instr_prima .)
    AND             reduce using rule 23 (expresion -> expresion DECREMENT def_instr_prima .)
    OR              reduce using rule 23 (expresion -> expresion DECREMENT def_instr_prima .)
    MAYQUE          reduce using rule 23 (expresion -> expresion DECREMENT def_instr_prima .)
    MENQUE          reduce using rule 23 (expresion -> expresion DECREMENT def_instr_prima .)
    MAYIGUALQUE     reduce using rule 23 (expresion -> expresion DECREMENT def_instr_prima .)
    MENIGUALQUE     reduce using rule 23 (expresion -> expresion DECREMENT def_instr_prima .)
    IGUALQUE        reduce using rule 23 (expresion -> expresion DECREMENT def_instr_prima .)
    NIGUALQUE       reduce using rule 23 (expresion -> expresion DECREMENT def_instr_prima .)
    MAIN            reduce using rule 23 (expresion -> expresion DECREMENT def_instr_prima .)
    PRINT           reduce using rule 23 (expresion -> expresion DECREMENT def_instr_prima .)
    VAR             reduce using rule 23 (expresion -> expresion DECREMENT def_instr_prima .)
    ID              reduce using rule 23 (expresion -> expresion DECREMENT def_instr_prima .)
    WHILE           reduce using rule 23 (expresion -> expresion DECREMENT def_instr_prima .)
    IF              reduce using rule 23 (expresion -> expresion DECREMENT def_instr_prima .)
    NOT             reduce using rule 23 (expresion -> expresion DECREMENT def_instr_prima .)
    PARIZQ          reduce using rule 23 (expresion -> expresion DECREMENT def_instr_prima .)
    ENTERO          reduce using rule 23 (expresion -> expresion DECREMENT def_instr_prima .)
    DECIMAL         reduce using rule 23 (expresion -> expresion DECREMENT def_instr_prima .)
    CADENA          reduce using rule 23 (expresion -> expresion DECREMENT def_instr_prima .)
    CHAR            reduce using rule 23 (expresion -> expresion DECREMENT def_instr_prima .)
    TRUE            reduce using rule 23 (expresion -> expresion DECREMENT def_instr_prima .)
    FALSE           reduce using rule 23 (expresion -> expresion DECREMENT def_instr_prima .)
    $end            reduce using rule 23 (expresion -> expresion DECREMENT def_instr_prima .)
    PARDER          reduce using rule 23 (expresion -> expresion DECREMENT def_instr_prima .)
    PTCOMA          reduce using rule 23 (expresion -> expresion DECREMENT def_instr_prima .)
    LLAVDER         reduce using rule 23 (expresion -> expresion DECREMENT def_instr_prima .)


state 59

    (24) expresion -> expresion MAS expresion .
    (22) expresion -> expresion . INCREMENT def_instr_prima
    (23) expresion -> expresion . DECREMENT def_instr_prima
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . ELEVADO expresion
    (29) expresion -> expresion . MOD expresion
    (30) expresion -> expresion . AND expresion
    (31) expresion -> expresion . OR expresion
    (32) expresion -> expresion . MAYQUE expresion
    (33) expresion -> expresion . MENQUE expresion
    (34) expresion -> expresion . MAYIGUALQUE expresion
    (35) expresion -> expresion . MENIGUALQUE expresion
    (36) expresion -> expresion . IGUALQUE expresion
    (37) expresion -> expresion . NIGUALQUE expresion

    MAS             reduce using rule 24 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 24 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 24 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 24 (expresion -> expresion MAS expresion .)
    MAYQUE          reduce using rule 24 (expresion -> expresion MAS expresion .)
    MENQUE          reduce using rule 24 (expresion -> expresion MAS expresion .)
    MAYIGUALQUE     reduce using rule 24 (expresion -> expresion MAS expresion .)
    MENIGUALQUE     reduce using rule 24 (expresion -> expresion MAS expresion .)
    IGUALQUE        reduce using rule 24 (expresion -> expresion MAS expresion .)
    NIGUALQUE       reduce using rule 24 (expresion -> expresion MAS expresion .)
    MAIN            reduce using rule 24 (expresion -> expresion MAS expresion .)
    PRINT           reduce using rule 24 (expresion -> expresion MAS expresion .)
    VAR             reduce using rule 24 (expresion -> expresion MAS expresion .)
    ID              reduce using rule 24 (expresion -> expresion MAS expresion .)
    WHILE           reduce using rule 24 (expresion -> expresion MAS expresion .)
    IF              reduce using rule 24 (expresion -> expresion MAS expresion .)
    NOT             reduce using rule 24 (expresion -> expresion MAS expresion .)
    PARIZQ          reduce using rule 24 (expresion -> expresion MAS expresion .)
    ENTERO          reduce using rule 24 (expresion -> expresion MAS expresion .)
    DECIMAL         reduce using rule 24 (expresion -> expresion MAS expresion .)
    CADENA          reduce using rule 24 (expresion -> expresion MAS expresion .)
    CHAR            reduce using rule 24 (expresion -> expresion MAS expresion .)
    TRUE            reduce using rule 24 (expresion -> expresion MAS expresion .)
    FALSE           reduce using rule 24 (expresion -> expresion MAS expresion .)
    $end            reduce using rule 24 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 24 (expresion -> expresion MAS expresion .)
    PTCOMA          reduce using rule 24 (expresion -> expresion MAS expresion .)
    LLAVDER         reduce using rule 24 (expresion -> expresion MAS expresion .)
    INCREMENT       shift and go to state 29
    DECREMENT       shift and go to state 30
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    ELEVADO         shift and go to state 35
    MOD             shift and go to state 36

  ! INCREMENT       [ reduce using rule 24 (expresion -> expresion MAS expresion .) ]
  ! DECREMENT       [ reduce using rule 24 (expresion -> expresion MAS expresion .) ]
  ! POR             [ reduce using rule 24 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 24 (expresion -> expresion MAS expresion .) ]
  ! ELEVADO         [ reduce using rule 24 (expresion -> expresion MAS expresion .) ]
  ! MOD             [ reduce using rule 24 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 31 ]
  ! MENOS           [ shift and go to state 32 ]
  ! AND             [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! MAYQUE          [ shift and go to state 39 ]
  ! MENQUE          [ shift and go to state 40 ]
  ! MAYIGUALQUE     [ shift and go to state 41 ]
  ! MENIGUALQUE     [ shift and go to state 42 ]
  ! IGUALQUE        [ shift and go to state 43 ]
  ! NIGUALQUE       [ shift and go to state 44 ]


state 60

    (25) expresion -> expresion MENOS expresion .
    (22) expresion -> expresion . INCREMENT def_instr_prima
    (23) expresion -> expresion . DECREMENT def_instr_prima
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . ELEVADO expresion
    (29) expresion -> expresion . MOD expresion
    (30) expresion -> expresion . AND expresion
    (31) expresion -> expresion . OR expresion
    (32) expresion -> expresion . MAYQUE expresion
    (33) expresion -> expresion . MENQUE expresion
    (34) expresion -> expresion . MAYIGUALQUE expresion
    (35) expresion -> expresion . MENIGUALQUE expresion
    (36) expresion -> expresion . IGUALQUE expresion
    (37) expresion -> expresion . NIGUALQUE expresion

    MAS             reduce using rule 25 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 25 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 25 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 25 (expresion -> expresion MENOS expresion .)
    MAYQUE          reduce using rule 25 (expresion -> expresion MENOS expresion .)
    MENQUE          reduce using rule 25 (expresion -> expresion MENOS expresion .)
    MAYIGUALQUE     reduce using rule 25 (expresion -> expresion MENOS expresion .)
    MENIGUALQUE     reduce using rule 25 (expresion -> expresion MENOS expresion .)
    IGUALQUE        reduce using rule 25 (expresion -> expresion MENOS expresion .)
    NIGUALQUE       reduce using rule 25 (expresion -> expresion MENOS expresion .)
    MAIN            reduce using rule 25 (expresion -> expresion MENOS expresion .)
    PRINT           reduce using rule 25 (expresion -> expresion MENOS expresion .)
    VAR             reduce using rule 25 (expresion -> expresion MENOS expresion .)
    ID              reduce using rule 25 (expresion -> expresion MENOS expresion .)
    WHILE           reduce using rule 25 (expresion -> expresion MENOS expresion .)
    IF              reduce using rule 25 (expresion -> expresion MENOS expresion .)
    NOT             reduce using rule 25 (expresion -> expresion MENOS expresion .)
    PARIZQ          reduce using rule 25 (expresion -> expresion MENOS expresion .)
    ENTERO          reduce using rule 25 (expresion -> expresion MENOS expresion .)
    DECIMAL         reduce using rule 25 (expresion -> expresion MENOS expresion .)
    CADENA          reduce using rule 25 (expresion -> expresion MENOS expresion .)
    CHAR            reduce using rule 25 (expresion -> expresion MENOS expresion .)
    TRUE            reduce using rule 25 (expresion -> expresion MENOS expresion .)
    FALSE           reduce using rule 25 (expresion -> expresion MENOS expresion .)
    $end            reduce using rule 25 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 25 (expresion -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 25 (expresion -> expresion MENOS expresion .)
    LLAVDER         reduce using rule 25 (expresion -> expresion MENOS expresion .)
    INCREMENT       shift and go to state 29
    DECREMENT       shift and go to state 30
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    ELEVADO         shift and go to state 35
    MOD             shift and go to state 36

  ! INCREMENT       [ reduce using rule 25 (expresion -> expresion MENOS expresion .) ]
  ! DECREMENT       [ reduce using rule 25 (expresion -> expresion MENOS expresion .) ]
  ! POR             [ reduce using rule 25 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIDO        [ reduce using rule 25 (expresion -> expresion MENOS expresion .) ]
  ! ELEVADO         [ reduce using rule 25 (expresion -> expresion MENOS expresion .) ]
  ! MOD             [ reduce using rule 25 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 31 ]
  ! MENOS           [ shift and go to state 32 ]
  ! AND             [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! MAYQUE          [ shift and go to state 39 ]
  ! MENQUE          [ shift and go to state 40 ]
  ! MAYIGUALQUE     [ shift and go to state 41 ]
  ! MENIGUALQUE     [ shift and go to state 42 ]
  ! IGUALQUE        [ shift and go to state 43 ]
  ! NIGUALQUE       [ shift and go to state 44 ]


state 61

    (26) expresion -> expresion POR expresion .
    (22) expresion -> expresion . INCREMENT def_instr_prima
    (23) expresion -> expresion . DECREMENT def_instr_prima
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . ELEVADO expresion
    (29) expresion -> expresion . MOD expresion
    (30) expresion -> expresion . AND expresion
    (31) expresion -> expresion . OR expresion
    (32) expresion -> expresion . MAYQUE expresion
    (33) expresion -> expresion . MENQUE expresion
    (34) expresion -> expresion . MAYIGUALQUE expresion
    (35) expresion -> expresion . MENIGUALQUE expresion
    (36) expresion -> expresion . IGUALQUE expresion
    (37) expresion -> expresion . NIGUALQUE expresion

    MAS             reduce using rule 26 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 26 (expresion -> expresion POR expresion .)
    POR             reduce using rule 26 (expresion -> expresion POR expresion .)
    DIVIDIDO        reduce using rule 26 (expresion -> expresion POR expresion .)
    MOD             reduce using rule 26 (expresion -> expresion POR expresion .)
    AND             reduce using rule 26 (expresion -> expresion POR expresion .)
    OR              reduce using rule 26 (expresion -> expresion POR expresion .)
    MAYQUE          reduce using rule 26 (expresion -> expresion POR expresion .)
    MENQUE          reduce using rule 26 (expresion -> expresion POR expresion .)
    MAYIGUALQUE     reduce using rule 26 (expresion -> expresion POR expresion .)
    MENIGUALQUE     reduce using rule 26 (expresion -> expresion POR expresion .)
    IGUALQUE        reduce using rule 26 (expresion -> expresion POR expresion .)
    NIGUALQUE       reduce using rule 26 (expresion -> expresion POR expresion .)
    MAIN            reduce using rule 26 (expresion -> expresion POR expresion .)
    PRINT           reduce using rule 26 (expresion -> expresion POR expresion .)
    VAR             reduce using rule 26 (expresion -> expresion POR expresion .)
    ID              reduce using rule 26 (expresion -> expresion POR expresion .)
    WHILE           reduce using rule 26 (expresion -> expresion POR expresion .)
    IF              reduce using rule 26 (expresion -> expresion POR expresion .)
    NOT             reduce using rule 26 (expresion -> expresion POR expresion .)
    PARIZQ          reduce using rule 26 (expresion -> expresion POR expresion .)
    ENTERO          reduce using rule 26 (expresion -> expresion POR expresion .)
    DECIMAL         reduce using rule 26 (expresion -> expresion POR expresion .)
    CADENA          reduce using rule 26 (expresion -> expresion POR expresion .)
    CHAR            reduce using rule 26 (expresion -> expresion POR expresion .)
    TRUE            reduce using rule 26 (expresion -> expresion POR expresion .)
    FALSE           reduce using rule 26 (expresion -> expresion POR expresion .)
    $end            reduce using rule 26 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 26 (expresion -> expresion POR expresion .)
    PTCOMA          reduce using rule 26 (expresion -> expresion POR expresion .)
    LLAVDER         reduce using rule 26 (expresion -> expresion POR expresion .)
    INCREMENT       shift and go to state 29
    DECREMENT       shift and go to state 30
    ELEVADO         shift and go to state 35

  ! INCREMENT       [ reduce using rule 26 (expresion -> expresion POR expresion .) ]
  ! DECREMENT       [ reduce using rule 26 (expresion -> expresion POR expresion .) ]
  ! ELEVADO         [ reduce using rule 26 (expresion -> expresion POR expresion .) ]
  ! MAS             [ shift and go to state 31 ]
  ! MENOS           [ shift and go to state 32 ]
  ! POR             [ shift and go to state 33 ]
  ! DIVIDIDO        [ shift and go to state 34 ]
  ! MOD             [ shift and go to state 36 ]
  ! AND             [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! MAYQUE          [ shift and go to state 39 ]
  ! MENQUE          [ shift and go to state 40 ]
  ! MAYIGUALQUE     [ shift and go to state 41 ]
  ! MENIGUALQUE     [ shift and go to state 42 ]
  ! IGUALQUE        [ shift and go to state 43 ]
  ! NIGUALQUE       [ shift and go to state 44 ]


state 62

    (27) expresion -> expresion DIVIDIDO expresion .
    (22) expresion -> expresion . INCREMENT def_instr_prima
    (23) expresion -> expresion . DECREMENT def_instr_prima
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . ELEVADO expresion
    (29) expresion -> expresion . MOD expresion
    (30) expresion -> expresion . AND expresion
    (31) expresion -> expresion . OR expresion
    (32) expresion -> expresion . MAYQUE expresion
    (33) expresion -> expresion . MENQUE expresion
    (34) expresion -> expresion . MAYIGUALQUE expresion
    (35) expresion -> expresion . MENIGUALQUE expresion
    (36) expresion -> expresion . IGUALQUE expresion
    (37) expresion -> expresion . NIGUALQUE expresion

    MAS             reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    MENOS           reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    POR             reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    DIVIDIDO        reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    MOD             reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    AND             reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    OR              reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    MAYQUE          reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    MENQUE          reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    MAYIGUALQUE     reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    MENIGUALQUE     reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    IGUALQUE        reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    NIGUALQUE       reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    MAIN            reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    PRINT           reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    VAR             reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    ID              reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    WHILE           reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    IF              reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    NOT             reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    PARIZQ          reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    ENTERO          reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    DECIMAL         reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    CADENA          reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    CHAR            reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    TRUE            reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    FALSE           reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    $end            reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    PARDER          reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    PTCOMA          reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    LLAVDER         reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .)
    INCREMENT       shift and go to state 29
    DECREMENT       shift and go to state 30
    ELEVADO         shift and go to state 35

  ! INCREMENT       [ reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .) ]
  ! DECREMENT       [ reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .) ]
  ! ELEVADO         [ reduce using rule 27 (expresion -> expresion DIVIDIDO expresion .) ]
  ! MAS             [ shift and go to state 31 ]
  ! MENOS           [ shift and go to state 32 ]
  ! POR             [ shift and go to state 33 ]
  ! DIVIDIDO        [ shift and go to state 34 ]
  ! MOD             [ shift and go to state 36 ]
  ! AND             [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! MAYQUE          [ shift and go to state 39 ]
  ! MENQUE          [ shift and go to state 40 ]
  ! MAYIGUALQUE     [ shift and go to state 41 ]
  ! MENIGUALQUE     [ shift and go to state 42 ]
  ! IGUALQUE        [ shift and go to state 43 ]
  ! NIGUALQUE       [ shift and go to state 44 ]


state 63

    (28) expresion -> expresion ELEVADO expresion .
    (22) expresion -> expresion . INCREMENT def_instr_prima
    (23) expresion -> expresion . DECREMENT def_instr_prima
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . ELEVADO expresion
    (29) expresion -> expresion . MOD expresion
    (30) expresion -> expresion . AND expresion
    (31) expresion -> expresion . OR expresion
    (32) expresion -> expresion . MAYQUE expresion
    (33) expresion -> expresion . MENQUE expresion
    (34) expresion -> expresion . MAYIGUALQUE expresion
    (35) expresion -> expresion . MENIGUALQUE expresion
    (36) expresion -> expresion . IGUALQUE expresion
    (37) expresion -> expresion . NIGUALQUE expresion

    MAS             reduce using rule 28 (expresion -> expresion ELEVADO expresion .)
    MENOS           reduce using rule 28 (expresion -> expresion ELEVADO expresion .)
    POR             reduce using rule 28 (expresion -> expresion ELEVADO expresion .)
    DIVIDIDO        reduce using rule 28 (expresion -> expresion ELEVADO expresion .)
    ELEVADO         reduce using rule 28 (expresion -> expresion ELEVADO expresion .)
    MOD             reduce using rule 28 (expresion -> expresion ELEVADO expresion .)
    AND             reduce using rule 28 (expresion -> expresion ELEVADO expresion .)
    OR              reduce using rule 28 (expresion -> expresion ELEVADO expresion .)
    MAYQUE          reduce using rule 28 (expresion -> expresion ELEVADO expresion .)
    MENQUE          reduce using rule 28 (expresion -> expresion ELEVADO expresion .)
    MAYIGUALQUE     reduce using rule 28 (expresion -> expresion ELEVADO expresion .)
    MENIGUALQUE     reduce using rule 28 (expresion -> expresion ELEVADO expresion .)
    IGUALQUE        reduce using rule 28 (expresion -> expresion ELEVADO expresion .)
    NIGUALQUE       reduce using rule 28 (expresion -> expresion ELEVADO expresion .)
    MAIN            reduce using rule 28 (expresion -> expresion ELEVADO expresion .)
    PRINT           reduce using rule 28 (expresion -> expresion ELEVADO expresion .)
    VAR             reduce using rule 28 (expresion -> expresion ELEVADO expresion .)
    ID              reduce using rule 28 (expresion -> expresion ELEVADO expresion .)
    WHILE           reduce using rule 28 (expresion -> expresion ELEVADO expresion .)
    IF              reduce using rule 28 (expresion -> expresion ELEVADO expresion .)
    NOT             reduce using rule 28 (expresion -> expresion ELEVADO expresion .)
    PARIZQ          reduce using rule 28 (expresion -> expresion ELEVADO expresion .)
    ENTERO          reduce using rule 28 (expresion -> expresion ELEVADO expresion .)
    DECIMAL         reduce using rule 28 (expresion -> expresion ELEVADO expresion .)
    CADENA          reduce using rule 28 (expresion -> expresion ELEVADO expresion .)
    CHAR            reduce using rule 28 (expresion -> expresion ELEVADO expresion .)
    TRUE            reduce using rule 28 (expresion -> expresion ELEVADO expresion .)
    FALSE           reduce using rule 28 (expresion -> expresion ELEVADO expresion .)
    $end            reduce using rule 28 (expresion -> expresion ELEVADO expresion .)
    PARDER          reduce using rule 28 (expresion -> expresion ELEVADO expresion .)
    PTCOMA          reduce using rule 28 (expresion -> expresion ELEVADO expresion .)
    LLAVDER         reduce using rule 28 (expresion -> expresion ELEVADO expresion .)
    INCREMENT       shift and go to state 29
    DECREMENT       shift and go to state 30

  ! INCREMENT       [ reduce using rule 28 (expresion -> expresion ELEVADO expresion .) ]
  ! DECREMENT       [ reduce using rule 28 (expresion -> expresion ELEVADO expresion .) ]
  ! MAS             [ shift and go to state 31 ]
  ! MENOS           [ shift and go to state 32 ]
  ! POR             [ shift and go to state 33 ]
  ! DIVIDIDO        [ shift and go to state 34 ]
  ! ELEVADO         [ shift and go to state 35 ]
  ! MOD             [ shift and go to state 36 ]
  ! AND             [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! MAYQUE          [ shift and go to state 39 ]
  ! MENQUE          [ shift and go to state 40 ]
  ! MAYIGUALQUE     [ shift and go to state 41 ]
  ! MENIGUALQUE     [ shift and go to state 42 ]
  ! IGUALQUE        [ shift and go to state 43 ]
  ! NIGUALQUE       [ shift and go to state 44 ]


state 64

    (29) expresion -> expresion MOD expresion .
    (22) expresion -> expresion . INCREMENT def_instr_prima
    (23) expresion -> expresion . DECREMENT def_instr_prima
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . ELEVADO expresion
    (29) expresion -> expresion . MOD expresion
    (30) expresion -> expresion . AND expresion
    (31) expresion -> expresion . OR expresion
    (32) expresion -> expresion . MAYQUE expresion
    (33) expresion -> expresion . MENQUE expresion
    (34) expresion -> expresion . MAYIGUALQUE expresion
    (35) expresion -> expresion . MENIGUALQUE expresion
    (36) expresion -> expresion . IGUALQUE expresion
    (37) expresion -> expresion . NIGUALQUE expresion

    MAS             reduce using rule 29 (expresion -> expresion MOD expresion .)
    MENOS           reduce using rule 29 (expresion -> expresion MOD expresion .)
    POR             reduce using rule 29 (expresion -> expresion MOD expresion .)
    DIVIDIDO        reduce using rule 29 (expresion -> expresion MOD expresion .)
    MOD             reduce using rule 29 (expresion -> expresion MOD expresion .)
    AND             reduce using rule 29 (expresion -> expresion MOD expresion .)
    OR              reduce using rule 29 (expresion -> expresion MOD expresion .)
    MAYQUE          reduce using rule 29 (expresion -> expresion MOD expresion .)
    MENQUE          reduce using rule 29 (expresion -> expresion MOD expresion .)
    MAYIGUALQUE     reduce using rule 29 (expresion -> expresion MOD expresion .)
    MENIGUALQUE     reduce using rule 29 (expresion -> expresion MOD expresion .)
    IGUALQUE        reduce using rule 29 (expresion -> expresion MOD expresion .)
    NIGUALQUE       reduce using rule 29 (expresion -> expresion MOD expresion .)
    MAIN            reduce using rule 29 (expresion -> expresion MOD expresion .)
    PRINT           reduce using rule 29 (expresion -> expresion MOD expresion .)
    VAR             reduce using rule 29 (expresion -> expresion MOD expresion .)
    ID              reduce using rule 29 (expresion -> expresion MOD expresion .)
    WHILE           reduce using rule 29 (expresion -> expresion MOD expresion .)
    IF              reduce using rule 29 (expresion -> expresion MOD expresion .)
    NOT             reduce using rule 29 (expresion -> expresion MOD expresion .)
    PARIZQ          reduce using rule 29 (expresion -> expresion MOD expresion .)
    ENTERO          reduce using rule 29 (expresion -> expresion MOD expresion .)
    DECIMAL         reduce using rule 29 (expresion -> expresion MOD expresion .)
    CADENA          reduce using rule 29 (expresion -> expresion MOD expresion .)
    CHAR            reduce using rule 29 (expresion -> expresion MOD expresion .)
    TRUE            reduce using rule 29 (expresion -> expresion MOD expresion .)
    FALSE           reduce using rule 29 (expresion -> expresion MOD expresion .)
    $end            reduce using rule 29 (expresion -> expresion MOD expresion .)
    PARDER          reduce using rule 29 (expresion -> expresion MOD expresion .)
    PTCOMA          reduce using rule 29 (expresion -> expresion MOD expresion .)
    LLAVDER         reduce using rule 29 (expresion -> expresion MOD expresion .)
    INCREMENT       shift and go to state 29
    DECREMENT       shift and go to state 30
    ELEVADO         shift and go to state 35

  ! INCREMENT       [ reduce using rule 29 (expresion -> expresion MOD expresion .) ]
  ! DECREMENT       [ reduce using rule 29 (expresion -> expresion MOD expresion .) ]
  ! ELEVADO         [ reduce using rule 29 (expresion -> expresion MOD expresion .) ]
  ! MAS             [ shift and go to state 31 ]
  ! MENOS           [ shift and go to state 32 ]
  ! POR             [ shift and go to state 33 ]
  ! DIVIDIDO        [ shift and go to state 34 ]
  ! MOD             [ shift and go to state 36 ]
  ! AND             [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! MAYQUE          [ shift and go to state 39 ]
  ! MENQUE          [ shift and go to state 40 ]
  ! MAYIGUALQUE     [ shift and go to state 41 ]
  ! MENIGUALQUE     [ shift and go to state 42 ]
  ! IGUALQUE        [ shift and go to state 43 ]
  ! NIGUALQUE       [ shift and go to state 44 ]


state 65

    (30) expresion -> expresion AND expresion .
    (22) expresion -> expresion . INCREMENT def_instr_prima
    (23) expresion -> expresion . DECREMENT def_instr_prima
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . ELEVADO expresion
    (29) expresion -> expresion . MOD expresion
    (30) expresion -> expresion . AND expresion
    (31) expresion -> expresion . OR expresion
    (32) expresion -> expresion . MAYQUE expresion
    (33) expresion -> expresion . MENQUE expresion
    (34) expresion -> expresion . MAYIGUALQUE expresion
    (35) expresion -> expresion . MENIGUALQUE expresion
    (36) expresion -> expresion . IGUALQUE expresion
    (37) expresion -> expresion . NIGUALQUE expresion

    AND             reduce using rule 30 (expresion -> expresion AND expresion .)
    OR              reduce using rule 30 (expresion -> expresion AND expresion .)
    MAIN            reduce using rule 30 (expresion -> expresion AND expresion .)
    PRINT           reduce using rule 30 (expresion -> expresion AND expresion .)
    VAR             reduce using rule 30 (expresion -> expresion AND expresion .)
    ID              reduce using rule 30 (expresion -> expresion AND expresion .)
    WHILE           reduce using rule 30 (expresion -> expresion AND expresion .)
    IF              reduce using rule 30 (expresion -> expresion AND expresion .)
    NOT             reduce using rule 30 (expresion -> expresion AND expresion .)
    PARIZQ          reduce using rule 30 (expresion -> expresion AND expresion .)
    ENTERO          reduce using rule 30 (expresion -> expresion AND expresion .)
    DECIMAL         reduce using rule 30 (expresion -> expresion AND expresion .)
    CADENA          reduce using rule 30 (expresion -> expresion AND expresion .)
    CHAR            reduce using rule 30 (expresion -> expresion AND expresion .)
    TRUE            reduce using rule 30 (expresion -> expresion AND expresion .)
    FALSE           reduce using rule 30 (expresion -> expresion AND expresion .)
    $end            reduce using rule 30 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 30 (expresion -> expresion AND expresion .)
    PTCOMA          reduce using rule 30 (expresion -> expresion AND expresion .)
    LLAVDER         reduce using rule 30 (expresion -> expresion AND expresion .)
    INCREMENT       shift and go to state 29
    DECREMENT       shift and go to state 30
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    ELEVADO         shift and go to state 35
    MOD             shift and go to state 36
    MAYQUE          shift and go to state 39
    MENQUE          shift and go to state 40
    MAYIGUALQUE     shift and go to state 41
    MENIGUALQUE     shift and go to state 42
    IGUALQUE        shift and go to state 43
    NIGUALQUE       shift and go to state 44

  ! INCREMENT       [ reduce using rule 30 (expresion -> expresion AND expresion .) ]
  ! DECREMENT       [ reduce using rule 30 (expresion -> expresion AND expresion .) ]
  ! MAS             [ reduce using rule 30 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 30 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 30 (expresion -> expresion AND expresion .) ]
  ! DIVIDIDO        [ reduce using rule 30 (expresion -> expresion AND expresion .) ]
  ! ELEVADO         [ reduce using rule 30 (expresion -> expresion AND expresion .) ]
  ! MOD             [ reduce using rule 30 (expresion -> expresion AND expresion .) ]
  ! MAYQUE          [ reduce using rule 30 (expresion -> expresion AND expresion .) ]
  ! MENQUE          [ reduce using rule 30 (expresion -> expresion AND expresion .) ]
  ! MAYIGUALQUE     [ reduce using rule 30 (expresion -> expresion AND expresion .) ]
  ! MENIGUALQUE     [ reduce using rule 30 (expresion -> expresion AND expresion .) ]
  ! IGUALQUE        [ reduce using rule 30 (expresion -> expresion AND expresion .) ]
  ! NIGUALQUE       [ reduce using rule 30 (expresion -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]


state 66

    (31) expresion -> expresion OR expresion .
    (22) expresion -> expresion . INCREMENT def_instr_prima
    (23) expresion -> expresion . DECREMENT def_instr_prima
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . ELEVADO expresion
    (29) expresion -> expresion . MOD expresion
    (30) expresion -> expresion . AND expresion
    (31) expresion -> expresion . OR expresion
    (32) expresion -> expresion . MAYQUE expresion
    (33) expresion -> expresion . MENQUE expresion
    (34) expresion -> expresion . MAYIGUALQUE expresion
    (35) expresion -> expresion . MENIGUALQUE expresion
    (36) expresion -> expresion . IGUALQUE expresion
    (37) expresion -> expresion . NIGUALQUE expresion

    AND             reduce using rule 31 (expresion -> expresion OR expresion .)
    OR              reduce using rule 31 (expresion -> expresion OR expresion .)
    MAIN            reduce using rule 31 (expresion -> expresion OR expresion .)
    PRINT           reduce using rule 31 (expresion -> expresion OR expresion .)
    VAR             reduce using rule 31 (expresion -> expresion OR expresion .)
    ID              reduce using rule 31 (expresion -> expresion OR expresion .)
    WHILE           reduce using rule 31 (expresion -> expresion OR expresion .)
    IF              reduce using rule 31 (expresion -> expresion OR expresion .)
    NOT             reduce using rule 31 (expresion -> expresion OR expresion .)
    PARIZQ          reduce using rule 31 (expresion -> expresion OR expresion .)
    ENTERO          reduce using rule 31 (expresion -> expresion OR expresion .)
    DECIMAL         reduce using rule 31 (expresion -> expresion OR expresion .)
    CADENA          reduce using rule 31 (expresion -> expresion OR expresion .)
    CHAR            reduce using rule 31 (expresion -> expresion OR expresion .)
    TRUE            reduce using rule 31 (expresion -> expresion OR expresion .)
    FALSE           reduce using rule 31 (expresion -> expresion OR expresion .)
    $end            reduce using rule 31 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 31 (expresion -> expresion OR expresion .)
    PTCOMA          reduce using rule 31 (expresion -> expresion OR expresion .)
    LLAVDER         reduce using rule 31 (expresion -> expresion OR expresion .)
    INCREMENT       shift and go to state 29
    DECREMENT       shift and go to state 30
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    ELEVADO         shift and go to state 35
    MOD             shift and go to state 36
    MAYQUE          shift and go to state 39
    MENQUE          shift and go to state 40
    MAYIGUALQUE     shift and go to state 41
    MENIGUALQUE     shift and go to state 42
    IGUALQUE        shift and go to state 43
    NIGUALQUE       shift and go to state 44

  ! INCREMENT       [ reduce using rule 31 (expresion -> expresion OR expresion .) ]
  ! DECREMENT       [ reduce using rule 31 (expresion -> expresion OR expresion .) ]
  ! MAS             [ reduce using rule 31 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 31 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 31 (expresion -> expresion OR expresion .) ]
  ! DIVIDIDO        [ reduce using rule 31 (expresion -> expresion OR expresion .) ]
  ! ELEVADO         [ reduce using rule 31 (expresion -> expresion OR expresion .) ]
  ! MOD             [ reduce using rule 31 (expresion -> expresion OR expresion .) ]
  ! MAYQUE          [ reduce using rule 31 (expresion -> expresion OR expresion .) ]
  ! MENQUE          [ reduce using rule 31 (expresion -> expresion OR expresion .) ]
  ! MAYIGUALQUE     [ reduce using rule 31 (expresion -> expresion OR expresion .) ]
  ! MENIGUALQUE     [ reduce using rule 31 (expresion -> expresion OR expresion .) ]
  ! IGUALQUE        [ reduce using rule 31 (expresion -> expresion OR expresion .) ]
  ! NIGUALQUE       [ reduce using rule 31 (expresion -> expresion OR expresion .) ]
  ! AND             [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]


state 67

    (32) expresion -> expresion MAYQUE expresion .
    (22) expresion -> expresion . INCREMENT def_instr_prima
    (23) expresion -> expresion . DECREMENT def_instr_prima
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . ELEVADO expresion
    (29) expresion -> expresion . MOD expresion
    (30) expresion -> expresion . AND expresion
    (31) expresion -> expresion . OR expresion
    (32) expresion -> expresion . MAYQUE expresion
    (33) expresion -> expresion . MENQUE expresion
    (34) expresion -> expresion . MAYIGUALQUE expresion
    (35) expresion -> expresion . MENIGUALQUE expresion
    (36) expresion -> expresion . IGUALQUE expresion
    (37) expresion -> expresion . NIGUALQUE expresion

    AND             reduce using rule 32 (expresion -> expresion MAYQUE expresion .)
    OR              reduce using rule 32 (expresion -> expresion MAYQUE expresion .)
    MAYQUE          reduce using rule 32 (expresion -> expresion MAYQUE expresion .)
    MENQUE          reduce using rule 32 (expresion -> expresion MAYQUE expresion .)
    MAYIGUALQUE     reduce using rule 32 (expresion -> expresion MAYQUE expresion .)
    MENIGUALQUE     reduce using rule 32 (expresion -> expresion MAYQUE expresion .)
    IGUALQUE        reduce using rule 32 (expresion -> expresion MAYQUE expresion .)
    NIGUALQUE       reduce using rule 32 (expresion -> expresion MAYQUE expresion .)
    MAIN            reduce using rule 32 (expresion -> expresion MAYQUE expresion .)
    PRINT           reduce using rule 32 (expresion -> expresion MAYQUE expresion .)
    VAR             reduce using rule 32 (expresion -> expresion MAYQUE expresion .)
    ID              reduce using rule 32 (expresion -> expresion MAYQUE expresion .)
    WHILE           reduce using rule 32 (expresion -> expresion MAYQUE expresion .)
    IF              reduce using rule 32 (expresion -> expresion MAYQUE expresion .)
    NOT             reduce using rule 32 (expresion -> expresion MAYQUE expresion .)
    PARIZQ          reduce using rule 32 (expresion -> expresion MAYQUE expresion .)
    ENTERO          reduce using rule 32 (expresion -> expresion MAYQUE expresion .)
    DECIMAL         reduce using rule 32 (expresion -> expresion MAYQUE expresion .)
    CADENA          reduce using rule 32 (expresion -> expresion MAYQUE expresion .)
    CHAR            reduce using rule 32 (expresion -> expresion MAYQUE expresion .)
    TRUE            reduce using rule 32 (expresion -> expresion MAYQUE expresion .)
    FALSE           reduce using rule 32 (expresion -> expresion MAYQUE expresion .)
    $end            reduce using rule 32 (expresion -> expresion MAYQUE expresion .)
    PARDER          reduce using rule 32 (expresion -> expresion MAYQUE expresion .)
    PTCOMA          reduce using rule 32 (expresion -> expresion MAYQUE expresion .)
    LLAVDER         reduce using rule 32 (expresion -> expresion MAYQUE expresion .)
    INCREMENT       shift and go to state 29
    DECREMENT       shift and go to state 30
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    ELEVADO         shift and go to state 35
    MOD             shift and go to state 36

  ! INCREMENT       [ reduce using rule 32 (expresion -> expresion MAYQUE expresion .) ]
  ! DECREMENT       [ reduce using rule 32 (expresion -> expresion MAYQUE expresion .) ]
  ! MAS             [ reduce using rule 32 (expresion -> expresion MAYQUE expresion .) ]
  ! MENOS           [ reduce using rule 32 (expresion -> expresion MAYQUE expresion .) ]
  ! POR             [ reduce using rule 32 (expresion -> expresion MAYQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 32 (expresion -> expresion MAYQUE expresion .) ]
  ! ELEVADO         [ reduce using rule 32 (expresion -> expresion MAYQUE expresion .) ]
  ! MOD             [ reduce using rule 32 (expresion -> expresion MAYQUE expresion .) ]
  ! AND             [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! MAYQUE          [ shift and go to state 39 ]
  ! MENQUE          [ shift and go to state 40 ]
  ! MAYIGUALQUE     [ shift and go to state 41 ]
  ! MENIGUALQUE     [ shift and go to state 42 ]
  ! IGUALQUE        [ shift and go to state 43 ]
  ! NIGUALQUE       [ shift and go to state 44 ]


state 68

    (33) expresion -> expresion MENQUE expresion .
    (22) expresion -> expresion . INCREMENT def_instr_prima
    (23) expresion -> expresion . DECREMENT def_instr_prima
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . ELEVADO expresion
    (29) expresion -> expresion . MOD expresion
    (30) expresion -> expresion . AND expresion
    (31) expresion -> expresion . OR expresion
    (32) expresion -> expresion . MAYQUE expresion
    (33) expresion -> expresion . MENQUE expresion
    (34) expresion -> expresion . MAYIGUALQUE expresion
    (35) expresion -> expresion . MENIGUALQUE expresion
    (36) expresion -> expresion . IGUALQUE expresion
    (37) expresion -> expresion . NIGUALQUE expresion

    AND             reduce using rule 33 (expresion -> expresion MENQUE expresion .)
    OR              reduce using rule 33 (expresion -> expresion MENQUE expresion .)
    MAYQUE          reduce using rule 33 (expresion -> expresion MENQUE expresion .)
    MENQUE          reduce using rule 33 (expresion -> expresion MENQUE expresion .)
    MAYIGUALQUE     reduce using rule 33 (expresion -> expresion MENQUE expresion .)
    MENIGUALQUE     reduce using rule 33 (expresion -> expresion MENQUE expresion .)
    IGUALQUE        reduce using rule 33 (expresion -> expresion MENQUE expresion .)
    NIGUALQUE       reduce using rule 33 (expresion -> expresion MENQUE expresion .)
    MAIN            reduce using rule 33 (expresion -> expresion MENQUE expresion .)
    PRINT           reduce using rule 33 (expresion -> expresion MENQUE expresion .)
    VAR             reduce using rule 33 (expresion -> expresion MENQUE expresion .)
    ID              reduce using rule 33 (expresion -> expresion MENQUE expresion .)
    WHILE           reduce using rule 33 (expresion -> expresion MENQUE expresion .)
    IF              reduce using rule 33 (expresion -> expresion MENQUE expresion .)
    NOT             reduce using rule 33 (expresion -> expresion MENQUE expresion .)
    PARIZQ          reduce using rule 33 (expresion -> expresion MENQUE expresion .)
    ENTERO          reduce using rule 33 (expresion -> expresion MENQUE expresion .)
    DECIMAL         reduce using rule 33 (expresion -> expresion MENQUE expresion .)
    CADENA          reduce using rule 33 (expresion -> expresion MENQUE expresion .)
    CHAR            reduce using rule 33 (expresion -> expresion MENQUE expresion .)
    TRUE            reduce using rule 33 (expresion -> expresion MENQUE expresion .)
    FALSE           reduce using rule 33 (expresion -> expresion MENQUE expresion .)
    $end            reduce using rule 33 (expresion -> expresion MENQUE expresion .)
    PARDER          reduce using rule 33 (expresion -> expresion MENQUE expresion .)
    PTCOMA          reduce using rule 33 (expresion -> expresion MENQUE expresion .)
    LLAVDER         reduce using rule 33 (expresion -> expresion MENQUE expresion .)
    INCREMENT       shift and go to state 29
    DECREMENT       shift and go to state 30
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    ELEVADO         shift and go to state 35
    MOD             shift and go to state 36

  ! INCREMENT       [ reduce using rule 33 (expresion -> expresion MENQUE expresion .) ]
  ! DECREMENT       [ reduce using rule 33 (expresion -> expresion MENQUE expresion .) ]
  ! MAS             [ reduce using rule 33 (expresion -> expresion MENQUE expresion .) ]
  ! MENOS           [ reduce using rule 33 (expresion -> expresion MENQUE expresion .) ]
  ! POR             [ reduce using rule 33 (expresion -> expresion MENQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 33 (expresion -> expresion MENQUE expresion .) ]
  ! ELEVADO         [ reduce using rule 33 (expresion -> expresion MENQUE expresion .) ]
  ! MOD             [ reduce using rule 33 (expresion -> expresion MENQUE expresion .) ]
  ! AND             [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! MAYQUE          [ shift and go to state 39 ]
  ! MENQUE          [ shift and go to state 40 ]
  ! MAYIGUALQUE     [ shift and go to state 41 ]
  ! MENIGUALQUE     [ shift and go to state 42 ]
  ! IGUALQUE        [ shift and go to state 43 ]
  ! NIGUALQUE       [ shift and go to state 44 ]


state 69

    (34) expresion -> expresion MAYIGUALQUE expresion .
    (22) expresion -> expresion . INCREMENT def_instr_prima
    (23) expresion -> expresion . DECREMENT def_instr_prima
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . ELEVADO expresion
    (29) expresion -> expresion . MOD expresion
    (30) expresion -> expresion . AND expresion
    (31) expresion -> expresion . OR expresion
    (32) expresion -> expresion . MAYQUE expresion
    (33) expresion -> expresion . MENQUE expresion
    (34) expresion -> expresion . MAYIGUALQUE expresion
    (35) expresion -> expresion . MENIGUALQUE expresion
    (36) expresion -> expresion . IGUALQUE expresion
    (37) expresion -> expresion . NIGUALQUE expresion

    AND             reduce using rule 34 (expresion -> expresion MAYIGUALQUE expresion .)
    OR              reduce using rule 34 (expresion -> expresion MAYIGUALQUE expresion .)
    MAYQUE          reduce using rule 34 (expresion -> expresion MAYIGUALQUE expresion .)
    MENQUE          reduce using rule 34 (expresion -> expresion MAYIGUALQUE expresion .)
    MAYIGUALQUE     reduce using rule 34 (expresion -> expresion MAYIGUALQUE expresion .)
    MENIGUALQUE     reduce using rule 34 (expresion -> expresion MAYIGUALQUE expresion .)
    IGUALQUE        reduce using rule 34 (expresion -> expresion MAYIGUALQUE expresion .)
    NIGUALQUE       reduce using rule 34 (expresion -> expresion MAYIGUALQUE expresion .)
    MAIN            reduce using rule 34 (expresion -> expresion MAYIGUALQUE expresion .)
    PRINT           reduce using rule 34 (expresion -> expresion MAYIGUALQUE expresion .)
    VAR             reduce using rule 34 (expresion -> expresion MAYIGUALQUE expresion .)
    ID              reduce using rule 34 (expresion -> expresion MAYIGUALQUE expresion .)
    WHILE           reduce using rule 34 (expresion -> expresion MAYIGUALQUE expresion .)
    IF              reduce using rule 34 (expresion -> expresion MAYIGUALQUE expresion .)
    NOT             reduce using rule 34 (expresion -> expresion MAYIGUALQUE expresion .)
    PARIZQ          reduce using rule 34 (expresion -> expresion MAYIGUALQUE expresion .)
    ENTERO          reduce using rule 34 (expresion -> expresion MAYIGUALQUE expresion .)
    DECIMAL         reduce using rule 34 (expresion -> expresion MAYIGUALQUE expresion .)
    CADENA          reduce using rule 34 (expresion -> expresion MAYIGUALQUE expresion .)
    CHAR            reduce using rule 34 (expresion -> expresion MAYIGUALQUE expresion .)
    TRUE            reduce using rule 34 (expresion -> expresion MAYIGUALQUE expresion .)
    FALSE           reduce using rule 34 (expresion -> expresion MAYIGUALQUE expresion .)
    $end            reduce using rule 34 (expresion -> expresion MAYIGUALQUE expresion .)
    PARDER          reduce using rule 34 (expresion -> expresion MAYIGUALQUE expresion .)
    PTCOMA          reduce using rule 34 (expresion -> expresion MAYIGUALQUE expresion .)
    LLAVDER         reduce using rule 34 (expresion -> expresion MAYIGUALQUE expresion .)
    INCREMENT       shift and go to state 29
    DECREMENT       shift and go to state 30
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    ELEVADO         shift and go to state 35
    MOD             shift and go to state 36

  ! INCREMENT       [ reduce using rule 34 (expresion -> expresion MAYIGUALQUE expresion .) ]
  ! DECREMENT       [ reduce using rule 34 (expresion -> expresion MAYIGUALQUE expresion .) ]
  ! MAS             [ reduce using rule 34 (expresion -> expresion MAYIGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 34 (expresion -> expresion MAYIGUALQUE expresion .) ]
  ! POR             [ reduce using rule 34 (expresion -> expresion MAYIGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 34 (expresion -> expresion MAYIGUALQUE expresion .) ]
  ! ELEVADO         [ reduce using rule 34 (expresion -> expresion MAYIGUALQUE expresion .) ]
  ! MOD             [ reduce using rule 34 (expresion -> expresion MAYIGUALQUE expresion .) ]
  ! AND             [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! MAYQUE          [ shift and go to state 39 ]
  ! MENQUE          [ shift and go to state 40 ]
  ! MAYIGUALQUE     [ shift and go to state 41 ]
  ! MENIGUALQUE     [ shift and go to state 42 ]
  ! IGUALQUE        [ shift and go to state 43 ]
  ! NIGUALQUE       [ shift and go to state 44 ]


state 70

    (35) expresion -> expresion MENIGUALQUE expresion .
    (22) expresion -> expresion . INCREMENT def_instr_prima
    (23) expresion -> expresion . DECREMENT def_instr_prima
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . ELEVADO expresion
    (29) expresion -> expresion . MOD expresion
    (30) expresion -> expresion . AND expresion
    (31) expresion -> expresion . OR expresion
    (32) expresion -> expresion . MAYQUE expresion
    (33) expresion -> expresion . MENQUE expresion
    (34) expresion -> expresion . MAYIGUALQUE expresion
    (35) expresion -> expresion . MENIGUALQUE expresion
    (36) expresion -> expresion . IGUALQUE expresion
    (37) expresion -> expresion . NIGUALQUE expresion

    AND             reduce using rule 35 (expresion -> expresion MENIGUALQUE expresion .)
    OR              reduce using rule 35 (expresion -> expresion MENIGUALQUE expresion .)
    MAYQUE          reduce using rule 35 (expresion -> expresion MENIGUALQUE expresion .)
    MENQUE          reduce using rule 35 (expresion -> expresion MENIGUALQUE expresion .)
    MAYIGUALQUE     reduce using rule 35 (expresion -> expresion MENIGUALQUE expresion .)
    MENIGUALQUE     reduce using rule 35 (expresion -> expresion MENIGUALQUE expresion .)
    IGUALQUE        reduce using rule 35 (expresion -> expresion MENIGUALQUE expresion .)
    NIGUALQUE       reduce using rule 35 (expresion -> expresion MENIGUALQUE expresion .)
    MAIN            reduce using rule 35 (expresion -> expresion MENIGUALQUE expresion .)
    PRINT           reduce using rule 35 (expresion -> expresion MENIGUALQUE expresion .)
    VAR             reduce using rule 35 (expresion -> expresion MENIGUALQUE expresion .)
    ID              reduce using rule 35 (expresion -> expresion MENIGUALQUE expresion .)
    WHILE           reduce using rule 35 (expresion -> expresion MENIGUALQUE expresion .)
    IF              reduce using rule 35 (expresion -> expresion MENIGUALQUE expresion .)
    NOT             reduce using rule 35 (expresion -> expresion MENIGUALQUE expresion .)
    PARIZQ          reduce using rule 35 (expresion -> expresion MENIGUALQUE expresion .)
    ENTERO          reduce using rule 35 (expresion -> expresion MENIGUALQUE expresion .)
    DECIMAL         reduce using rule 35 (expresion -> expresion MENIGUALQUE expresion .)
    CADENA          reduce using rule 35 (expresion -> expresion MENIGUALQUE expresion .)
    CHAR            reduce using rule 35 (expresion -> expresion MENIGUALQUE expresion .)
    TRUE            reduce using rule 35 (expresion -> expresion MENIGUALQUE expresion .)
    FALSE           reduce using rule 35 (expresion -> expresion MENIGUALQUE expresion .)
    $end            reduce using rule 35 (expresion -> expresion MENIGUALQUE expresion .)
    PARDER          reduce using rule 35 (expresion -> expresion MENIGUALQUE expresion .)
    PTCOMA          reduce using rule 35 (expresion -> expresion MENIGUALQUE expresion .)
    LLAVDER         reduce using rule 35 (expresion -> expresion MENIGUALQUE expresion .)
    INCREMENT       shift and go to state 29
    DECREMENT       shift and go to state 30
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    ELEVADO         shift and go to state 35
    MOD             shift and go to state 36

  ! INCREMENT       [ reduce using rule 35 (expresion -> expresion MENIGUALQUE expresion .) ]
  ! DECREMENT       [ reduce using rule 35 (expresion -> expresion MENIGUALQUE expresion .) ]
  ! MAS             [ reduce using rule 35 (expresion -> expresion MENIGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 35 (expresion -> expresion MENIGUALQUE expresion .) ]
  ! POR             [ reduce using rule 35 (expresion -> expresion MENIGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 35 (expresion -> expresion MENIGUALQUE expresion .) ]
  ! ELEVADO         [ reduce using rule 35 (expresion -> expresion MENIGUALQUE expresion .) ]
  ! MOD             [ reduce using rule 35 (expresion -> expresion MENIGUALQUE expresion .) ]
  ! AND             [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! MAYQUE          [ shift and go to state 39 ]
  ! MENQUE          [ shift and go to state 40 ]
  ! MAYIGUALQUE     [ shift and go to state 41 ]
  ! MENIGUALQUE     [ shift and go to state 42 ]
  ! IGUALQUE        [ shift and go to state 43 ]
  ! NIGUALQUE       [ shift and go to state 44 ]


state 71

    (36) expresion -> expresion IGUALQUE expresion .
    (22) expresion -> expresion . INCREMENT def_instr_prima
    (23) expresion -> expresion . DECREMENT def_instr_prima
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . ELEVADO expresion
    (29) expresion -> expresion . MOD expresion
    (30) expresion -> expresion . AND expresion
    (31) expresion -> expresion . OR expresion
    (32) expresion -> expresion . MAYQUE expresion
    (33) expresion -> expresion . MENQUE expresion
    (34) expresion -> expresion . MAYIGUALQUE expresion
    (35) expresion -> expresion . MENIGUALQUE expresion
    (36) expresion -> expresion . IGUALQUE expresion
    (37) expresion -> expresion . NIGUALQUE expresion

    AND             reduce using rule 36 (expresion -> expresion IGUALQUE expresion .)
    OR              reduce using rule 36 (expresion -> expresion IGUALQUE expresion .)
    MAYQUE          reduce using rule 36 (expresion -> expresion IGUALQUE expresion .)
    MENQUE          reduce using rule 36 (expresion -> expresion IGUALQUE expresion .)
    MAYIGUALQUE     reduce using rule 36 (expresion -> expresion IGUALQUE expresion .)
    MENIGUALQUE     reduce using rule 36 (expresion -> expresion IGUALQUE expresion .)
    IGUALQUE        reduce using rule 36 (expresion -> expresion IGUALQUE expresion .)
    NIGUALQUE       reduce using rule 36 (expresion -> expresion IGUALQUE expresion .)
    MAIN            reduce using rule 36 (expresion -> expresion IGUALQUE expresion .)
    PRINT           reduce using rule 36 (expresion -> expresion IGUALQUE expresion .)
    VAR             reduce using rule 36 (expresion -> expresion IGUALQUE expresion .)
    ID              reduce using rule 36 (expresion -> expresion IGUALQUE expresion .)
    WHILE           reduce using rule 36 (expresion -> expresion IGUALQUE expresion .)
    IF              reduce using rule 36 (expresion -> expresion IGUALQUE expresion .)
    NOT             reduce using rule 36 (expresion -> expresion IGUALQUE expresion .)
    PARIZQ          reduce using rule 36 (expresion -> expresion IGUALQUE expresion .)
    ENTERO          reduce using rule 36 (expresion -> expresion IGUALQUE expresion .)
    DECIMAL         reduce using rule 36 (expresion -> expresion IGUALQUE expresion .)
    CADENA          reduce using rule 36 (expresion -> expresion IGUALQUE expresion .)
    CHAR            reduce using rule 36 (expresion -> expresion IGUALQUE expresion .)
    TRUE            reduce using rule 36 (expresion -> expresion IGUALQUE expresion .)
    FALSE           reduce using rule 36 (expresion -> expresion IGUALQUE expresion .)
    $end            reduce using rule 36 (expresion -> expresion IGUALQUE expresion .)
    PARDER          reduce using rule 36 (expresion -> expresion IGUALQUE expresion .)
    PTCOMA          reduce using rule 36 (expresion -> expresion IGUALQUE expresion .)
    LLAVDER         reduce using rule 36 (expresion -> expresion IGUALQUE expresion .)
    INCREMENT       shift and go to state 29
    DECREMENT       shift and go to state 30
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    ELEVADO         shift and go to state 35
    MOD             shift and go to state 36

  ! INCREMENT       [ reduce using rule 36 (expresion -> expresion IGUALQUE expresion .) ]
  ! DECREMENT       [ reduce using rule 36 (expresion -> expresion IGUALQUE expresion .) ]
  ! MAS             [ reduce using rule 36 (expresion -> expresion IGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 36 (expresion -> expresion IGUALQUE expresion .) ]
  ! POR             [ reduce using rule 36 (expresion -> expresion IGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 36 (expresion -> expresion IGUALQUE expresion .) ]
  ! ELEVADO         [ reduce using rule 36 (expresion -> expresion IGUALQUE expresion .) ]
  ! MOD             [ reduce using rule 36 (expresion -> expresion IGUALQUE expresion .) ]
  ! AND             [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! MAYQUE          [ shift and go to state 39 ]
  ! MENQUE          [ shift and go to state 40 ]
  ! MAYIGUALQUE     [ shift and go to state 41 ]
  ! MENIGUALQUE     [ shift and go to state 42 ]
  ! IGUALQUE        [ shift and go to state 43 ]
  ! NIGUALQUE       [ shift and go to state 44 ]


state 72

    (37) expresion -> expresion NIGUALQUE expresion .
    (22) expresion -> expresion . INCREMENT def_instr_prima
    (23) expresion -> expresion . DECREMENT def_instr_prima
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . ELEVADO expresion
    (29) expresion -> expresion . MOD expresion
    (30) expresion -> expresion . AND expresion
    (31) expresion -> expresion . OR expresion
    (32) expresion -> expresion . MAYQUE expresion
    (33) expresion -> expresion . MENQUE expresion
    (34) expresion -> expresion . MAYIGUALQUE expresion
    (35) expresion -> expresion . MENIGUALQUE expresion
    (36) expresion -> expresion . IGUALQUE expresion
    (37) expresion -> expresion . NIGUALQUE expresion

    AND             reduce using rule 37 (expresion -> expresion NIGUALQUE expresion .)
    OR              reduce using rule 37 (expresion -> expresion NIGUALQUE expresion .)
    MAYQUE          reduce using rule 37 (expresion -> expresion NIGUALQUE expresion .)
    MENQUE          reduce using rule 37 (expresion -> expresion NIGUALQUE expresion .)
    MAYIGUALQUE     reduce using rule 37 (expresion -> expresion NIGUALQUE expresion .)
    MENIGUALQUE     reduce using rule 37 (expresion -> expresion NIGUALQUE expresion .)
    IGUALQUE        reduce using rule 37 (expresion -> expresion NIGUALQUE expresion .)
    NIGUALQUE       reduce using rule 37 (expresion -> expresion NIGUALQUE expresion .)
    MAIN            reduce using rule 37 (expresion -> expresion NIGUALQUE expresion .)
    PRINT           reduce using rule 37 (expresion -> expresion NIGUALQUE expresion .)
    VAR             reduce using rule 37 (expresion -> expresion NIGUALQUE expresion .)
    ID              reduce using rule 37 (expresion -> expresion NIGUALQUE expresion .)
    WHILE           reduce using rule 37 (expresion -> expresion NIGUALQUE expresion .)
    IF              reduce using rule 37 (expresion -> expresion NIGUALQUE expresion .)
    NOT             reduce using rule 37 (expresion -> expresion NIGUALQUE expresion .)
    PARIZQ          reduce using rule 37 (expresion -> expresion NIGUALQUE expresion .)
    ENTERO          reduce using rule 37 (expresion -> expresion NIGUALQUE expresion .)
    DECIMAL         reduce using rule 37 (expresion -> expresion NIGUALQUE expresion .)
    CADENA          reduce using rule 37 (expresion -> expresion NIGUALQUE expresion .)
    CHAR            reduce using rule 37 (expresion -> expresion NIGUALQUE expresion .)
    TRUE            reduce using rule 37 (expresion -> expresion NIGUALQUE expresion .)
    FALSE           reduce using rule 37 (expresion -> expresion NIGUALQUE expresion .)
    $end            reduce using rule 37 (expresion -> expresion NIGUALQUE expresion .)
    PARDER          reduce using rule 37 (expresion -> expresion NIGUALQUE expresion .)
    PTCOMA          reduce using rule 37 (expresion -> expresion NIGUALQUE expresion .)
    LLAVDER         reduce using rule 37 (expresion -> expresion NIGUALQUE expresion .)
    INCREMENT       shift and go to state 29
    DECREMENT       shift and go to state 30
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    ELEVADO         shift and go to state 35
    MOD             shift and go to state 36

  ! INCREMENT       [ reduce using rule 37 (expresion -> expresion NIGUALQUE expresion .) ]
  ! DECREMENT       [ reduce using rule 37 (expresion -> expresion NIGUALQUE expresion .) ]
  ! MAS             [ reduce using rule 37 (expresion -> expresion NIGUALQUE expresion .) ]
  ! MENOS           [ reduce using rule 37 (expresion -> expresion NIGUALQUE expresion .) ]
  ! POR             [ reduce using rule 37 (expresion -> expresion NIGUALQUE expresion .) ]
  ! DIVIDIDO        [ reduce using rule 37 (expresion -> expresion NIGUALQUE expresion .) ]
  ! ELEVADO         [ reduce using rule 37 (expresion -> expresion NIGUALQUE expresion .) ]
  ! MOD             [ reduce using rule 37 (expresion -> expresion NIGUALQUE expresion .) ]
  ! AND             [ shift and go to state 37 ]
  ! OR              [ shift and go to state 38 ]
  ! MAYQUE          [ shift and go to state 39 ]
  ! MENQUE          [ shift and go to state 40 ]
  ! MAYIGUALQUE     [ shift and go to state 41 ]
  ! MENIGUALQUE     [ shift and go to state 42 ]
  ! IGUALQUE        [ shift and go to state 43 ]
  ! NIGUALQUE       [ shift and go to state 44 ]


state 73

    (13) func_main -> MAIN PARIZQ PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 81


state 74

    (40) expresion -> PARIZQ expresion PARDER .

    INCREMENT       reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    DECREMENT       reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    MAS             reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    DIVIDIDO        reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    ELEVADO         reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    MOD             reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    MAYQUE          reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    MENQUE          reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    MAYIGUALQUE     reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    MENIGUALQUE     reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    IGUALQUE        reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    NIGUALQUE       reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    MAIN            reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    PRINT           reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    VAR             reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    ID              reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    WHILE           reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    IF              reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    NOT             reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    PARIZQ          reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    ENTERO          reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    DECIMAL         reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    CADENA          reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    CHAR            reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    TRUE            reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    FALSE           reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    $end            reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    PTCOMA          reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)
    LLAVDER         reduce using rule 40 (expresion -> PARIZQ expresion PARDER .)


state 75

    (14) imprimir_instr -> PRINT PARIZQ expresion . PARDER def_instr_prima
    (22) expresion -> expresion . INCREMENT def_instr_prima
    (23) expresion -> expresion . DECREMENT def_instr_prima
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . ELEVADO expresion
    (29) expresion -> expresion . MOD expresion
    (30) expresion -> expresion . AND expresion
    (31) expresion -> expresion . OR expresion
    (32) expresion -> expresion . MAYQUE expresion
    (33) expresion -> expresion . MENQUE expresion
    (34) expresion -> expresion . MAYIGUALQUE expresion
    (35) expresion -> expresion . MENIGUALQUE expresion
    (36) expresion -> expresion . IGUALQUE expresion
    (37) expresion -> expresion . NIGUALQUE expresion

    PARDER          shift and go to state 82
    INCREMENT       shift and go to state 29
    DECREMENT       shift and go to state 30
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    ELEVADO         shift and go to state 35
    MOD             shift and go to state 36
    AND             shift and go to state 37
    OR              shift and go to state 38
    MAYQUE          shift and go to state 39
    MENQUE          shift and go to state 40
    MAYIGUALQUE     shift and go to state 41
    MENIGUALQUE     shift and go to state 42
    IGUALQUE        shift and go to state 43
    NIGUALQUE       shift and go to state 44


state 76

    (15) definicion_instr -> VAR ID def_instr_prima .

    MAIN            reduce using rule 15 (definicion_instr -> VAR ID def_instr_prima .)
    PRINT           reduce using rule 15 (definicion_instr -> VAR ID def_instr_prima .)
    VAR             reduce using rule 15 (definicion_instr -> VAR ID def_instr_prima .)
    ID              reduce using rule 15 (definicion_instr -> VAR ID def_instr_prima .)
    WHILE           reduce using rule 15 (definicion_instr -> VAR ID def_instr_prima .)
    IF              reduce using rule 15 (definicion_instr -> VAR ID def_instr_prima .)
    MENOS           reduce using rule 15 (definicion_instr -> VAR ID def_instr_prima .)
    NOT             reduce using rule 15 (definicion_instr -> VAR ID def_instr_prima .)
    PARIZQ          reduce using rule 15 (definicion_instr -> VAR ID def_instr_prima .)
    ENTERO          reduce using rule 15 (definicion_instr -> VAR ID def_instr_prima .)
    DECIMAL         reduce using rule 15 (definicion_instr -> VAR ID def_instr_prima .)
    CADENA          reduce using rule 15 (definicion_instr -> VAR ID def_instr_prima .)
    CHAR            reduce using rule 15 (definicion_instr -> VAR ID def_instr_prima .)
    TRUE            reduce using rule 15 (definicion_instr -> VAR ID def_instr_prima .)
    FALSE           reduce using rule 15 (definicion_instr -> VAR ID def_instr_prima .)
    $end            reduce using rule 15 (definicion_instr -> VAR ID def_instr_prima .)
    LLAVDER         reduce using rule 15 (definicion_instr -> VAR ID def_instr_prima .)


state 77

    (17) def_asig_instr -> VAR ID IGUAL . expresion def_instr_prima
    (22) expresion -> . expresion INCREMENT def_instr_prima
    (23) expresion -> . expresion DECREMENT def_instr_prima
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion ELEVADO expresion
    (29) expresion -> . expresion MOD expresion
    (30) expresion -> . expresion AND expresion
    (31) expresion -> . expresion OR expresion
    (32) expresion -> . expresion MAYQUE expresion
    (33) expresion -> . expresion MENQUE expresion
    (34) expresion -> . expresion MAYIGUALQUE expresion
    (35) expresion -> . expresion MENIGUALQUE expresion
    (36) expresion -> . expresion IGUALQUE expresion
    (37) expresion -> . expresion NIGUALQUE expresion
    (38) expresion -> . MENOS expresion
    (39) expresion -> . NOT expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . ID
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . CHAR
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE

    MENOS           shift and go to state 20
    NOT             shift and go to state 21
    PARIZQ          shift and go to state 14
    ID              shift and go to state 47
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 24
    CHAR            shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expresion                      shift and go to state 83

state 78

    (16) asignacion_instr -> ID IGUAL expresion . def_instr_prima
    (22) expresion -> expresion . INCREMENT def_instr_prima
    (23) expresion -> expresion . DECREMENT def_instr_prima
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . ELEVADO expresion
    (29) expresion -> expresion . MOD expresion
    (30) expresion -> expresion . AND expresion
    (31) expresion -> expresion . OR expresion
    (32) expresion -> expresion . MAYQUE expresion
    (33) expresion -> expresion . MENQUE expresion
    (34) expresion -> expresion . MAYIGUALQUE expresion
    (35) expresion -> expresion . MENIGUALQUE expresion
    (36) expresion -> expresion . IGUALQUE expresion
    (37) expresion -> expresion . NIGUALQUE expresion
    (48) def_instr_prima -> . PTCOMA
    (49) def_instr_prima -> . empty
    (50) empty -> .

  ! shift/reduce conflict for MENOS resolved as shift
    INCREMENT       shift and go to state 29
    DECREMENT       shift and go to state 30
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    ELEVADO         shift and go to state 35
    MOD             shift and go to state 36
    AND             shift and go to state 37
    OR              shift and go to state 38
    MAYQUE          shift and go to state 39
    MENQUE          shift and go to state 40
    MAYIGUALQUE     shift and go to state 41
    MENIGUALQUE     shift and go to state 42
    IGUALQUE        shift and go to state 43
    NIGUALQUE       shift and go to state 44
    PTCOMA          shift and go to state 56
    MAIN            reduce using rule 50 (empty -> .)
    PRINT           reduce using rule 50 (empty -> .)
    VAR             reduce using rule 50 (empty -> .)
    ID              reduce using rule 50 (empty -> .)
    WHILE           reduce using rule 50 (empty -> .)
    IF              reduce using rule 50 (empty -> .)
    NOT             reduce using rule 50 (empty -> .)
    PARIZQ          reduce using rule 50 (empty -> .)
    ENTERO          reduce using rule 50 (empty -> .)
    DECIMAL         reduce using rule 50 (empty -> .)
    CADENA          reduce using rule 50 (empty -> .)
    CHAR            reduce using rule 50 (empty -> .)
    TRUE            reduce using rule 50 (empty -> .)
    FALSE           reduce using rule 50 (empty -> .)
    $end            reduce using rule 50 (empty -> .)
    LLAVDER         reduce using rule 50 (empty -> .)

  ! MENOS           [ reduce using rule 50 (empty -> .) ]

    def_instr_prima                shift and go to state 84
    empty                          shift and go to state 57

state 79

    (21) while_instr -> WHILE PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER
    (22) expresion -> expresion . INCREMENT def_instr_prima
    (23) expresion -> expresion . DECREMENT def_instr_prima
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . ELEVADO expresion
    (29) expresion -> expresion . MOD expresion
    (30) expresion -> expresion . AND expresion
    (31) expresion -> expresion . OR expresion
    (32) expresion -> expresion . MAYQUE expresion
    (33) expresion -> expresion . MENQUE expresion
    (34) expresion -> expresion . MAYIGUALQUE expresion
    (35) expresion -> expresion . MENIGUALQUE expresion
    (36) expresion -> expresion . IGUALQUE expresion
    (37) expresion -> expresion . NIGUALQUE expresion

    PARDER          shift and go to state 85
    INCREMENT       shift and go to state 29
    DECREMENT       shift and go to state 30
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    ELEVADO         shift and go to state 35
    MOD             shift and go to state 36
    AND             shift and go to state 37
    OR              shift and go to state 38
    MAYQUE          shift and go to state 39
    MENQUE          shift and go to state 40
    MAYIGUALQUE     shift and go to state 41
    MENIGUALQUE     shift and go to state 42
    IGUALQUE        shift and go to state 43
    NIGUALQUE       shift and go to state 44


state 80

    (18) if_instr -> IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER
    (19) if_instr -> IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (20) if_instr -> IF PARIZQ expresion . PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instr
    (22) expresion -> expresion . INCREMENT def_instr_prima
    (23) expresion -> expresion . DECREMENT def_instr_prima
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . ELEVADO expresion
    (29) expresion -> expresion . MOD expresion
    (30) expresion -> expresion . AND expresion
    (31) expresion -> expresion . OR expresion
    (32) expresion -> expresion . MAYQUE expresion
    (33) expresion -> expresion . MENQUE expresion
    (34) expresion -> expresion . MAYIGUALQUE expresion
    (35) expresion -> expresion . MENIGUALQUE expresion
    (36) expresion -> expresion . IGUALQUE expresion
    (37) expresion -> expresion . NIGUALQUE expresion

    PARDER          shift and go to state 86
    INCREMENT       shift and go to state 29
    DECREMENT       shift and go to state 30
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    ELEVADO         shift and go to state 35
    MOD             shift and go to state 36
    AND             shift and go to state 37
    OR              shift and go to state 38
    MAYQUE          shift and go to state 39
    MENQUE          shift and go to state 40
    MAYIGUALQUE     shift and go to state 41
    MENIGUALQUE     shift and go to state 42
    IGUALQUE        shift and go to state 43
    NIGUALQUE       shift and go to state 44


state 81

    (13) func_main -> MAIN PARIZQ PARDER LLAVIZQ . instrucciones LLAVDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instrucciones -> . empty
    (5) instruccion -> . func_main
    (6) instruccion -> . imprimir_instr
    (7) instruccion -> . definicion_instr
    (8) instruccion -> . asignacion_instr
    (9) instruccion -> . def_asig_instr
    (10) instruccion -> . while_instr
    (11) instruccion -> . if_instr
    (12) instruccion -> . expresion
    (50) empty -> .
    (13) func_main -> . MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (14) imprimir_instr -> . PRINT PARIZQ expresion PARDER def_instr_prima
    (15) definicion_instr -> . VAR ID def_instr_prima
    (16) asignacion_instr -> . ID IGUAL expresion def_instr_prima
    (17) def_asig_instr -> . VAR ID IGUAL expresion def_instr_prima
    (21) while_instr -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (18) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (19) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (20) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instr
    (22) expresion -> . expresion INCREMENT def_instr_prima
    (23) expresion -> . expresion DECREMENT def_instr_prima
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion ELEVADO expresion
    (29) expresion -> . expresion MOD expresion
    (30) expresion -> . expresion AND expresion
    (31) expresion -> . expresion OR expresion
    (32) expresion -> . expresion MAYQUE expresion
    (33) expresion -> . expresion MENQUE expresion
    (34) expresion -> . expresion MAYIGUALQUE expresion
    (35) expresion -> . expresion MENIGUALQUE expresion
    (36) expresion -> . expresion IGUALQUE expresion
    (37) expresion -> . expresion NIGUALQUE expresion
    (38) expresion -> . MENOS expresion
    (39) expresion -> . NOT expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . ID
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . CHAR
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE

  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LLAVDER         reduce using rule 50 (empty -> .)
    MAIN            shift and go to state 13
    PRINT           shift and go to state 15
    VAR             shift and go to state 16
    ID              shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    MENOS           shift and go to state 20
    NOT             shift and go to state 21
    PARIZQ          shift and go to state 14
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 24
    CHAR            shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

  ! MAIN            [ reduce using rule 50 (empty -> .) ]
  ! PRINT           [ reduce using rule 50 (empty -> .) ]
  ! VAR             [ reduce using rule 50 (empty -> .) ]
  ! ID              [ reduce using rule 50 (empty -> .) ]
  ! WHILE           [ reduce using rule 50 (empty -> .) ]
  ! IF              [ reduce using rule 50 (empty -> .) ]
  ! MENOS           [ reduce using rule 50 (empty -> .) ]
  ! NOT             [ reduce using rule 50 (empty -> .) ]
  ! PARIZQ          [ reduce using rule 50 (empty -> .) ]
  ! ENTERO          [ reduce using rule 50 (empty -> .) ]
  ! DECIMAL         [ reduce using rule 50 (empty -> .) ]
  ! CADENA          [ reduce using rule 50 (empty -> .) ]
  ! CHAR            [ reduce using rule 50 (empty -> .) ]
  ! TRUE            [ reduce using rule 50 (empty -> .) ]
  ! FALSE           [ reduce using rule 50 (empty -> .) ]

    instrucciones                  shift and go to state 87
    instruccion                    shift and go to state 3
    empty                          shift and go to state 4
    func_main                      shift and go to state 5
    imprimir_instr                 shift and go to state 6
    definicion_instr               shift and go to state 7
    asignacion_instr               shift and go to state 8
    def_asig_instr                 shift and go to state 9
    while_instr                    shift and go to state 10
    if_instr                       shift and go to state 11
    expresion                      shift and go to state 12

state 82

    (14) imprimir_instr -> PRINT PARIZQ expresion PARDER . def_instr_prima
    (48) def_instr_prima -> . PTCOMA
    (49) def_instr_prima -> . empty
    (50) empty -> .

    PTCOMA          shift and go to state 56
    MAIN            reduce using rule 50 (empty -> .)
    PRINT           reduce using rule 50 (empty -> .)
    VAR             reduce using rule 50 (empty -> .)
    ID              reduce using rule 50 (empty -> .)
    WHILE           reduce using rule 50 (empty -> .)
    IF              reduce using rule 50 (empty -> .)
    MENOS           reduce using rule 50 (empty -> .)
    NOT             reduce using rule 50 (empty -> .)
    PARIZQ          reduce using rule 50 (empty -> .)
    ENTERO          reduce using rule 50 (empty -> .)
    DECIMAL         reduce using rule 50 (empty -> .)
    CADENA          reduce using rule 50 (empty -> .)
    CHAR            reduce using rule 50 (empty -> .)
    TRUE            reduce using rule 50 (empty -> .)
    FALSE           reduce using rule 50 (empty -> .)
    $end            reduce using rule 50 (empty -> .)
    LLAVDER         reduce using rule 50 (empty -> .)

    def_instr_prima                shift and go to state 88
    empty                          shift and go to state 57

state 83

    (17) def_asig_instr -> VAR ID IGUAL expresion . def_instr_prima
    (22) expresion -> expresion . INCREMENT def_instr_prima
    (23) expresion -> expresion . DECREMENT def_instr_prima
    (24) expresion -> expresion . MAS expresion
    (25) expresion -> expresion . MENOS expresion
    (26) expresion -> expresion . POR expresion
    (27) expresion -> expresion . DIVIDIDO expresion
    (28) expresion -> expresion . ELEVADO expresion
    (29) expresion -> expresion . MOD expresion
    (30) expresion -> expresion . AND expresion
    (31) expresion -> expresion . OR expresion
    (32) expresion -> expresion . MAYQUE expresion
    (33) expresion -> expresion . MENQUE expresion
    (34) expresion -> expresion . MAYIGUALQUE expresion
    (35) expresion -> expresion . MENIGUALQUE expresion
    (36) expresion -> expresion . IGUALQUE expresion
    (37) expresion -> expresion . NIGUALQUE expresion
    (48) def_instr_prima -> . PTCOMA
    (49) def_instr_prima -> . empty
    (50) empty -> .

  ! shift/reduce conflict for MENOS resolved as shift
    INCREMENT       shift and go to state 29
    DECREMENT       shift and go to state 30
    MAS             shift and go to state 31
    MENOS           shift and go to state 32
    POR             shift and go to state 33
    DIVIDIDO        shift and go to state 34
    ELEVADO         shift and go to state 35
    MOD             shift and go to state 36
    AND             shift and go to state 37
    OR              shift and go to state 38
    MAYQUE          shift and go to state 39
    MENQUE          shift and go to state 40
    MAYIGUALQUE     shift and go to state 41
    MENIGUALQUE     shift and go to state 42
    IGUALQUE        shift and go to state 43
    NIGUALQUE       shift and go to state 44
    PTCOMA          shift and go to state 56
    MAIN            reduce using rule 50 (empty -> .)
    PRINT           reduce using rule 50 (empty -> .)
    VAR             reduce using rule 50 (empty -> .)
    ID              reduce using rule 50 (empty -> .)
    WHILE           reduce using rule 50 (empty -> .)
    IF              reduce using rule 50 (empty -> .)
    NOT             reduce using rule 50 (empty -> .)
    PARIZQ          reduce using rule 50 (empty -> .)
    ENTERO          reduce using rule 50 (empty -> .)
    DECIMAL         reduce using rule 50 (empty -> .)
    CADENA          reduce using rule 50 (empty -> .)
    CHAR            reduce using rule 50 (empty -> .)
    TRUE            reduce using rule 50 (empty -> .)
    FALSE           reduce using rule 50 (empty -> .)
    $end            reduce using rule 50 (empty -> .)
    LLAVDER         reduce using rule 50 (empty -> .)

  ! MENOS           [ reduce using rule 50 (empty -> .) ]

    def_instr_prima                shift and go to state 89
    empty                          shift and go to state 57

state 84

    (16) asignacion_instr -> ID IGUAL expresion def_instr_prima .

    MAIN            reduce using rule 16 (asignacion_instr -> ID IGUAL expresion def_instr_prima .)
    PRINT           reduce using rule 16 (asignacion_instr -> ID IGUAL expresion def_instr_prima .)
    VAR             reduce using rule 16 (asignacion_instr -> ID IGUAL expresion def_instr_prima .)
    ID              reduce using rule 16 (asignacion_instr -> ID IGUAL expresion def_instr_prima .)
    WHILE           reduce using rule 16 (asignacion_instr -> ID IGUAL expresion def_instr_prima .)
    IF              reduce using rule 16 (asignacion_instr -> ID IGUAL expresion def_instr_prima .)
    MENOS           reduce using rule 16 (asignacion_instr -> ID IGUAL expresion def_instr_prima .)
    NOT             reduce using rule 16 (asignacion_instr -> ID IGUAL expresion def_instr_prima .)
    PARIZQ          reduce using rule 16 (asignacion_instr -> ID IGUAL expresion def_instr_prima .)
    ENTERO          reduce using rule 16 (asignacion_instr -> ID IGUAL expresion def_instr_prima .)
    DECIMAL         reduce using rule 16 (asignacion_instr -> ID IGUAL expresion def_instr_prima .)
    CADENA          reduce using rule 16 (asignacion_instr -> ID IGUAL expresion def_instr_prima .)
    CHAR            reduce using rule 16 (asignacion_instr -> ID IGUAL expresion def_instr_prima .)
    TRUE            reduce using rule 16 (asignacion_instr -> ID IGUAL expresion def_instr_prima .)
    FALSE           reduce using rule 16 (asignacion_instr -> ID IGUAL expresion def_instr_prima .)
    $end            reduce using rule 16 (asignacion_instr -> ID IGUAL expresion def_instr_prima .)
    LLAVDER         reduce using rule 16 (asignacion_instr -> ID IGUAL expresion def_instr_prima .)


state 85

    (21) while_instr -> WHILE PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 90


state 86

    (18) if_instr -> IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER
    (19) if_instr -> IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (20) if_instr -> IF PARIZQ expresion PARDER . LLAVIZQ instrucciones LLAVDER ELSE if_instr

    LLAVIZQ         shift and go to state 91


state 87

    (13) func_main -> MAIN PARIZQ PARDER LLAVIZQ instrucciones . LLAVDER
    (2) instrucciones -> instrucciones . instruccion
    (5) instruccion -> . func_main
    (6) instruccion -> . imprimir_instr
    (7) instruccion -> . definicion_instr
    (8) instruccion -> . asignacion_instr
    (9) instruccion -> . def_asig_instr
    (10) instruccion -> . while_instr
    (11) instruccion -> . if_instr
    (12) instruccion -> . expresion
    (13) func_main -> . MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (14) imprimir_instr -> . PRINT PARIZQ expresion PARDER def_instr_prima
    (15) definicion_instr -> . VAR ID def_instr_prima
    (16) asignacion_instr -> . ID IGUAL expresion def_instr_prima
    (17) def_asig_instr -> . VAR ID IGUAL expresion def_instr_prima
    (21) while_instr -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (18) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (19) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (20) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instr
    (22) expresion -> . expresion INCREMENT def_instr_prima
    (23) expresion -> . expresion DECREMENT def_instr_prima
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion ELEVADO expresion
    (29) expresion -> . expresion MOD expresion
    (30) expresion -> . expresion AND expresion
    (31) expresion -> . expresion OR expresion
    (32) expresion -> . expresion MAYQUE expresion
    (33) expresion -> . expresion MENQUE expresion
    (34) expresion -> . expresion MAYIGUALQUE expresion
    (35) expresion -> . expresion MENIGUALQUE expresion
    (36) expresion -> . expresion IGUALQUE expresion
    (37) expresion -> . expresion NIGUALQUE expresion
    (38) expresion -> . MENOS expresion
    (39) expresion -> . NOT expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . ID
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . CHAR
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE

    LLAVDER         shift and go to state 92
    MAIN            shift and go to state 13
    PRINT           shift and go to state 15
    VAR             shift and go to state 16
    ID              shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    MENOS           shift and go to state 20
    NOT             shift and go to state 21
    PARIZQ          shift and go to state 14
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 24
    CHAR            shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    instruccion                    shift and go to state 28
    func_main                      shift and go to state 5
    imprimir_instr                 shift and go to state 6
    definicion_instr               shift and go to state 7
    asignacion_instr               shift and go to state 8
    def_asig_instr                 shift and go to state 9
    while_instr                    shift and go to state 10
    if_instr                       shift and go to state 11
    expresion                      shift and go to state 12

state 88

    (14) imprimir_instr -> PRINT PARIZQ expresion PARDER def_instr_prima .

    MAIN            reduce using rule 14 (imprimir_instr -> PRINT PARIZQ expresion PARDER def_instr_prima .)
    PRINT           reduce using rule 14 (imprimir_instr -> PRINT PARIZQ expresion PARDER def_instr_prima .)
    VAR             reduce using rule 14 (imprimir_instr -> PRINT PARIZQ expresion PARDER def_instr_prima .)
    ID              reduce using rule 14 (imprimir_instr -> PRINT PARIZQ expresion PARDER def_instr_prima .)
    WHILE           reduce using rule 14 (imprimir_instr -> PRINT PARIZQ expresion PARDER def_instr_prima .)
    IF              reduce using rule 14 (imprimir_instr -> PRINT PARIZQ expresion PARDER def_instr_prima .)
    MENOS           reduce using rule 14 (imprimir_instr -> PRINT PARIZQ expresion PARDER def_instr_prima .)
    NOT             reduce using rule 14 (imprimir_instr -> PRINT PARIZQ expresion PARDER def_instr_prima .)
    PARIZQ          reduce using rule 14 (imprimir_instr -> PRINT PARIZQ expresion PARDER def_instr_prima .)
    ENTERO          reduce using rule 14 (imprimir_instr -> PRINT PARIZQ expresion PARDER def_instr_prima .)
    DECIMAL         reduce using rule 14 (imprimir_instr -> PRINT PARIZQ expresion PARDER def_instr_prima .)
    CADENA          reduce using rule 14 (imprimir_instr -> PRINT PARIZQ expresion PARDER def_instr_prima .)
    CHAR            reduce using rule 14 (imprimir_instr -> PRINT PARIZQ expresion PARDER def_instr_prima .)
    TRUE            reduce using rule 14 (imprimir_instr -> PRINT PARIZQ expresion PARDER def_instr_prima .)
    FALSE           reduce using rule 14 (imprimir_instr -> PRINT PARIZQ expresion PARDER def_instr_prima .)
    $end            reduce using rule 14 (imprimir_instr -> PRINT PARIZQ expresion PARDER def_instr_prima .)
    LLAVDER         reduce using rule 14 (imprimir_instr -> PRINT PARIZQ expresion PARDER def_instr_prima .)


state 89

    (17) def_asig_instr -> VAR ID IGUAL expresion def_instr_prima .

    MAIN            reduce using rule 17 (def_asig_instr -> VAR ID IGUAL expresion def_instr_prima .)
    PRINT           reduce using rule 17 (def_asig_instr -> VAR ID IGUAL expresion def_instr_prima .)
    VAR             reduce using rule 17 (def_asig_instr -> VAR ID IGUAL expresion def_instr_prima .)
    ID              reduce using rule 17 (def_asig_instr -> VAR ID IGUAL expresion def_instr_prima .)
    WHILE           reduce using rule 17 (def_asig_instr -> VAR ID IGUAL expresion def_instr_prima .)
    IF              reduce using rule 17 (def_asig_instr -> VAR ID IGUAL expresion def_instr_prima .)
    MENOS           reduce using rule 17 (def_asig_instr -> VAR ID IGUAL expresion def_instr_prima .)
    NOT             reduce using rule 17 (def_asig_instr -> VAR ID IGUAL expresion def_instr_prima .)
    PARIZQ          reduce using rule 17 (def_asig_instr -> VAR ID IGUAL expresion def_instr_prima .)
    ENTERO          reduce using rule 17 (def_asig_instr -> VAR ID IGUAL expresion def_instr_prima .)
    DECIMAL         reduce using rule 17 (def_asig_instr -> VAR ID IGUAL expresion def_instr_prima .)
    CADENA          reduce using rule 17 (def_asig_instr -> VAR ID IGUAL expresion def_instr_prima .)
    CHAR            reduce using rule 17 (def_asig_instr -> VAR ID IGUAL expresion def_instr_prima .)
    TRUE            reduce using rule 17 (def_asig_instr -> VAR ID IGUAL expresion def_instr_prima .)
    FALSE           reduce using rule 17 (def_asig_instr -> VAR ID IGUAL expresion def_instr_prima .)
    $end            reduce using rule 17 (def_asig_instr -> VAR ID IGUAL expresion def_instr_prima .)
    LLAVDER         reduce using rule 17 (def_asig_instr -> VAR ID IGUAL expresion def_instr_prima .)


state 90

    (21) while_instr -> WHILE PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instrucciones -> . empty
    (5) instruccion -> . func_main
    (6) instruccion -> . imprimir_instr
    (7) instruccion -> . definicion_instr
    (8) instruccion -> . asignacion_instr
    (9) instruccion -> . def_asig_instr
    (10) instruccion -> . while_instr
    (11) instruccion -> . if_instr
    (12) instruccion -> . expresion
    (50) empty -> .
    (13) func_main -> . MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (14) imprimir_instr -> . PRINT PARIZQ expresion PARDER def_instr_prima
    (15) definicion_instr -> . VAR ID def_instr_prima
    (16) asignacion_instr -> . ID IGUAL expresion def_instr_prima
    (17) def_asig_instr -> . VAR ID IGUAL expresion def_instr_prima
    (21) while_instr -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (18) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (19) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (20) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instr
    (22) expresion -> . expresion INCREMENT def_instr_prima
    (23) expresion -> . expresion DECREMENT def_instr_prima
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion ELEVADO expresion
    (29) expresion -> . expresion MOD expresion
    (30) expresion -> . expresion AND expresion
    (31) expresion -> . expresion OR expresion
    (32) expresion -> . expresion MAYQUE expresion
    (33) expresion -> . expresion MENQUE expresion
    (34) expresion -> . expresion MAYIGUALQUE expresion
    (35) expresion -> . expresion MENIGUALQUE expresion
    (36) expresion -> . expresion IGUALQUE expresion
    (37) expresion -> . expresion NIGUALQUE expresion
    (38) expresion -> . MENOS expresion
    (39) expresion -> . NOT expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . ID
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . CHAR
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE

  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LLAVDER         reduce using rule 50 (empty -> .)
    MAIN            shift and go to state 13
    PRINT           shift and go to state 15
    VAR             shift and go to state 16
    ID              shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    MENOS           shift and go to state 20
    NOT             shift and go to state 21
    PARIZQ          shift and go to state 14
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 24
    CHAR            shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

  ! MAIN            [ reduce using rule 50 (empty -> .) ]
  ! PRINT           [ reduce using rule 50 (empty -> .) ]
  ! VAR             [ reduce using rule 50 (empty -> .) ]
  ! ID              [ reduce using rule 50 (empty -> .) ]
  ! WHILE           [ reduce using rule 50 (empty -> .) ]
  ! IF              [ reduce using rule 50 (empty -> .) ]
  ! MENOS           [ reduce using rule 50 (empty -> .) ]
  ! NOT             [ reduce using rule 50 (empty -> .) ]
  ! PARIZQ          [ reduce using rule 50 (empty -> .) ]
  ! ENTERO          [ reduce using rule 50 (empty -> .) ]
  ! DECIMAL         [ reduce using rule 50 (empty -> .) ]
  ! CADENA          [ reduce using rule 50 (empty -> .) ]
  ! CHAR            [ reduce using rule 50 (empty -> .) ]
  ! TRUE            [ reduce using rule 50 (empty -> .) ]
  ! FALSE           [ reduce using rule 50 (empty -> .) ]

    expresion                      shift and go to state 12
    instrucciones                  shift and go to state 93
    instruccion                    shift and go to state 3
    empty                          shift and go to state 4
    func_main                      shift and go to state 5
    imprimir_instr                 shift and go to state 6
    definicion_instr               shift and go to state 7
    asignacion_instr               shift and go to state 8
    def_asig_instr                 shift and go to state 9
    while_instr                    shift and go to state 10
    if_instr                       shift and go to state 11

state 91

    (18) if_instr -> IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER
    (19) if_instr -> IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (20) if_instr -> IF PARIZQ expresion PARDER LLAVIZQ . instrucciones LLAVDER ELSE if_instr
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instrucciones -> . empty
    (5) instruccion -> . func_main
    (6) instruccion -> . imprimir_instr
    (7) instruccion -> . definicion_instr
    (8) instruccion -> . asignacion_instr
    (9) instruccion -> . def_asig_instr
    (10) instruccion -> . while_instr
    (11) instruccion -> . if_instr
    (12) instruccion -> . expresion
    (50) empty -> .
    (13) func_main -> . MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (14) imprimir_instr -> . PRINT PARIZQ expresion PARDER def_instr_prima
    (15) definicion_instr -> . VAR ID def_instr_prima
    (16) asignacion_instr -> . ID IGUAL expresion def_instr_prima
    (17) def_asig_instr -> . VAR ID IGUAL expresion def_instr_prima
    (21) while_instr -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (18) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (19) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (20) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instr
    (22) expresion -> . expresion INCREMENT def_instr_prima
    (23) expresion -> . expresion DECREMENT def_instr_prima
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion ELEVADO expresion
    (29) expresion -> . expresion MOD expresion
    (30) expresion -> . expresion AND expresion
    (31) expresion -> . expresion OR expresion
    (32) expresion -> . expresion MAYQUE expresion
    (33) expresion -> . expresion MENQUE expresion
    (34) expresion -> . expresion MAYIGUALQUE expresion
    (35) expresion -> . expresion MENIGUALQUE expresion
    (36) expresion -> . expresion IGUALQUE expresion
    (37) expresion -> . expresion NIGUALQUE expresion
    (38) expresion -> . MENOS expresion
    (39) expresion -> . NOT expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . ID
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . CHAR
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE

  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LLAVDER         reduce using rule 50 (empty -> .)
    MAIN            shift and go to state 13
    PRINT           shift and go to state 15
    VAR             shift and go to state 16
    ID              shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    MENOS           shift and go to state 20
    NOT             shift and go to state 21
    PARIZQ          shift and go to state 14
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 24
    CHAR            shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

  ! MAIN            [ reduce using rule 50 (empty -> .) ]
  ! PRINT           [ reduce using rule 50 (empty -> .) ]
  ! VAR             [ reduce using rule 50 (empty -> .) ]
  ! ID              [ reduce using rule 50 (empty -> .) ]
  ! WHILE           [ reduce using rule 50 (empty -> .) ]
  ! IF              [ reduce using rule 50 (empty -> .) ]
  ! MENOS           [ reduce using rule 50 (empty -> .) ]
  ! NOT             [ reduce using rule 50 (empty -> .) ]
  ! PARIZQ          [ reduce using rule 50 (empty -> .) ]
  ! ENTERO          [ reduce using rule 50 (empty -> .) ]
  ! DECIMAL         [ reduce using rule 50 (empty -> .) ]
  ! CADENA          [ reduce using rule 50 (empty -> .) ]
  ! CHAR            [ reduce using rule 50 (empty -> .) ]
  ! TRUE            [ reduce using rule 50 (empty -> .) ]
  ! FALSE           [ reduce using rule 50 (empty -> .) ]

    expresion                      shift and go to state 12
    instrucciones                  shift and go to state 94
    if_instr                       shift and go to state 11
    instruccion                    shift and go to state 3
    empty                          shift and go to state 4
    func_main                      shift and go to state 5
    imprimir_instr                 shift and go to state 6
    definicion_instr               shift and go to state 7
    asignacion_instr               shift and go to state 8
    def_asig_instr                 shift and go to state 9
    while_instr                    shift and go to state 10

state 92

    (13) func_main -> MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .

    MAIN            reduce using rule 13 (func_main -> MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    PRINT           reduce using rule 13 (func_main -> MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    VAR             reduce using rule 13 (func_main -> MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 13 (func_main -> MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 13 (func_main -> MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 13 (func_main -> MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    MENOS           reduce using rule 13 (func_main -> MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    NOT             reduce using rule 13 (func_main -> MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    PARIZQ          reduce using rule 13 (func_main -> MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    ENTERO          reduce using rule 13 (func_main -> MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    DECIMAL         reduce using rule 13 (func_main -> MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    CADENA          reduce using rule 13 (func_main -> MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 13 (func_main -> MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    TRUE            reduce using rule 13 (func_main -> MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    FALSE           reduce using rule 13 (func_main -> MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 13 (func_main -> MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 13 (func_main -> MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)


state 93

    (21) while_instr -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER
    (2) instrucciones -> instrucciones . instruccion
    (5) instruccion -> . func_main
    (6) instruccion -> . imprimir_instr
    (7) instruccion -> . definicion_instr
    (8) instruccion -> . asignacion_instr
    (9) instruccion -> . def_asig_instr
    (10) instruccion -> . while_instr
    (11) instruccion -> . if_instr
    (12) instruccion -> . expresion
    (13) func_main -> . MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (14) imprimir_instr -> . PRINT PARIZQ expresion PARDER def_instr_prima
    (15) definicion_instr -> . VAR ID def_instr_prima
    (16) asignacion_instr -> . ID IGUAL expresion def_instr_prima
    (17) def_asig_instr -> . VAR ID IGUAL expresion def_instr_prima
    (21) while_instr -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (18) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (19) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (20) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instr
    (22) expresion -> . expresion INCREMENT def_instr_prima
    (23) expresion -> . expresion DECREMENT def_instr_prima
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion ELEVADO expresion
    (29) expresion -> . expresion MOD expresion
    (30) expresion -> . expresion AND expresion
    (31) expresion -> . expresion OR expresion
    (32) expresion -> . expresion MAYQUE expresion
    (33) expresion -> . expresion MENQUE expresion
    (34) expresion -> . expresion MAYIGUALQUE expresion
    (35) expresion -> . expresion MENIGUALQUE expresion
    (36) expresion -> . expresion IGUALQUE expresion
    (37) expresion -> . expresion NIGUALQUE expresion
    (38) expresion -> . MENOS expresion
    (39) expresion -> . NOT expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . ID
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . CHAR
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE

    LLAVDER         shift and go to state 95
    MAIN            shift and go to state 13
    PRINT           shift and go to state 15
    VAR             shift and go to state 16
    ID              shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    MENOS           shift and go to state 20
    NOT             shift and go to state 21
    PARIZQ          shift and go to state 14
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 24
    CHAR            shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expresion                      shift and go to state 12
    instruccion                    shift and go to state 28
    func_main                      shift and go to state 5
    imprimir_instr                 shift and go to state 6
    definicion_instr               shift and go to state 7
    asignacion_instr               shift and go to state 8
    def_asig_instr                 shift and go to state 9
    while_instr                    shift and go to state 10
    if_instr                       shift and go to state 11

state 94

    (18) if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER
    (19) if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (20) if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones . LLAVDER ELSE if_instr
    (2) instrucciones -> instrucciones . instruccion
    (5) instruccion -> . func_main
    (6) instruccion -> . imprimir_instr
    (7) instruccion -> . definicion_instr
    (8) instruccion -> . asignacion_instr
    (9) instruccion -> . def_asig_instr
    (10) instruccion -> . while_instr
    (11) instruccion -> . if_instr
    (12) instruccion -> . expresion
    (13) func_main -> . MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (14) imprimir_instr -> . PRINT PARIZQ expresion PARDER def_instr_prima
    (15) definicion_instr -> . VAR ID def_instr_prima
    (16) asignacion_instr -> . ID IGUAL expresion def_instr_prima
    (17) def_asig_instr -> . VAR ID IGUAL expresion def_instr_prima
    (21) while_instr -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (18) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (19) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (20) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instr
    (22) expresion -> . expresion INCREMENT def_instr_prima
    (23) expresion -> . expresion DECREMENT def_instr_prima
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion ELEVADO expresion
    (29) expresion -> . expresion MOD expresion
    (30) expresion -> . expresion AND expresion
    (31) expresion -> . expresion OR expresion
    (32) expresion -> . expresion MAYQUE expresion
    (33) expresion -> . expresion MENQUE expresion
    (34) expresion -> . expresion MAYIGUALQUE expresion
    (35) expresion -> . expresion MENIGUALQUE expresion
    (36) expresion -> . expresion IGUALQUE expresion
    (37) expresion -> . expresion NIGUALQUE expresion
    (38) expresion -> . MENOS expresion
    (39) expresion -> . NOT expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . ID
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . CHAR
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE

    LLAVDER         shift and go to state 96
    MAIN            shift and go to state 13
    PRINT           shift and go to state 15
    VAR             shift and go to state 16
    ID              shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    MENOS           shift and go to state 20
    NOT             shift and go to state 21
    PARIZQ          shift and go to state 14
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 24
    CHAR            shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expresion                      shift and go to state 12
    if_instr                       shift and go to state 11
    instruccion                    shift and go to state 28
    func_main                      shift and go to state 5
    imprimir_instr                 shift and go to state 6
    definicion_instr               shift and go to state 7
    asignacion_instr               shift and go to state 8
    def_asig_instr                 shift and go to state 9
    while_instr                    shift and go to state 10

state 95

    (21) while_instr -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .

    MAIN            reduce using rule 21 (while_instr -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    PRINT           reduce using rule 21 (while_instr -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    VAR             reduce using rule 21 (while_instr -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 21 (while_instr -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 21 (while_instr -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 21 (while_instr -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    MENOS           reduce using rule 21 (while_instr -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    NOT             reduce using rule 21 (while_instr -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    PARIZQ          reduce using rule 21 (while_instr -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    ENTERO          reduce using rule 21 (while_instr -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DECIMAL         reduce using rule 21 (while_instr -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CADENA          reduce using rule 21 (while_instr -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 21 (while_instr -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    TRUE            reduce using rule 21 (while_instr -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    FALSE           reduce using rule 21 (while_instr -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 21 (while_instr -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 21 (while_instr -> WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)


state 96

    (18) if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .
    (19) if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER . ELSE LLAVIZQ instrucciones LLAVDER
    (20) if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER . ELSE if_instr

    MAIN            reduce using rule 18 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    PRINT           reduce using rule 18 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    VAR             reduce using rule 18 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 18 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 18 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 18 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    MENOS           reduce using rule 18 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    NOT             reduce using rule 18 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    PARIZQ          reduce using rule 18 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    ENTERO          reduce using rule 18 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    DECIMAL         reduce using rule 18 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CADENA          reduce using rule 18 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 18 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    TRUE            reduce using rule 18 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    FALSE           reduce using rule 18 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 18 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 18 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER .)
    ELSE            shift and go to state 97


state 97

    (19) if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE . LLAVIZQ instrucciones LLAVDER
    (20) if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE . if_instr
    (18) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (19) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (20) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instr

    LLAVIZQ         shift and go to state 98
    IF              shift and go to state 19

    if_instr                       shift and go to state 99

state 98

    (19) if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ . instrucciones LLAVDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instrucciones -> . empty
    (5) instruccion -> . func_main
    (6) instruccion -> . imprimir_instr
    (7) instruccion -> . definicion_instr
    (8) instruccion -> . asignacion_instr
    (9) instruccion -> . def_asig_instr
    (10) instruccion -> . while_instr
    (11) instruccion -> . if_instr
    (12) instruccion -> . expresion
    (50) empty -> .
    (13) func_main -> . MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (14) imprimir_instr -> . PRINT PARIZQ expresion PARDER def_instr_prima
    (15) definicion_instr -> . VAR ID def_instr_prima
    (16) asignacion_instr -> . ID IGUAL expresion def_instr_prima
    (17) def_asig_instr -> . VAR ID IGUAL expresion def_instr_prima
    (21) while_instr -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (18) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (19) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (20) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instr
    (22) expresion -> . expresion INCREMENT def_instr_prima
    (23) expresion -> . expresion DECREMENT def_instr_prima
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion ELEVADO expresion
    (29) expresion -> . expresion MOD expresion
    (30) expresion -> . expresion AND expresion
    (31) expresion -> . expresion OR expresion
    (32) expresion -> . expresion MAYQUE expresion
    (33) expresion -> . expresion MENQUE expresion
    (34) expresion -> . expresion MAYIGUALQUE expresion
    (35) expresion -> . expresion MENIGUALQUE expresion
    (36) expresion -> . expresion IGUALQUE expresion
    (37) expresion -> . expresion NIGUALQUE expresion
    (38) expresion -> . MENOS expresion
    (39) expresion -> . NOT expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . ID
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . CHAR
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE

  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LLAVDER         reduce using rule 50 (empty -> .)
    MAIN            shift and go to state 13
    PRINT           shift and go to state 15
    VAR             shift and go to state 16
    ID              shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    MENOS           shift and go to state 20
    NOT             shift and go to state 21
    PARIZQ          shift and go to state 14
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 24
    CHAR            shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

  ! MAIN            [ reduce using rule 50 (empty -> .) ]
  ! PRINT           [ reduce using rule 50 (empty -> .) ]
  ! VAR             [ reduce using rule 50 (empty -> .) ]
  ! ID              [ reduce using rule 50 (empty -> .) ]
  ! WHILE           [ reduce using rule 50 (empty -> .) ]
  ! IF              [ reduce using rule 50 (empty -> .) ]
  ! MENOS           [ reduce using rule 50 (empty -> .) ]
  ! NOT             [ reduce using rule 50 (empty -> .) ]
  ! PARIZQ          [ reduce using rule 50 (empty -> .) ]
  ! ENTERO          [ reduce using rule 50 (empty -> .) ]
  ! DECIMAL         [ reduce using rule 50 (empty -> .) ]
  ! CADENA          [ reduce using rule 50 (empty -> .) ]
  ! CHAR            [ reduce using rule 50 (empty -> .) ]
  ! TRUE            [ reduce using rule 50 (empty -> .) ]
  ! FALSE           [ reduce using rule 50 (empty -> .) ]

    expresion                      shift and go to state 12
    instrucciones                  shift and go to state 100
    instruccion                    shift and go to state 3
    empty                          shift and go to state 4
    func_main                      shift and go to state 5
    imprimir_instr                 shift and go to state 6
    definicion_instr               shift and go to state 7
    asignacion_instr               shift and go to state 8
    def_asig_instr                 shift and go to state 9
    while_instr                    shift and go to state 10
    if_instr                       shift and go to state 11

state 99

    (20) if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instr .

    MAIN            reduce using rule 20 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instr .)
    PRINT           reduce using rule 20 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instr .)
    VAR             reduce using rule 20 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instr .)
    ID              reduce using rule 20 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instr .)
    WHILE           reduce using rule 20 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instr .)
    IF              reduce using rule 20 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instr .)
    MENOS           reduce using rule 20 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instr .)
    NOT             reduce using rule 20 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instr .)
    PARIZQ          reduce using rule 20 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instr .)
    ENTERO          reduce using rule 20 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instr .)
    DECIMAL         reduce using rule 20 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instr .)
    CADENA          reduce using rule 20 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instr .)
    CHAR            reduce using rule 20 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instr .)
    TRUE            reduce using rule 20 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instr .)
    FALSE           reduce using rule 20 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instr .)
    $end            reduce using rule 20 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instr .)
    LLAVDER         reduce using rule 20 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instr .)


state 100

    (19) if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones . LLAVDER
    (2) instrucciones -> instrucciones . instruccion
    (5) instruccion -> . func_main
    (6) instruccion -> . imprimir_instr
    (7) instruccion -> . definicion_instr
    (8) instruccion -> . asignacion_instr
    (9) instruccion -> . def_asig_instr
    (10) instruccion -> . while_instr
    (11) instruccion -> . if_instr
    (12) instruccion -> . expresion
    (13) func_main -> . MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (14) imprimir_instr -> . PRINT PARIZQ expresion PARDER def_instr_prima
    (15) definicion_instr -> . VAR ID def_instr_prima
    (16) asignacion_instr -> . ID IGUAL expresion def_instr_prima
    (17) def_asig_instr -> . VAR ID IGUAL expresion def_instr_prima
    (21) while_instr -> . WHILE PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (18) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER
    (19) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (20) if_instr -> . IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE if_instr
    (22) expresion -> . expresion INCREMENT def_instr_prima
    (23) expresion -> . expresion DECREMENT def_instr_prima
    (24) expresion -> . expresion MAS expresion
    (25) expresion -> . expresion MENOS expresion
    (26) expresion -> . expresion POR expresion
    (27) expresion -> . expresion DIVIDIDO expresion
    (28) expresion -> . expresion ELEVADO expresion
    (29) expresion -> . expresion MOD expresion
    (30) expresion -> . expresion AND expresion
    (31) expresion -> . expresion OR expresion
    (32) expresion -> . expresion MAYQUE expresion
    (33) expresion -> . expresion MENQUE expresion
    (34) expresion -> . expresion MAYIGUALQUE expresion
    (35) expresion -> . expresion MENIGUALQUE expresion
    (36) expresion -> . expresion IGUALQUE expresion
    (37) expresion -> . expresion NIGUALQUE expresion
    (38) expresion -> . MENOS expresion
    (39) expresion -> . NOT expresion
    (40) expresion -> . PARIZQ expresion PARDER
    (41) expresion -> . ID
    (42) expresion -> . ENTERO
    (43) expresion -> . DECIMAL
    (44) expresion -> . CADENA
    (45) expresion -> . CHAR
    (46) expresion -> . TRUE
    (47) expresion -> . FALSE

    LLAVDER         shift and go to state 101
    MAIN            shift and go to state 13
    PRINT           shift and go to state 15
    VAR             shift and go to state 16
    ID              shift and go to state 17
    WHILE           shift and go to state 18
    IF              shift and go to state 19
    MENOS           shift and go to state 20
    NOT             shift and go to state 21
    PARIZQ          shift and go to state 14
    ENTERO          shift and go to state 22
    DECIMAL         shift and go to state 23
    CADENA          shift and go to state 24
    CHAR            shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expresion                      shift and go to state 12
    instruccion                    shift and go to state 28
    func_main                      shift and go to state 5
    imprimir_instr                 shift and go to state 6
    definicion_instr               shift and go to state 7
    asignacion_instr               shift and go to state 8
    def_asig_instr                 shift and go to state 9
    while_instr                    shift and go to state 10
    if_instr                       shift and go to state 11

state 101

    (19) if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .

    MAIN            reduce using rule 19 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    PRINT           reduce using rule 19 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    VAR             reduce using rule 19 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 19 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    WHILE           reduce using rule 19 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 19 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    MENOS           reduce using rule 19 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    NOT             reduce using rule 19 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    PARIZQ          reduce using rule 19 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    ENTERO          reduce using rule 19 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    DECIMAL         reduce using rule 19 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    CADENA          reduce using rule 19 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    CHAR            reduce using rule 19 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    TRUE            reduce using rule 19 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    FALSE           reduce using rule 19 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 19 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 19 (if_instr -> IF PARIZQ expresion PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAIN in state 0 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 0 resolved as shift
WARNING: shift/reduce conflict for VAR in state 0 resolved as shift
WARNING: shift/reduce conflict for ID in state 0 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 0 resolved as shift
WARNING: shift/reduce conflict for IF in state 0 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 0 resolved as shift
WARNING: shift/reduce conflict for NOT in state 0 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 0 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 0 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 0 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 0 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 0 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 0 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 0 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 12 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 29 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 30 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 78 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 81 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 81 resolved as shift
WARNING: shift/reduce conflict for VAR in state 81 resolved as shift
WARNING: shift/reduce conflict for ID in state 81 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 81 resolved as shift
WARNING: shift/reduce conflict for IF in state 81 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 81 resolved as shift
WARNING: shift/reduce conflict for NOT in state 81 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 81 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 81 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 81 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 81 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 81 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 81 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 81 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 83 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 90 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 90 resolved as shift
WARNING: shift/reduce conflict for VAR in state 90 resolved as shift
WARNING: shift/reduce conflict for ID in state 90 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 90 resolved as shift
WARNING: shift/reduce conflict for IF in state 90 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 90 resolved as shift
WARNING: shift/reduce conflict for NOT in state 90 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 90 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 90 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 90 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 90 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 90 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 90 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 90 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 91 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 91 resolved as shift
WARNING: shift/reduce conflict for VAR in state 91 resolved as shift
WARNING: shift/reduce conflict for ID in state 91 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 91 resolved as shift
WARNING: shift/reduce conflict for IF in state 91 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 91 resolved as shift
WARNING: shift/reduce conflict for NOT in state 91 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 91 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 91 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 91 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 91 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 91 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 91 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 91 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 98 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 98 resolved as shift
WARNING: shift/reduce conflict for VAR in state 98 resolved as shift
WARNING: shift/reduce conflict for ID in state 98 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 98 resolved as shift
WARNING: shift/reduce conflict for IF in state 98 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 98 resolved as shift
WARNING: shift/reduce conflict for NOT in state 98 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 98 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 98 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 98 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 98 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 98 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 98 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 98 resolved as shift
