Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CONCAT

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instrucciones -> empty
Rule 5     instruccion -> func_main
Rule 6     instruccion -> imprimir_instr
Rule 7     instruccion -> definicion_instr
Rule 8     instruccion -> asignacion_instr
Rule 9     instruccion -> def_asig_instr
Rule 10    instruccion -> mientras_instr
Rule 11    instruccion -> if_instr
Rule 12    instruccion -> if_else_instr
Rule 13    func_main -> MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
Rule 14    imprimir_instr -> PRINT PARIZQ print_expresion_general PARDER def_instr_prima
Rule 15    print_expresion_general -> expresion_numerica
Rule 16    print_expresion_general -> expresion_cadena
Rule 17    print_expresion_general -> expresion_id
Rule 18    print_expresion_general -> expresion_boolean
Rule 19    print_expresion_general -> expresion_char
Rule 20    print_expresion_general -> expresion_logica
Rule 21    expresion_id -> ID
Rule 22    expresion_boolean -> TRUE
Rule 23    expresion_boolean -> FALSE
Rule 24    definicion_instr -> VAR ID def_instr_prima
Rule 25    def_instr_prima -> PTCOMA
Rule 26    def_instr_prima -> empty
Rule 27    empty -> <empty>
Rule 28    asignacion_instr -> ID IGUAL asign_expresion_general def_instr_prima
Rule 29    asign_expresion_general -> expresion_numerica
Rule 30    asign_expresion_general -> expresion_cadena
Rule 31    asign_expresion_general -> expresion_id
Rule 32    asign_expresion_general -> expresion_boolean
Rule 33    asign_expresion_general -> expresion_char
Rule 34    def_asig_instr -> VAR ID IGUAL asign_def_expresion_general def_instr_prima
Rule 35    asign_def_expresion_general -> expresion_numerica
Rule 36    asign_def_expresion_general -> expresion_cadena
Rule 37    asign_def_expresion_general -> expresion_id
Rule 38    asign_def_expresion_general -> expresion_boolean
Rule 39    asign_def_expresion_general -> expresion_char
Rule 40    mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
Rule 41    if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
Rule 42    if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
Rule 43    expresion_numerica -> expresion_numerica MAS expresion_numerica
Rule 44    expresion_numerica -> expresion_numerica MENOS expresion_numerica
Rule 45    expresion_numerica -> expresion_numerica POR expresion_numerica
Rule 46    expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica
Rule 47    expresion_numerica -> expresion_numerica ELEVADO expresion_numerica
Rule 48    expresion_numerica -> expresion_numerica MOD expresion_numerica
Rule 49    expresion_numerica -> expresion_numerica MAS expresion_char
Rule 50    expresion_numerica -> expresion_cadena MAS expresion_cadena
Rule 51    expresion_numerica -> expresion_cadena MAS expresion_numerica
Rule 52    expresion_numerica -> expresion_cadena MAS expresion_char
Rule 53    expresion_numerica -> expresion_numerica MAS expresion_cadena
Rule 54    expresion_numerica -> expresion_char MAS expresion_char
Rule 55    expresion_numerica -> expresion_char MAS expresion_cadena
Rule 56    expresion_numerica -> expresion_char MAS expresion_numerica
Rule 57    expresion_numerica -> MENOS expresion_numerica
Rule 58    expresion_numerica -> PARIZQ expresion_numerica PARDER
Rule 59    expresion_numerica -> ENTERO
Rule 60    expresion_numerica -> DECIMAL
Rule 61    expresion_numerica -> ID
Rule 62    expresion_char -> CHAR
Rule 63    expresion_cadena -> CADENA
Rule 64    expresion_cadena -> expresion_numerica
Rule 65    expresion_logica -> expresion_numerica MAYQUE expresion_numerica
Rule 66    expresion_logica -> expresion_numerica MENQUE expresion_numerica
Rule 67    expresion_logica -> asign_def_expresion_general IGUALQUE asign_def_expresion_general
Rule 68    expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica

Terminals, with rules where they appear

CADENA               : 63
CHAR                 : 62
CONCAT               : 
DECIMAL              : 60
DIVIDIDO             : 46
ELEVADO              : 47
ELSE                 : 42
ENTERO               : 59
FALSE                : 23
ID                   : 21 24 28 34 61
IF                   : 41 42
IGUAL                : 28 34
IGUALQUE             : 67
LLAVDER              : 13 40 41 42 42
LLAVIZQ              : 13 40 41 42 42
MAIN                 : 13
MAS                  : 43 49 50 51 52 53 54 55 56
MAYQUE               : 65
MENOS                : 44 57
MENQUE               : 66
MIENTRAS             : 40
MOD                  : 48
NIGUALQUE            : 68
PARDER               : 13 14 40 41 42 58
PARIZQ               : 13 14 40 41 42 58
POR                  : 45
PRINT                : 14
PTCOMA               : 25
TRUE                 : 22
VAR                  : 24 34
error                : 

Nonterminals, with rules where they appear

asign_def_expresion_general : 34 67 67
asign_expresion_general : 28
asignacion_instr     : 8
def_asig_instr       : 9
def_instr_prima      : 14 24 28 34
definicion_instr     : 7
empty                : 4 26
expresion_boolean    : 18 32 38
expresion_cadena     : 16 30 36 50 50 51 52 53 55
expresion_char       : 19 33 39 49 52 54 54 55 56
expresion_id         : 17 31 37
expresion_logica     : 20 40 41 42
expresion_numerica   : 15 29 35 43 43 44 44 45 45 46 46 47 47 48 48 49 51 53 56 57 58 64 65 65 66 66 68 68
func_main            : 5
if_else_instr        : 12
if_instr             : 11
imprimir_instr       : 6
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2 13 40 41 42 42
mientras_instr       : 10
print_expresion_general : 14

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instrucciones -> . empty
    (5) instruccion -> . func_main
    (6) instruccion -> . imprimir_instr
    (7) instruccion -> . definicion_instr
    (8) instruccion -> . asignacion_instr
    (9) instruccion -> . def_asig_instr
    (10) instruccion -> . mientras_instr
    (11) instruccion -> . if_instr
    (12) instruccion -> . if_else_instr
    (27) empty -> .
    (13) func_main -> . MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (14) imprimir_instr -> . PRINT PARIZQ print_expresion_general PARDER def_instr_prima
    (24) definicion_instr -> . VAR ID def_instr_prima
    (28) asignacion_instr -> . ID IGUAL asign_expresion_general def_instr_prima
    (34) def_asig_instr -> . VAR ID IGUAL asign_def_expresion_general def_instr_prima
    (40) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (41) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (42) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    $end            reduce using rule 27 (empty -> .)
    MAIN            shift and go to state 13
    PRINT           shift and go to state 14
    VAR             shift and go to state 15
    ID              shift and go to state 16
    MIENTRAS        shift and go to state 17
    IF              shift and go to state 18

  ! MAIN            [ reduce using rule 27 (empty -> .) ]
  ! PRINT           [ reduce using rule 27 (empty -> .) ]
  ! VAR             [ reduce using rule 27 (empty -> .) ]
  ! ID              [ reduce using rule 27 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 27 (empty -> .) ]
  ! IF              [ reduce using rule 27 (empty -> .) ]

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    empty                          shift and go to state 4
    func_main                      shift and go to state 5
    imprimir_instr                 shift and go to state 6
    definicion_instr               shift and go to state 7
    asignacion_instr               shift and go to state 8
    def_asig_instr                 shift and go to state 9
    mientras_instr                 shift and go to state 10
    if_instr                       shift and go to state 11
    if_else_instr                  shift and go to state 12

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (5) instruccion -> . func_main
    (6) instruccion -> . imprimir_instr
    (7) instruccion -> . definicion_instr
    (8) instruccion -> . asignacion_instr
    (9) instruccion -> . def_asig_instr
    (10) instruccion -> . mientras_instr
    (11) instruccion -> . if_instr
    (12) instruccion -> . if_else_instr
    (13) func_main -> . MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (14) imprimir_instr -> . PRINT PARIZQ print_expresion_general PARDER def_instr_prima
    (24) definicion_instr -> . VAR ID def_instr_prima
    (28) asignacion_instr -> . ID IGUAL asign_expresion_general def_instr_prima
    (34) def_asig_instr -> . VAR ID IGUAL asign_def_expresion_general def_instr_prima
    (40) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (41) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (42) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    $end            reduce using rule 1 (init -> instrucciones .)
    MAIN            shift and go to state 13
    PRINT           shift and go to state 14
    VAR             shift and go to state 15
    ID              shift and go to state 16
    MIENTRAS        shift and go to state 17
    IF              shift and go to state 18

    instruccion                    shift and go to state 19
    func_main                      shift and go to state 5
    imprimir_instr                 shift and go to state 6
    definicion_instr               shift and go to state 7
    asignacion_instr               shift and go to state 8
    def_asig_instr                 shift and go to state 9
    mientras_instr                 shift and go to state 10
    if_instr                       shift and go to state 11
    if_else_instr                  shift and go to state 12

state 3

    (3) instrucciones -> instruccion .

    MAIN            reduce using rule 3 (instrucciones -> instruccion .)
    PRINT           reduce using rule 3 (instrucciones -> instruccion .)
    VAR             reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    MIENTRAS        reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLAVDER         reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instrucciones -> empty .

    MAIN            reduce using rule 4 (instrucciones -> empty .)
    PRINT           reduce using rule 4 (instrucciones -> empty .)
    VAR             reduce using rule 4 (instrucciones -> empty .)
    ID              reduce using rule 4 (instrucciones -> empty .)
    MIENTRAS        reduce using rule 4 (instrucciones -> empty .)
    IF              reduce using rule 4 (instrucciones -> empty .)
    $end            reduce using rule 4 (instrucciones -> empty .)
    LLAVDER         reduce using rule 4 (instrucciones -> empty .)


state 5

    (5) instruccion -> func_main .

    MAIN            reduce using rule 5 (instruccion -> func_main .)
    PRINT           reduce using rule 5 (instruccion -> func_main .)
    VAR             reduce using rule 5 (instruccion -> func_main .)
    ID              reduce using rule 5 (instruccion -> func_main .)
    MIENTRAS        reduce using rule 5 (instruccion -> func_main .)
    IF              reduce using rule 5 (instruccion -> func_main .)
    $end            reduce using rule 5 (instruccion -> func_main .)
    LLAVDER         reduce using rule 5 (instruccion -> func_main .)


state 6

    (6) instruccion -> imprimir_instr .

    MAIN            reduce using rule 6 (instruccion -> imprimir_instr .)
    PRINT           reduce using rule 6 (instruccion -> imprimir_instr .)
    VAR             reduce using rule 6 (instruccion -> imprimir_instr .)
    ID              reduce using rule 6 (instruccion -> imprimir_instr .)
    MIENTRAS        reduce using rule 6 (instruccion -> imprimir_instr .)
    IF              reduce using rule 6 (instruccion -> imprimir_instr .)
    $end            reduce using rule 6 (instruccion -> imprimir_instr .)
    LLAVDER         reduce using rule 6 (instruccion -> imprimir_instr .)


state 7

    (7) instruccion -> definicion_instr .

    MAIN            reduce using rule 7 (instruccion -> definicion_instr .)
    PRINT           reduce using rule 7 (instruccion -> definicion_instr .)
    VAR             reduce using rule 7 (instruccion -> definicion_instr .)
    ID              reduce using rule 7 (instruccion -> definicion_instr .)
    MIENTRAS        reduce using rule 7 (instruccion -> definicion_instr .)
    IF              reduce using rule 7 (instruccion -> definicion_instr .)
    $end            reduce using rule 7 (instruccion -> definicion_instr .)
    LLAVDER         reduce using rule 7 (instruccion -> definicion_instr .)


state 8

    (8) instruccion -> asignacion_instr .

    MAIN            reduce using rule 8 (instruccion -> asignacion_instr .)
    PRINT           reduce using rule 8 (instruccion -> asignacion_instr .)
    VAR             reduce using rule 8 (instruccion -> asignacion_instr .)
    ID              reduce using rule 8 (instruccion -> asignacion_instr .)
    MIENTRAS        reduce using rule 8 (instruccion -> asignacion_instr .)
    IF              reduce using rule 8 (instruccion -> asignacion_instr .)
    $end            reduce using rule 8 (instruccion -> asignacion_instr .)
    LLAVDER         reduce using rule 8 (instruccion -> asignacion_instr .)


state 9

    (9) instruccion -> def_asig_instr .

    MAIN            reduce using rule 9 (instruccion -> def_asig_instr .)
    PRINT           reduce using rule 9 (instruccion -> def_asig_instr .)
    VAR             reduce using rule 9 (instruccion -> def_asig_instr .)
    ID              reduce using rule 9 (instruccion -> def_asig_instr .)
    MIENTRAS        reduce using rule 9 (instruccion -> def_asig_instr .)
    IF              reduce using rule 9 (instruccion -> def_asig_instr .)
    $end            reduce using rule 9 (instruccion -> def_asig_instr .)
    LLAVDER         reduce using rule 9 (instruccion -> def_asig_instr .)


state 10

    (10) instruccion -> mientras_instr .

    MAIN            reduce using rule 10 (instruccion -> mientras_instr .)
    PRINT           reduce using rule 10 (instruccion -> mientras_instr .)
    VAR             reduce using rule 10 (instruccion -> mientras_instr .)
    ID              reduce using rule 10 (instruccion -> mientras_instr .)
    MIENTRAS        reduce using rule 10 (instruccion -> mientras_instr .)
    IF              reduce using rule 10 (instruccion -> mientras_instr .)
    $end            reduce using rule 10 (instruccion -> mientras_instr .)
    LLAVDER         reduce using rule 10 (instruccion -> mientras_instr .)


state 11

    (11) instruccion -> if_instr .

    MAIN            reduce using rule 11 (instruccion -> if_instr .)
    PRINT           reduce using rule 11 (instruccion -> if_instr .)
    VAR             reduce using rule 11 (instruccion -> if_instr .)
    ID              reduce using rule 11 (instruccion -> if_instr .)
    MIENTRAS        reduce using rule 11 (instruccion -> if_instr .)
    IF              reduce using rule 11 (instruccion -> if_instr .)
    $end            reduce using rule 11 (instruccion -> if_instr .)
    LLAVDER         reduce using rule 11 (instruccion -> if_instr .)


state 12

    (12) instruccion -> if_else_instr .

    MAIN            reduce using rule 12 (instruccion -> if_else_instr .)
    PRINT           reduce using rule 12 (instruccion -> if_else_instr .)
    VAR             reduce using rule 12 (instruccion -> if_else_instr .)
    ID              reduce using rule 12 (instruccion -> if_else_instr .)
    MIENTRAS        reduce using rule 12 (instruccion -> if_else_instr .)
    IF              reduce using rule 12 (instruccion -> if_else_instr .)
    $end            reduce using rule 12 (instruccion -> if_else_instr .)
    LLAVDER         reduce using rule 12 (instruccion -> if_else_instr .)


state 13

    (13) func_main -> MAIN . PARIZQ PARDER LLAVIZQ instrucciones LLAVDER

    PARIZQ          shift and go to state 20


state 14

    (14) imprimir_instr -> PRINT . PARIZQ print_expresion_general PARDER def_instr_prima

    PARIZQ          shift and go to state 21


state 15

    (24) definicion_instr -> VAR . ID def_instr_prima
    (34) def_asig_instr -> VAR . ID IGUAL asign_def_expresion_general def_instr_prima

    ID              shift and go to state 22


state 16

    (28) asignacion_instr -> ID . IGUAL asign_expresion_general def_instr_prima

    IGUAL           shift and go to state 23


state 17

    (40) mientras_instr -> MIENTRAS . PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER

    PARIZQ          shift and go to state 24


state 18

    (41) if_instr -> IF . PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (42) if_else_instr -> IF . PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    PARIZQ          shift and go to state 25


state 19

    (2) instrucciones -> instrucciones instruccion .

    MAIN            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PRINT           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    VAR             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    MIENTRAS        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLAVDER         reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 20

    (13) func_main -> MAIN PARIZQ . PARDER LLAVIZQ instrucciones LLAVDER

    PARDER          shift and go to state 26


state 21

    (14) imprimir_instr -> PRINT PARIZQ . print_expresion_general PARDER def_instr_prima
    (15) print_expresion_general -> . expresion_numerica
    (16) print_expresion_general -> . expresion_cadena
    (17) print_expresion_general -> . expresion_id
    (18) print_expresion_general -> . expresion_boolean
    (19) print_expresion_general -> . expresion_char
    (20) print_expresion_general -> . expresion_logica
    (43) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (44) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (45) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (46) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (47) expresion_numerica -> . expresion_numerica ELEVADO expresion_numerica
    (48) expresion_numerica -> . expresion_numerica MOD expresion_numerica
    (49) expresion_numerica -> . expresion_numerica MAS expresion_char
    (50) expresion_numerica -> . expresion_cadena MAS expresion_cadena
    (51) expresion_numerica -> . expresion_cadena MAS expresion_numerica
    (52) expresion_numerica -> . expresion_cadena MAS expresion_char
    (53) expresion_numerica -> . expresion_numerica MAS expresion_cadena
    (54) expresion_numerica -> . expresion_char MAS expresion_char
    (55) expresion_numerica -> . expresion_char MAS expresion_cadena
    (56) expresion_numerica -> . expresion_char MAS expresion_numerica
    (57) expresion_numerica -> . MENOS expresion_numerica
    (58) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (59) expresion_numerica -> . ENTERO
    (60) expresion_numerica -> . DECIMAL
    (61) expresion_numerica -> . ID
    (63) expresion_cadena -> . CADENA
    (64) expresion_cadena -> . expresion_numerica
    (21) expresion_id -> . ID
    (22) expresion_boolean -> . TRUE
    (23) expresion_boolean -> . FALSE
    (62) expresion_char -> . CHAR
    (65) expresion_logica -> . expresion_numerica MAYQUE expresion_numerica
    (66) expresion_logica -> . expresion_numerica MENQUE expresion_numerica
    (67) expresion_logica -> . asign_def_expresion_general IGUALQUE asign_def_expresion_general
    (68) expresion_logica -> . expresion_numerica NIGUALQUE expresion_numerica
    (35) asign_def_expresion_general -> . expresion_numerica
    (36) asign_def_expresion_general -> . expresion_cadena
    (37) asign_def_expresion_general -> . expresion_id
    (38) asign_def_expresion_general -> . expresion_boolean
    (39) asign_def_expresion_general -> . expresion_char

    MENOS           shift and go to state 35
    PARIZQ          shift and go to state 27
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    ID              shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CHAR            shift and go to state 42

    print_expresion_general        shift and go to state 28
    expresion_numerica             shift and go to state 29
    expresion_cadena               shift and go to state 30
    expresion_id                   shift and go to state 31
    expresion_boolean              shift and go to state 32
    expresion_char                 shift and go to state 33
    expresion_logica               shift and go to state 34
    asign_def_expresion_general    shift and go to state 43

state 22

    (24) definicion_instr -> VAR ID . def_instr_prima
    (34) def_asig_instr -> VAR ID . IGUAL asign_def_expresion_general def_instr_prima
    (25) def_instr_prima -> . PTCOMA
    (26) def_instr_prima -> . empty
    (27) empty -> .

    IGUAL           shift and go to state 45
    PTCOMA          shift and go to state 46
    MAIN            reduce using rule 27 (empty -> .)
    PRINT           reduce using rule 27 (empty -> .)
    VAR             reduce using rule 27 (empty -> .)
    ID              reduce using rule 27 (empty -> .)
    MIENTRAS        reduce using rule 27 (empty -> .)
    IF              reduce using rule 27 (empty -> .)
    $end            reduce using rule 27 (empty -> .)
    LLAVDER         reduce using rule 27 (empty -> .)

    def_instr_prima                shift and go to state 44
    empty                          shift and go to state 47

state 23

    (28) asignacion_instr -> ID IGUAL . asign_expresion_general def_instr_prima
    (29) asign_expresion_general -> . expresion_numerica
    (30) asign_expresion_general -> . expresion_cadena
    (31) asign_expresion_general -> . expresion_id
    (32) asign_expresion_general -> . expresion_boolean
    (33) asign_expresion_general -> . expresion_char
    (43) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (44) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (45) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (46) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (47) expresion_numerica -> . expresion_numerica ELEVADO expresion_numerica
    (48) expresion_numerica -> . expresion_numerica MOD expresion_numerica
    (49) expresion_numerica -> . expresion_numerica MAS expresion_char
    (50) expresion_numerica -> . expresion_cadena MAS expresion_cadena
    (51) expresion_numerica -> . expresion_cadena MAS expresion_numerica
    (52) expresion_numerica -> . expresion_cadena MAS expresion_char
    (53) expresion_numerica -> . expresion_numerica MAS expresion_cadena
    (54) expresion_numerica -> . expresion_char MAS expresion_char
    (55) expresion_numerica -> . expresion_char MAS expresion_cadena
    (56) expresion_numerica -> . expresion_char MAS expresion_numerica
    (57) expresion_numerica -> . MENOS expresion_numerica
    (58) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (59) expresion_numerica -> . ENTERO
    (60) expresion_numerica -> . DECIMAL
    (61) expresion_numerica -> . ID
    (63) expresion_cadena -> . CADENA
    (64) expresion_cadena -> . expresion_numerica
    (21) expresion_id -> . ID
    (22) expresion_boolean -> . TRUE
    (23) expresion_boolean -> . FALSE
    (62) expresion_char -> . CHAR

    MENOS           shift and go to state 35
    PARIZQ          shift and go to state 27
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    ID              shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CHAR            shift and go to state 42

    asign_expresion_general        shift and go to state 48
    expresion_numerica             shift and go to state 49
    expresion_cadena               shift and go to state 50
    expresion_id                   shift and go to state 51
    expresion_boolean              shift and go to state 52
    expresion_char                 shift and go to state 53

state 24

    (40) mientras_instr -> MIENTRAS PARIZQ . expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (65) expresion_logica -> . expresion_numerica MAYQUE expresion_numerica
    (66) expresion_logica -> . expresion_numerica MENQUE expresion_numerica
    (67) expresion_logica -> . asign_def_expresion_general IGUALQUE asign_def_expresion_general
    (68) expresion_logica -> . expresion_numerica NIGUALQUE expresion_numerica
    (43) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (44) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (45) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (46) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (47) expresion_numerica -> . expresion_numerica ELEVADO expresion_numerica
    (48) expresion_numerica -> . expresion_numerica MOD expresion_numerica
    (49) expresion_numerica -> . expresion_numerica MAS expresion_char
    (50) expresion_numerica -> . expresion_cadena MAS expresion_cadena
    (51) expresion_numerica -> . expresion_cadena MAS expresion_numerica
    (52) expresion_numerica -> . expresion_cadena MAS expresion_char
    (53) expresion_numerica -> . expresion_numerica MAS expresion_cadena
    (54) expresion_numerica -> . expresion_char MAS expresion_char
    (55) expresion_numerica -> . expresion_char MAS expresion_cadena
    (56) expresion_numerica -> . expresion_char MAS expresion_numerica
    (57) expresion_numerica -> . MENOS expresion_numerica
    (58) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (59) expresion_numerica -> . ENTERO
    (60) expresion_numerica -> . DECIMAL
    (61) expresion_numerica -> . ID
    (35) asign_def_expresion_general -> . expresion_numerica
    (36) asign_def_expresion_general -> . expresion_cadena
    (37) asign_def_expresion_general -> . expresion_id
    (38) asign_def_expresion_general -> . expresion_boolean
    (39) asign_def_expresion_general -> . expresion_char
    (63) expresion_cadena -> . CADENA
    (64) expresion_cadena -> . expresion_numerica
    (62) expresion_char -> . CHAR
    (21) expresion_id -> . ID
    (22) expresion_boolean -> . TRUE
    (23) expresion_boolean -> . FALSE

    MENOS           shift and go to state 35
    PARIZQ          shift and go to state 27
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    ID              shift and go to state 38
    CADENA          shift and go to state 39
    CHAR            shift and go to state 42
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    expresion_logica               shift and go to state 54
    expresion_numerica             shift and go to state 55
    asign_def_expresion_general    shift and go to state 43
    expresion_char                 shift and go to state 56
    expresion_cadena               shift and go to state 57
    expresion_id                   shift and go to state 58
    expresion_boolean              shift and go to state 59

state 25

    (41) if_instr -> IF PARIZQ . expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (42) if_else_instr -> IF PARIZQ . expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (65) expresion_logica -> . expresion_numerica MAYQUE expresion_numerica
    (66) expresion_logica -> . expresion_numerica MENQUE expresion_numerica
    (67) expresion_logica -> . asign_def_expresion_general IGUALQUE asign_def_expresion_general
    (68) expresion_logica -> . expresion_numerica NIGUALQUE expresion_numerica
    (43) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (44) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (45) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (46) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (47) expresion_numerica -> . expresion_numerica ELEVADO expresion_numerica
    (48) expresion_numerica -> . expresion_numerica MOD expresion_numerica
    (49) expresion_numerica -> . expresion_numerica MAS expresion_char
    (50) expresion_numerica -> . expresion_cadena MAS expresion_cadena
    (51) expresion_numerica -> . expresion_cadena MAS expresion_numerica
    (52) expresion_numerica -> . expresion_cadena MAS expresion_char
    (53) expresion_numerica -> . expresion_numerica MAS expresion_cadena
    (54) expresion_numerica -> . expresion_char MAS expresion_char
    (55) expresion_numerica -> . expresion_char MAS expresion_cadena
    (56) expresion_numerica -> . expresion_char MAS expresion_numerica
    (57) expresion_numerica -> . MENOS expresion_numerica
    (58) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (59) expresion_numerica -> . ENTERO
    (60) expresion_numerica -> . DECIMAL
    (61) expresion_numerica -> . ID
    (35) asign_def_expresion_general -> . expresion_numerica
    (36) asign_def_expresion_general -> . expresion_cadena
    (37) asign_def_expresion_general -> . expresion_id
    (38) asign_def_expresion_general -> . expresion_boolean
    (39) asign_def_expresion_general -> . expresion_char
    (63) expresion_cadena -> . CADENA
    (64) expresion_cadena -> . expresion_numerica
    (62) expresion_char -> . CHAR
    (21) expresion_id -> . ID
    (22) expresion_boolean -> . TRUE
    (23) expresion_boolean -> . FALSE

    MENOS           shift and go to state 35
    PARIZQ          shift and go to state 27
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    ID              shift and go to state 38
    CADENA          shift and go to state 39
    CHAR            shift and go to state 42
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41

    expresion_logica               shift and go to state 60
    expresion_numerica             shift and go to state 55
    asign_def_expresion_general    shift and go to state 43
    expresion_char                 shift and go to state 56
    expresion_cadena               shift and go to state 57
    expresion_id                   shift and go to state 58
    expresion_boolean              shift and go to state 59

state 26

    (13) func_main -> MAIN PARIZQ PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 61


state 27

    (58) expresion_numerica -> PARIZQ . expresion_numerica PARDER
    (43) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (44) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (45) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (46) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (47) expresion_numerica -> . expresion_numerica ELEVADO expresion_numerica
    (48) expresion_numerica -> . expresion_numerica MOD expresion_numerica
    (49) expresion_numerica -> . expresion_numerica MAS expresion_char
    (50) expresion_numerica -> . expresion_cadena MAS expresion_cadena
    (51) expresion_numerica -> . expresion_cadena MAS expresion_numerica
    (52) expresion_numerica -> . expresion_cadena MAS expresion_char
    (53) expresion_numerica -> . expresion_numerica MAS expresion_cadena
    (54) expresion_numerica -> . expresion_char MAS expresion_char
    (55) expresion_numerica -> . expresion_char MAS expresion_cadena
    (56) expresion_numerica -> . expresion_char MAS expresion_numerica
    (57) expresion_numerica -> . MENOS expresion_numerica
    (58) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (59) expresion_numerica -> . ENTERO
    (60) expresion_numerica -> . DECIMAL
    (61) expresion_numerica -> . ID
    (63) expresion_cadena -> . CADENA
    (64) expresion_cadena -> . expresion_numerica
    (62) expresion_char -> . CHAR

    MENOS           shift and go to state 35
    PARIZQ          shift and go to state 27
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    ID              shift and go to state 65
    CADENA          shift and go to state 39
    CHAR            shift and go to state 42

    expresion_numerica             shift and go to state 62
    expresion_char                 shift and go to state 63
    expresion_cadena               shift and go to state 64

state 28

    (14) imprimir_instr -> PRINT PARIZQ print_expresion_general . PARDER def_instr_prima

    PARDER          shift and go to state 66


state 29

    (15) print_expresion_general -> expresion_numerica .
    (43) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (44) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (45) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (46) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (47) expresion_numerica -> expresion_numerica . ELEVADO expresion_numerica
    (48) expresion_numerica -> expresion_numerica . MOD expresion_numerica
    (49) expresion_numerica -> expresion_numerica . MAS expresion_char
    (53) expresion_numerica -> expresion_numerica . MAS expresion_cadena
    (64) expresion_cadena -> expresion_numerica .
    (65) expresion_logica -> expresion_numerica . MAYQUE expresion_numerica
    (66) expresion_logica -> expresion_numerica . MENQUE expresion_numerica
    (68) expresion_logica -> expresion_numerica . NIGUALQUE expresion_numerica
    (35) asign_def_expresion_general -> expresion_numerica .

  ! shift/reduce conflict for MAS resolved as shift
  ! reduce/reduce conflict for PARDER resolved using rule 15 (print_expresion_general -> expresion_numerica .)
  ! reduce/reduce conflict for IGUALQUE resolved using rule 35 (asign_def_expresion_general -> expresion_numerica .)
    PARDER          reduce using rule 15 (print_expresion_general -> expresion_numerica .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    ELEVADO         shift and go to state 71
    MOD             shift and go to state 72
    MAYQUE          shift and go to state 73
    MENQUE          shift and go to state 74
    NIGUALQUE       shift and go to state 75
    IGUALQUE        reduce using rule 35 (asign_def_expresion_general -> expresion_numerica .)

  ! MAS             [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! PARDER          [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! IGUALQUE        [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]


state 30

    (16) print_expresion_general -> expresion_cadena .
    (50) expresion_numerica -> expresion_cadena . MAS expresion_cadena
    (51) expresion_numerica -> expresion_cadena . MAS expresion_numerica
    (52) expresion_numerica -> expresion_cadena . MAS expresion_char
    (36) asign_def_expresion_general -> expresion_cadena .

    PARDER          reduce using rule 16 (print_expresion_general -> expresion_cadena .)
    MAS             shift and go to state 76
    IGUALQUE        reduce using rule 36 (asign_def_expresion_general -> expresion_cadena .)


state 31

    (17) print_expresion_general -> expresion_id .
    (37) asign_def_expresion_general -> expresion_id .

    PARDER          reduce using rule 17 (print_expresion_general -> expresion_id .)
    IGUALQUE        reduce using rule 37 (asign_def_expresion_general -> expresion_id .)


state 32

    (18) print_expresion_general -> expresion_boolean .
    (38) asign_def_expresion_general -> expresion_boolean .

    PARDER          reduce using rule 18 (print_expresion_general -> expresion_boolean .)
    IGUALQUE        reduce using rule 38 (asign_def_expresion_general -> expresion_boolean .)


state 33

    (19) print_expresion_general -> expresion_char .
    (54) expresion_numerica -> expresion_char . MAS expresion_char
    (55) expresion_numerica -> expresion_char . MAS expresion_cadena
    (56) expresion_numerica -> expresion_char . MAS expresion_numerica
    (39) asign_def_expresion_general -> expresion_char .

    PARDER          reduce using rule 19 (print_expresion_general -> expresion_char .)
    MAS             shift and go to state 77
    IGUALQUE        reduce using rule 39 (asign_def_expresion_general -> expresion_char .)


state 34

    (20) print_expresion_general -> expresion_logica .

    PARDER          reduce using rule 20 (print_expresion_general -> expresion_logica .)


state 35

    (57) expresion_numerica -> MENOS . expresion_numerica
    (43) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (44) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (45) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (46) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (47) expresion_numerica -> . expresion_numerica ELEVADO expresion_numerica
    (48) expresion_numerica -> . expresion_numerica MOD expresion_numerica
    (49) expresion_numerica -> . expresion_numerica MAS expresion_char
    (50) expresion_numerica -> . expresion_cadena MAS expresion_cadena
    (51) expresion_numerica -> . expresion_cadena MAS expresion_numerica
    (52) expresion_numerica -> . expresion_cadena MAS expresion_char
    (53) expresion_numerica -> . expresion_numerica MAS expresion_cadena
    (54) expresion_numerica -> . expresion_char MAS expresion_char
    (55) expresion_numerica -> . expresion_char MAS expresion_cadena
    (56) expresion_numerica -> . expresion_char MAS expresion_numerica
    (57) expresion_numerica -> . MENOS expresion_numerica
    (58) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (59) expresion_numerica -> . ENTERO
    (60) expresion_numerica -> . DECIMAL
    (61) expresion_numerica -> . ID
    (63) expresion_cadena -> . CADENA
    (64) expresion_cadena -> . expresion_numerica
    (62) expresion_char -> . CHAR

    MENOS           shift and go to state 35
    PARIZQ          shift and go to state 27
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    ID              shift and go to state 65
    CADENA          shift and go to state 39
    CHAR            shift and go to state 42

    expresion_numerica             shift and go to state 78
    expresion_char                 shift and go to state 63
    expresion_cadena               shift and go to state 64

state 36

    (59) expresion_numerica -> ENTERO .

    MAS             reduce using rule 59 (expresion_numerica -> ENTERO .)
    MENOS           reduce using rule 59 (expresion_numerica -> ENTERO .)
    POR             reduce using rule 59 (expresion_numerica -> ENTERO .)
    DIVIDIDO        reduce using rule 59 (expresion_numerica -> ENTERO .)
    ELEVADO         reduce using rule 59 (expresion_numerica -> ENTERO .)
    MOD             reduce using rule 59 (expresion_numerica -> ENTERO .)
    MAYQUE          reduce using rule 59 (expresion_numerica -> ENTERO .)
    MENQUE          reduce using rule 59 (expresion_numerica -> ENTERO .)
    NIGUALQUE       reduce using rule 59 (expresion_numerica -> ENTERO .)
    PARDER          reduce using rule 59 (expresion_numerica -> ENTERO .)
    IGUALQUE        reduce using rule 59 (expresion_numerica -> ENTERO .)
    PTCOMA          reduce using rule 59 (expresion_numerica -> ENTERO .)
    MAIN            reduce using rule 59 (expresion_numerica -> ENTERO .)
    PRINT           reduce using rule 59 (expresion_numerica -> ENTERO .)
    VAR             reduce using rule 59 (expresion_numerica -> ENTERO .)
    ID              reduce using rule 59 (expresion_numerica -> ENTERO .)
    MIENTRAS        reduce using rule 59 (expresion_numerica -> ENTERO .)
    IF              reduce using rule 59 (expresion_numerica -> ENTERO .)
    $end            reduce using rule 59 (expresion_numerica -> ENTERO .)
    LLAVDER         reduce using rule 59 (expresion_numerica -> ENTERO .)


state 37

    (60) expresion_numerica -> DECIMAL .

    MAS             reduce using rule 60 (expresion_numerica -> DECIMAL .)
    MENOS           reduce using rule 60 (expresion_numerica -> DECIMAL .)
    POR             reduce using rule 60 (expresion_numerica -> DECIMAL .)
    DIVIDIDO        reduce using rule 60 (expresion_numerica -> DECIMAL .)
    ELEVADO         reduce using rule 60 (expresion_numerica -> DECIMAL .)
    MOD             reduce using rule 60 (expresion_numerica -> DECIMAL .)
    MAYQUE          reduce using rule 60 (expresion_numerica -> DECIMAL .)
    MENQUE          reduce using rule 60 (expresion_numerica -> DECIMAL .)
    NIGUALQUE       reduce using rule 60 (expresion_numerica -> DECIMAL .)
    PARDER          reduce using rule 60 (expresion_numerica -> DECIMAL .)
    IGUALQUE        reduce using rule 60 (expresion_numerica -> DECIMAL .)
    PTCOMA          reduce using rule 60 (expresion_numerica -> DECIMAL .)
    MAIN            reduce using rule 60 (expresion_numerica -> DECIMAL .)
    PRINT           reduce using rule 60 (expresion_numerica -> DECIMAL .)
    VAR             reduce using rule 60 (expresion_numerica -> DECIMAL .)
    ID              reduce using rule 60 (expresion_numerica -> DECIMAL .)
    MIENTRAS        reduce using rule 60 (expresion_numerica -> DECIMAL .)
    IF              reduce using rule 60 (expresion_numerica -> DECIMAL .)
    $end            reduce using rule 60 (expresion_numerica -> DECIMAL .)
    LLAVDER         reduce using rule 60 (expresion_numerica -> DECIMAL .)


state 38

    (61) expresion_numerica -> ID .
    (21) expresion_id -> ID .

  ! reduce/reduce conflict for PARDER resolved using rule 21 (expresion_id -> ID .)
  ! reduce/reduce conflict for IGUALQUE resolved using rule 21 (expresion_id -> ID .)
  ! reduce/reduce conflict for PTCOMA resolved using rule 21 (expresion_id -> ID .)
  ! reduce/reduce conflict for MAIN resolved using rule 21 (expresion_id -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 21 (expresion_id -> ID .)
  ! reduce/reduce conflict for VAR resolved using rule 21 (expresion_id -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 21 (expresion_id -> ID .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 21 (expresion_id -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 21 (expresion_id -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 21 (expresion_id -> ID .)
  ! reduce/reduce conflict for LLAVDER resolved using rule 21 (expresion_id -> ID .)
    MAS             reduce using rule 61 (expresion_numerica -> ID .)
    MENOS           reduce using rule 61 (expresion_numerica -> ID .)
    POR             reduce using rule 61 (expresion_numerica -> ID .)
    DIVIDIDO        reduce using rule 61 (expresion_numerica -> ID .)
    ELEVADO         reduce using rule 61 (expresion_numerica -> ID .)
    MOD             reduce using rule 61 (expresion_numerica -> ID .)
    MAYQUE          reduce using rule 61 (expresion_numerica -> ID .)
    MENQUE          reduce using rule 61 (expresion_numerica -> ID .)
    NIGUALQUE       reduce using rule 61 (expresion_numerica -> ID .)
    PARDER          reduce using rule 21 (expresion_id -> ID .)
    IGUALQUE        reduce using rule 21 (expresion_id -> ID .)
    PTCOMA          reduce using rule 21 (expresion_id -> ID .)
    MAIN            reduce using rule 21 (expresion_id -> ID .)
    PRINT           reduce using rule 21 (expresion_id -> ID .)
    VAR             reduce using rule 21 (expresion_id -> ID .)
    ID              reduce using rule 21 (expresion_id -> ID .)
    MIENTRAS        reduce using rule 21 (expresion_id -> ID .)
    IF              reduce using rule 21 (expresion_id -> ID .)
    $end            reduce using rule 21 (expresion_id -> ID .)
    LLAVDER         reduce using rule 21 (expresion_id -> ID .)

  ! PARDER          [ reduce using rule 61 (expresion_numerica -> ID .) ]
  ! IGUALQUE        [ reduce using rule 61 (expresion_numerica -> ID .) ]
  ! PTCOMA          [ reduce using rule 61 (expresion_numerica -> ID .) ]
  ! MAIN            [ reduce using rule 61 (expresion_numerica -> ID .) ]
  ! PRINT           [ reduce using rule 61 (expresion_numerica -> ID .) ]
  ! VAR             [ reduce using rule 61 (expresion_numerica -> ID .) ]
  ! ID              [ reduce using rule 61 (expresion_numerica -> ID .) ]
  ! MIENTRAS        [ reduce using rule 61 (expresion_numerica -> ID .) ]
  ! IF              [ reduce using rule 61 (expresion_numerica -> ID .) ]
  ! $end            [ reduce using rule 61 (expresion_numerica -> ID .) ]
  ! LLAVDER         [ reduce using rule 61 (expresion_numerica -> ID .) ]


state 39

    (63) expresion_cadena -> CADENA .

    MAS             reduce using rule 63 (expresion_cadena -> CADENA .)
    PARDER          reduce using rule 63 (expresion_cadena -> CADENA .)
    IGUALQUE        reduce using rule 63 (expresion_cadena -> CADENA .)
    PTCOMA          reduce using rule 63 (expresion_cadena -> CADENA .)
    MAIN            reduce using rule 63 (expresion_cadena -> CADENA .)
    PRINT           reduce using rule 63 (expresion_cadena -> CADENA .)
    VAR             reduce using rule 63 (expresion_cadena -> CADENA .)
    ID              reduce using rule 63 (expresion_cadena -> CADENA .)
    MIENTRAS        reduce using rule 63 (expresion_cadena -> CADENA .)
    IF              reduce using rule 63 (expresion_cadena -> CADENA .)
    $end            reduce using rule 63 (expresion_cadena -> CADENA .)
    LLAVDER         reduce using rule 63 (expresion_cadena -> CADENA .)
    MENOS           reduce using rule 63 (expresion_cadena -> CADENA .)
    POR             reduce using rule 63 (expresion_cadena -> CADENA .)
    DIVIDIDO        reduce using rule 63 (expresion_cadena -> CADENA .)
    ELEVADO         reduce using rule 63 (expresion_cadena -> CADENA .)
    MOD             reduce using rule 63 (expresion_cadena -> CADENA .)
    MAYQUE          reduce using rule 63 (expresion_cadena -> CADENA .)
    MENQUE          reduce using rule 63 (expresion_cadena -> CADENA .)
    NIGUALQUE       reduce using rule 63 (expresion_cadena -> CADENA .)


state 40

    (22) expresion_boolean -> TRUE .

    PARDER          reduce using rule 22 (expresion_boolean -> TRUE .)
    IGUALQUE        reduce using rule 22 (expresion_boolean -> TRUE .)
    PTCOMA          reduce using rule 22 (expresion_boolean -> TRUE .)
    MAIN            reduce using rule 22 (expresion_boolean -> TRUE .)
    PRINT           reduce using rule 22 (expresion_boolean -> TRUE .)
    VAR             reduce using rule 22 (expresion_boolean -> TRUE .)
    ID              reduce using rule 22 (expresion_boolean -> TRUE .)
    MIENTRAS        reduce using rule 22 (expresion_boolean -> TRUE .)
    IF              reduce using rule 22 (expresion_boolean -> TRUE .)
    $end            reduce using rule 22 (expresion_boolean -> TRUE .)
    LLAVDER         reduce using rule 22 (expresion_boolean -> TRUE .)


state 41

    (23) expresion_boolean -> FALSE .

    PARDER          reduce using rule 23 (expresion_boolean -> FALSE .)
    IGUALQUE        reduce using rule 23 (expresion_boolean -> FALSE .)
    PTCOMA          reduce using rule 23 (expresion_boolean -> FALSE .)
    MAIN            reduce using rule 23 (expresion_boolean -> FALSE .)
    PRINT           reduce using rule 23 (expresion_boolean -> FALSE .)
    VAR             reduce using rule 23 (expresion_boolean -> FALSE .)
    ID              reduce using rule 23 (expresion_boolean -> FALSE .)
    MIENTRAS        reduce using rule 23 (expresion_boolean -> FALSE .)
    IF              reduce using rule 23 (expresion_boolean -> FALSE .)
    $end            reduce using rule 23 (expresion_boolean -> FALSE .)
    LLAVDER         reduce using rule 23 (expresion_boolean -> FALSE .)


state 42

    (62) expresion_char -> CHAR .

    MAS             reduce using rule 62 (expresion_char -> CHAR .)
    PARDER          reduce using rule 62 (expresion_char -> CHAR .)
    IGUALQUE        reduce using rule 62 (expresion_char -> CHAR .)
    PTCOMA          reduce using rule 62 (expresion_char -> CHAR .)
    MAIN            reduce using rule 62 (expresion_char -> CHAR .)
    PRINT           reduce using rule 62 (expresion_char -> CHAR .)
    VAR             reduce using rule 62 (expresion_char -> CHAR .)
    ID              reduce using rule 62 (expresion_char -> CHAR .)
    MIENTRAS        reduce using rule 62 (expresion_char -> CHAR .)
    IF              reduce using rule 62 (expresion_char -> CHAR .)
    $end            reduce using rule 62 (expresion_char -> CHAR .)
    LLAVDER         reduce using rule 62 (expresion_char -> CHAR .)
    MENOS           reduce using rule 62 (expresion_char -> CHAR .)
    POR             reduce using rule 62 (expresion_char -> CHAR .)
    DIVIDIDO        reduce using rule 62 (expresion_char -> CHAR .)
    ELEVADO         reduce using rule 62 (expresion_char -> CHAR .)
    MOD             reduce using rule 62 (expresion_char -> CHAR .)
    MAYQUE          reduce using rule 62 (expresion_char -> CHAR .)
    MENQUE          reduce using rule 62 (expresion_char -> CHAR .)
    NIGUALQUE       reduce using rule 62 (expresion_char -> CHAR .)


state 43

    (67) expresion_logica -> asign_def_expresion_general . IGUALQUE asign_def_expresion_general

    IGUALQUE        shift and go to state 79


state 44

    (24) definicion_instr -> VAR ID def_instr_prima .

    MAIN            reduce using rule 24 (definicion_instr -> VAR ID def_instr_prima .)
    PRINT           reduce using rule 24 (definicion_instr -> VAR ID def_instr_prima .)
    VAR             reduce using rule 24 (definicion_instr -> VAR ID def_instr_prima .)
    ID              reduce using rule 24 (definicion_instr -> VAR ID def_instr_prima .)
    MIENTRAS        reduce using rule 24 (definicion_instr -> VAR ID def_instr_prima .)
    IF              reduce using rule 24 (definicion_instr -> VAR ID def_instr_prima .)
    $end            reduce using rule 24 (definicion_instr -> VAR ID def_instr_prima .)
    LLAVDER         reduce using rule 24 (definicion_instr -> VAR ID def_instr_prima .)


state 45

    (34) def_asig_instr -> VAR ID IGUAL . asign_def_expresion_general def_instr_prima
    (35) asign_def_expresion_general -> . expresion_numerica
    (36) asign_def_expresion_general -> . expresion_cadena
    (37) asign_def_expresion_general -> . expresion_id
    (38) asign_def_expresion_general -> . expresion_boolean
    (39) asign_def_expresion_general -> . expresion_char
    (43) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (44) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (45) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (46) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (47) expresion_numerica -> . expresion_numerica ELEVADO expresion_numerica
    (48) expresion_numerica -> . expresion_numerica MOD expresion_numerica
    (49) expresion_numerica -> . expresion_numerica MAS expresion_char
    (50) expresion_numerica -> . expresion_cadena MAS expresion_cadena
    (51) expresion_numerica -> . expresion_cadena MAS expresion_numerica
    (52) expresion_numerica -> . expresion_cadena MAS expresion_char
    (53) expresion_numerica -> . expresion_numerica MAS expresion_cadena
    (54) expresion_numerica -> . expresion_char MAS expresion_char
    (55) expresion_numerica -> . expresion_char MAS expresion_cadena
    (56) expresion_numerica -> . expresion_char MAS expresion_numerica
    (57) expresion_numerica -> . MENOS expresion_numerica
    (58) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (59) expresion_numerica -> . ENTERO
    (60) expresion_numerica -> . DECIMAL
    (61) expresion_numerica -> . ID
    (63) expresion_cadena -> . CADENA
    (64) expresion_cadena -> . expresion_numerica
    (21) expresion_id -> . ID
    (22) expresion_boolean -> . TRUE
    (23) expresion_boolean -> . FALSE
    (62) expresion_char -> . CHAR

    MENOS           shift and go to state 35
    PARIZQ          shift and go to state 27
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    ID              shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CHAR            shift and go to state 42

    asign_def_expresion_general    shift and go to state 80
    expresion_numerica             shift and go to state 81
    expresion_cadena               shift and go to state 82
    expresion_id                   shift and go to state 58
    expresion_boolean              shift and go to state 59
    expresion_char                 shift and go to state 83

state 46

    (25) def_instr_prima -> PTCOMA .

    MAIN            reduce using rule 25 (def_instr_prima -> PTCOMA .)
    PRINT           reduce using rule 25 (def_instr_prima -> PTCOMA .)
    VAR             reduce using rule 25 (def_instr_prima -> PTCOMA .)
    ID              reduce using rule 25 (def_instr_prima -> PTCOMA .)
    MIENTRAS        reduce using rule 25 (def_instr_prima -> PTCOMA .)
    IF              reduce using rule 25 (def_instr_prima -> PTCOMA .)
    $end            reduce using rule 25 (def_instr_prima -> PTCOMA .)
    LLAVDER         reduce using rule 25 (def_instr_prima -> PTCOMA .)


state 47

    (26) def_instr_prima -> empty .

    MAIN            reduce using rule 26 (def_instr_prima -> empty .)
    PRINT           reduce using rule 26 (def_instr_prima -> empty .)
    VAR             reduce using rule 26 (def_instr_prima -> empty .)
    ID              reduce using rule 26 (def_instr_prima -> empty .)
    MIENTRAS        reduce using rule 26 (def_instr_prima -> empty .)
    IF              reduce using rule 26 (def_instr_prima -> empty .)
    $end            reduce using rule 26 (def_instr_prima -> empty .)
    LLAVDER         reduce using rule 26 (def_instr_prima -> empty .)


state 48

    (28) asignacion_instr -> ID IGUAL asign_expresion_general . def_instr_prima
    (25) def_instr_prima -> . PTCOMA
    (26) def_instr_prima -> . empty
    (27) empty -> .

    PTCOMA          shift and go to state 46
    MAIN            reduce using rule 27 (empty -> .)
    PRINT           reduce using rule 27 (empty -> .)
    VAR             reduce using rule 27 (empty -> .)
    ID              reduce using rule 27 (empty -> .)
    MIENTRAS        reduce using rule 27 (empty -> .)
    IF              reduce using rule 27 (empty -> .)
    $end            reduce using rule 27 (empty -> .)
    LLAVDER         reduce using rule 27 (empty -> .)

    def_instr_prima                shift and go to state 84
    empty                          shift and go to state 47

state 49

    (29) asign_expresion_general -> expresion_numerica .
    (43) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (44) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (45) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (46) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (47) expresion_numerica -> expresion_numerica . ELEVADO expresion_numerica
    (48) expresion_numerica -> expresion_numerica . MOD expresion_numerica
    (49) expresion_numerica -> expresion_numerica . MAS expresion_char
    (53) expresion_numerica -> expresion_numerica . MAS expresion_cadena
    (64) expresion_cadena -> expresion_numerica .

  ! shift/reduce conflict for MAS resolved as shift
  ! reduce/reduce conflict for PTCOMA resolved using rule 29 (asign_expresion_general -> expresion_numerica .)
  ! reduce/reduce conflict for MAIN resolved using rule 29 (asign_expresion_general -> expresion_numerica .)
  ! reduce/reduce conflict for PRINT resolved using rule 29 (asign_expresion_general -> expresion_numerica .)
  ! reduce/reduce conflict for VAR resolved using rule 29 (asign_expresion_general -> expresion_numerica .)
  ! reduce/reduce conflict for ID resolved using rule 29 (asign_expresion_general -> expresion_numerica .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 29 (asign_expresion_general -> expresion_numerica .)
  ! reduce/reduce conflict for IF resolved using rule 29 (asign_expresion_general -> expresion_numerica .)
  ! reduce/reduce conflict for $end resolved using rule 29 (asign_expresion_general -> expresion_numerica .)
  ! reduce/reduce conflict for LLAVDER resolved using rule 29 (asign_expresion_general -> expresion_numerica .)
    PTCOMA          reduce using rule 29 (asign_expresion_general -> expresion_numerica .)
    MAIN            reduce using rule 29 (asign_expresion_general -> expresion_numerica .)
    PRINT           reduce using rule 29 (asign_expresion_general -> expresion_numerica .)
    VAR             reduce using rule 29 (asign_expresion_general -> expresion_numerica .)
    ID              reduce using rule 29 (asign_expresion_general -> expresion_numerica .)
    MIENTRAS        reduce using rule 29 (asign_expresion_general -> expresion_numerica .)
    IF              reduce using rule 29 (asign_expresion_general -> expresion_numerica .)
    $end            reduce using rule 29 (asign_expresion_general -> expresion_numerica .)
    LLAVDER         reduce using rule 29 (asign_expresion_general -> expresion_numerica .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    ELEVADO         shift and go to state 71
    MOD             shift and go to state 72

  ! MAS             [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! PTCOMA          [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! MAIN            [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! PRINT           [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! VAR             [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! ID              [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! MIENTRAS        [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! IF              [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! $end            [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! LLAVDER         [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]


state 50

    (30) asign_expresion_general -> expresion_cadena .
    (50) expresion_numerica -> expresion_cadena . MAS expresion_cadena
    (51) expresion_numerica -> expresion_cadena . MAS expresion_numerica
    (52) expresion_numerica -> expresion_cadena . MAS expresion_char

    PTCOMA          reduce using rule 30 (asign_expresion_general -> expresion_cadena .)
    MAIN            reduce using rule 30 (asign_expresion_general -> expresion_cadena .)
    PRINT           reduce using rule 30 (asign_expresion_general -> expresion_cadena .)
    VAR             reduce using rule 30 (asign_expresion_general -> expresion_cadena .)
    ID              reduce using rule 30 (asign_expresion_general -> expresion_cadena .)
    MIENTRAS        reduce using rule 30 (asign_expresion_general -> expresion_cadena .)
    IF              reduce using rule 30 (asign_expresion_general -> expresion_cadena .)
    $end            reduce using rule 30 (asign_expresion_general -> expresion_cadena .)
    LLAVDER         reduce using rule 30 (asign_expresion_general -> expresion_cadena .)
    MAS             shift and go to state 76


state 51

    (31) asign_expresion_general -> expresion_id .

    PTCOMA          reduce using rule 31 (asign_expresion_general -> expresion_id .)
    MAIN            reduce using rule 31 (asign_expresion_general -> expresion_id .)
    PRINT           reduce using rule 31 (asign_expresion_general -> expresion_id .)
    VAR             reduce using rule 31 (asign_expresion_general -> expresion_id .)
    ID              reduce using rule 31 (asign_expresion_general -> expresion_id .)
    MIENTRAS        reduce using rule 31 (asign_expresion_general -> expresion_id .)
    IF              reduce using rule 31 (asign_expresion_general -> expresion_id .)
    $end            reduce using rule 31 (asign_expresion_general -> expresion_id .)
    LLAVDER         reduce using rule 31 (asign_expresion_general -> expresion_id .)


state 52

    (32) asign_expresion_general -> expresion_boolean .

    PTCOMA          reduce using rule 32 (asign_expresion_general -> expresion_boolean .)
    MAIN            reduce using rule 32 (asign_expresion_general -> expresion_boolean .)
    PRINT           reduce using rule 32 (asign_expresion_general -> expresion_boolean .)
    VAR             reduce using rule 32 (asign_expresion_general -> expresion_boolean .)
    ID              reduce using rule 32 (asign_expresion_general -> expresion_boolean .)
    MIENTRAS        reduce using rule 32 (asign_expresion_general -> expresion_boolean .)
    IF              reduce using rule 32 (asign_expresion_general -> expresion_boolean .)
    $end            reduce using rule 32 (asign_expresion_general -> expresion_boolean .)
    LLAVDER         reduce using rule 32 (asign_expresion_general -> expresion_boolean .)


state 53

    (33) asign_expresion_general -> expresion_char .
    (54) expresion_numerica -> expresion_char . MAS expresion_char
    (55) expresion_numerica -> expresion_char . MAS expresion_cadena
    (56) expresion_numerica -> expresion_char . MAS expresion_numerica

    PTCOMA          reduce using rule 33 (asign_expresion_general -> expresion_char .)
    MAIN            reduce using rule 33 (asign_expresion_general -> expresion_char .)
    PRINT           reduce using rule 33 (asign_expresion_general -> expresion_char .)
    VAR             reduce using rule 33 (asign_expresion_general -> expresion_char .)
    ID              reduce using rule 33 (asign_expresion_general -> expresion_char .)
    MIENTRAS        reduce using rule 33 (asign_expresion_general -> expresion_char .)
    IF              reduce using rule 33 (asign_expresion_general -> expresion_char .)
    $end            reduce using rule 33 (asign_expresion_general -> expresion_char .)
    LLAVDER         reduce using rule 33 (asign_expresion_general -> expresion_char .)
    MAS             shift and go to state 77


state 54

    (40) mientras_instr -> MIENTRAS PARIZQ expresion_logica . PARDER LLAVIZQ instrucciones LLAVDER

    PARDER          shift and go to state 85


state 55

    (65) expresion_logica -> expresion_numerica . MAYQUE expresion_numerica
    (66) expresion_logica -> expresion_numerica . MENQUE expresion_numerica
    (68) expresion_logica -> expresion_numerica . NIGUALQUE expresion_numerica
    (43) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (44) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (45) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (46) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (47) expresion_numerica -> expresion_numerica . ELEVADO expresion_numerica
    (48) expresion_numerica -> expresion_numerica . MOD expresion_numerica
    (49) expresion_numerica -> expresion_numerica . MAS expresion_char
    (53) expresion_numerica -> expresion_numerica . MAS expresion_cadena
    (35) asign_def_expresion_general -> expresion_numerica .
    (64) expresion_cadena -> expresion_numerica .

  ! shift/reduce conflict for MAS resolved as shift
  ! reduce/reduce conflict for IGUALQUE resolved using rule 35 (asign_def_expresion_general -> expresion_numerica .)
    MAYQUE          shift and go to state 73
    MENQUE          shift and go to state 74
    NIGUALQUE       shift and go to state 75
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    ELEVADO         shift and go to state 71
    MOD             shift and go to state 72
    IGUALQUE        reduce using rule 35 (asign_def_expresion_general -> expresion_numerica .)

  ! MAS             [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! IGUALQUE        [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]


state 56

    (54) expresion_numerica -> expresion_char . MAS expresion_char
    (55) expresion_numerica -> expresion_char . MAS expresion_cadena
    (56) expresion_numerica -> expresion_char . MAS expresion_numerica
    (39) asign_def_expresion_general -> expresion_char .

    MAS             shift and go to state 77
    IGUALQUE        reduce using rule 39 (asign_def_expresion_general -> expresion_char .)


state 57

    (50) expresion_numerica -> expresion_cadena . MAS expresion_cadena
    (51) expresion_numerica -> expresion_cadena . MAS expresion_numerica
    (52) expresion_numerica -> expresion_cadena . MAS expresion_char
    (36) asign_def_expresion_general -> expresion_cadena .

    MAS             shift and go to state 76
    IGUALQUE        reduce using rule 36 (asign_def_expresion_general -> expresion_cadena .)


state 58

    (37) asign_def_expresion_general -> expresion_id .

    IGUALQUE        reduce using rule 37 (asign_def_expresion_general -> expresion_id .)
    PTCOMA          reduce using rule 37 (asign_def_expresion_general -> expresion_id .)
    MAIN            reduce using rule 37 (asign_def_expresion_general -> expresion_id .)
    PRINT           reduce using rule 37 (asign_def_expresion_general -> expresion_id .)
    VAR             reduce using rule 37 (asign_def_expresion_general -> expresion_id .)
    ID              reduce using rule 37 (asign_def_expresion_general -> expresion_id .)
    MIENTRAS        reduce using rule 37 (asign_def_expresion_general -> expresion_id .)
    IF              reduce using rule 37 (asign_def_expresion_general -> expresion_id .)
    $end            reduce using rule 37 (asign_def_expresion_general -> expresion_id .)
    LLAVDER         reduce using rule 37 (asign_def_expresion_general -> expresion_id .)
    PARDER          reduce using rule 37 (asign_def_expresion_general -> expresion_id .)


state 59

    (38) asign_def_expresion_general -> expresion_boolean .

    IGUALQUE        reduce using rule 38 (asign_def_expresion_general -> expresion_boolean .)
    PTCOMA          reduce using rule 38 (asign_def_expresion_general -> expresion_boolean .)
    MAIN            reduce using rule 38 (asign_def_expresion_general -> expresion_boolean .)
    PRINT           reduce using rule 38 (asign_def_expresion_general -> expresion_boolean .)
    VAR             reduce using rule 38 (asign_def_expresion_general -> expresion_boolean .)
    ID              reduce using rule 38 (asign_def_expresion_general -> expresion_boolean .)
    MIENTRAS        reduce using rule 38 (asign_def_expresion_general -> expresion_boolean .)
    IF              reduce using rule 38 (asign_def_expresion_general -> expresion_boolean .)
    $end            reduce using rule 38 (asign_def_expresion_general -> expresion_boolean .)
    LLAVDER         reduce using rule 38 (asign_def_expresion_general -> expresion_boolean .)
    PARDER          reduce using rule 38 (asign_def_expresion_general -> expresion_boolean .)


state 60

    (41) if_instr -> IF PARIZQ expresion_logica . PARDER LLAVIZQ instrucciones LLAVDER
    (42) if_else_instr -> IF PARIZQ expresion_logica . PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    PARDER          shift and go to state 86


state 61

    (13) func_main -> MAIN PARIZQ PARDER LLAVIZQ . instrucciones LLAVDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instrucciones -> . empty
    (5) instruccion -> . func_main
    (6) instruccion -> . imprimir_instr
    (7) instruccion -> . definicion_instr
    (8) instruccion -> . asignacion_instr
    (9) instruccion -> . def_asig_instr
    (10) instruccion -> . mientras_instr
    (11) instruccion -> . if_instr
    (12) instruccion -> . if_else_instr
    (27) empty -> .
    (13) func_main -> . MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (14) imprimir_instr -> . PRINT PARIZQ print_expresion_general PARDER def_instr_prima
    (24) definicion_instr -> . VAR ID def_instr_prima
    (28) asignacion_instr -> . ID IGUAL asign_expresion_general def_instr_prima
    (34) def_asig_instr -> . VAR ID IGUAL asign_def_expresion_general def_instr_prima
    (40) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (41) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (42) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    LLAVDER         reduce using rule 27 (empty -> .)
    MAIN            shift and go to state 13
    PRINT           shift and go to state 14
    VAR             shift and go to state 15
    ID              shift and go to state 16
    MIENTRAS        shift and go to state 17
    IF              shift and go to state 18

  ! MAIN            [ reduce using rule 27 (empty -> .) ]
  ! PRINT           [ reduce using rule 27 (empty -> .) ]
  ! VAR             [ reduce using rule 27 (empty -> .) ]
  ! ID              [ reduce using rule 27 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 27 (empty -> .) ]
  ! IF              [ reduce using rule 27 (empty -> .) ]

    instrucciones                  shift and go to state 87
    instruccion                    shift and go to state 3
    empty                          shift and go to state 4
    func_main                      shift and go to state 5
    imprimir_instr                 shift and go to state 6
    definicion_instr               shift and go to state 7
    asignacion_instr               shift and go to state 8
    def_asig_instr                 shift and go to state 9
    mientras_instr                 shift and go to state 10
    if_instr                       shift and go to state 11
    if_else_instr                  shift and go to state 12

state 62

    (58) expresion_numerica -> PARIZQ expresion_numerica . PARDER
    (43) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (44) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (45) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (46) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (47) expresion_numerica -> expresion_numerica . ELEVADO expresion_numerica
    (48) expresion_numerica -> expresion_numerica . MOD expresion_numerica
    (49) expresion_numerica -> expresion_numerica . MAS expresion_char
    (53) expresion_numerica -> expresion_numerica . MAS expresion_cadena
    (64) expresion_cadena -> expresion_numerica .

  ! shift/reduce conflict for MAS resolved as shift
    PARDER          shift and go to state 88
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    ELEVADO         shift and go to state 71
    MOD             shift and go to state 72

  ! MAS             [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]


state 63

    (54) expresion_numerica -> expresion_char . MAS expresion_char
    (55) expresion_numerica -> expresion_char . MAS expresion_cadena
    (56) expresion_numerica -> expresion_char . MAS expresion_numerica

    MAS             shift and go to state 77


state 64

    (50) expresion_numerica -> expresion_cadena . MAS expresion_cadena
    (51) expresion_numerica -> expresion_cadena . MAS expresion_numerica
    (52) expresion_numerica -> expresion_cadena . MAS expresion_char

    MAS             shift and go to state 76


state 65

    (61) expresion_numerica -> ID .

    PARDER          reduce using rule 61 (expresion_numerica -> ID .)
    MAS             reduce using rule 61 (expresion_numerica -> ID .)
    MENOS           reduce using rule 61 (expresion_numerica -> ID .)
    POR             reduce using rule 61 (expresion_numerica -> ID .)
    DIVIDIDO        reduce using rule 61 (expresion_numerica -> ID .)
    ELEVADO         reduce using rule 61 (expresion_numerica -> ID .)
    MOD             reduce using rule 61 (expresion_numerica -> ID .)
    MAYQUE          reduce using rule 61 (expresion_numerica -> ID .)
    MENQUE          reduce using rule 61 (expresion_numerica -> ID .)
    NIGUALQUE       reduce using rule 61 (expresion_numerica -> ID .)
    IGUALQUE        reduce using rule 61 (expresion_numerica -> ID .)
    PTCOMA          reduce using rule 61 (expresion_numerica -> ID .)
    MAIN            reduce using rule 61 (expresion_numerica -> ID .)
    PRINT           reduce using rule 61 (expresion_numerica -> ID .)
    VAR             reduce using rule 61 (expresion_numerica -> ID .)
    ID              reduce using rule 61 (expresion_numerica -> ID .)
    MIENTRAS        reduce using rule 61 (expresion_numerica -> ID .)
    IF              reduce using rule 61 (expresion_numerica -> ID .)
    $end            reduce using rule 61 (expresion_numerica -> ID .)
    LLAVDER         reduce using rule 61 (expresion_numerica -> ID .)


state 66

    (14) imprimir_instr -> PRINT PARIZQ print_expresion_general PARDER . def_instr_prima
    (25) def_instr_prima -> . PTCOMA
    (26) def_instr_prima -> . empty
    (27) empty -> .

    PTCOMA          shift and go to state 46
    MAIN            reduce using rule 27 (empty -> .)
    PRINT           reduce using rule 27 (empty -> .)
    VAR             reduce using rule 27 (empty -> .)
    ID              reduce using rule 27 (empty -> .)
    MIENTRAS        reduce using rule 27 (empty -> .)
    IF              reduce using rule 27 (empty -> .)
    $end            reduce using rule 27 (empty -> .)
    LLAVDER         reduce using rule 27 (empty -> .)

    def_instr_prima                shift and go to state 89
    empty                          shift and go to state 47

state 67

    (43) expresion_numerica -> expresion_numerica MAS . expresion_numerica
    (49) expresion_numerica -> expresion_numerica MAS . expresion_char
    (53) expresion_numerica -> expresion_numerica MAS . expresion_cadena
    (43) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (44) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (45) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (46) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (47) expresion_numerica -> . expresion_numerica ELEVADO expresion_numerica
    (48) expresion_numerica -> . expresion_numerica MOD expresion_numerica
    (49) expresion_numerica -> . expresion_numerica MAS expresion_char
    (50) expresion_numerica -> . expresion_cadena MAS expresion_cadena
    (51) expresion_numerica -> . expresion_cadena MAS expresion_numerica
    (52) expresion_numerica -> . expresion_cadena MAS expresion_char
    (53) expresion_numerica -> . expresion_numerica MAS expresion_cadena
    (54) expresion_numerica -> . expresion_char MAS expresion_char
    (55) expresion_numerica -> . expresion_char MAS expresion_cadena
    (56) expresion_numerica -> . expresion_char MAS expresion_numerica
    (57) expresion_numerica -> . MENOS expresion_numerica
    (58) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (59) expresion_numerica -> . ENTERO
    (60) expresion_numerica -> . DECIMAL
    (61) expresion_numerica -> . ID
    (62) expresion_char -> . CHAR
    (63) expresion_cadena -> . CADENA
    (64) expresion_cadena -> . expresion_numerica

    MENOS           shift and go to state 35
    PARIZQ          shift and go to state 27
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    ID              shift and go to state 65
    CHAR            shift and go to state 42
    CADENA          shift and go to state 39

    expresion_numerica             shift and go to state 90
    expresion_char                 shift and go to state 91
    expresion_cadena               shift and go to state 92

state 68

    (44) expresion_numerica -> expresion_numerica MENOS . expresion_numerica
    (43) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (44) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (45) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (46) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (47) expresion_numerica -> . expresion_numerica ELEVADO expresion_numerica
    (48) expresion_numerica -> . expresion_numerica MOD expresion_numerica
    (49) expresion_numerica -> . expresion_numerica MAS expresion_char
    (50) expresion_numerica -> . expresion_cadena MAS expresion_cadena
    (51) expresion_numerica -> . expresion_cadena MAS expresion_numerica
    (52) expresion_numerica -> . expresion_cadena MAS expresion_char
    (53) expresion_numerica -> . expresion_numerica MAS expresion_cadena
    (54) expresion_numerica -> . expresion_char MAS expresion_char
    (55) expresion_numerica -> . expresion_char MAS expresion_cadena
    (56) expresion_numerica -> . expresion_char MAS expresion_numerica
    (57) expresion_numerica -> . MENOS expresion_numerica
    (58) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (59) expresion_numerica -> . ENTERO
    (60) expresion_numerica -> . DECIMAL
    (61) expresion_numerica -> . ID
    (63) expresion_cadena -> . CADENA
    (64) expresion_cadena -> . expresion_numerica
    (62) expresion_char -> . CHAR

    MENOS           shift and go to state 35
    PARIZQ          shift and go to state 27
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    ID              shift and go to state 65
    CADENA          shift and go to state 39
    CHAR            shift and go to state 42

    expresion_numerica             shift and go to state 93
    expresion_char                 shift and go to state 63
    expresion_cadena               shift and go to state 64

state 69

    (45) expresion_numerica -> expresion_numerica POR . expresion_numerica
    (43) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (44) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (45) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (46) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (47) expresion_numerica -> . expresion_numerica ELEVADO expresion_numerica
    (48) expresion_numerica -> . expresion_numerica MOD expresion_numerica
    (49) expresion_numerica -> . expresion_numerica MAS expresion_char
    (50) expresion_numerica -> . expresion_cadena MAS expresion_cadena
    (51) expresion_numerica -> . expresion_cadena MAS expresion_numerica
    (52) expresion_numerica -> . expresion_cadena MAS expresion_char
    (53) expresion_numerica -> . expresion_numerica MAS expresion_cadena
    (54) expresion_numerica -> . expresion_char MAS expresion_char
    (55) expresion_numerica -> . expresion_char MAS expresion_cadena
    (56) expresion_numerica -> . expresion_char MAS expresion_numerica
    (57) expresion_numerica -> . MENOS expresion_numerica
    (58) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (59) expresion_numerica -> . ENTERO
    (60) expresion_numerica -> . DECIMAL
    (61) expresion_numerica -> . ID
    (63) expresion_cadena -> . CADENA
    (64) expresion_cadena -> . expresion_numerica
    (62) expresion_char -> . CHAR

    MENOS           shift and go to state 35
    PARIZQ          shift and go to state 27
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    ID              shift and go to state 65
    CADENA          shift and go to state 39
    CHAR            shift and go to state 42

    expresion_numerica             shift and go to state 94
    expresion_char                 shift and go to state 63
    expresion_cadena               shift and go to state 64

state 70

    (46) expresion_numerica -> expresion_numerica DIVIDIDO . expresion_numerica
    (43) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (44) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (45) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (46) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (47) expresion_numerica -> . expresion_numerica ELEVADO expresion_numerica
    (48) expresion_numerica -> . expresion_numerica MOD expresion_numerica
    (49) expresion_numerica -> . expresion_numerica MAS expresion_char
    (50) expresion_numerica -> . expresion_cadena MAS expresion_cadena
    (51) expresion_numerica -> . expresion_cadena MAS expresion_numerica
    (52) expresion_numerica -> . expresion_cadena MAS expresion_char
    (53) expresion_numerica -> . expresion_numerica MAS expresion_cadena
    (54) expresion_numerica -> . expresion_char MAS expresion_char
    (55) expresion_numerica -> . expresion_char MAS expresion_cadena
    (56) expresion_numerica -> . expresion_char MAS expresion_numerica
    (57) expresion_numerica -> . MENOS expresion_numerica
    (58) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (59) expresion_numerica -> . ENTERO
    (60) expresion_numerica -> . DECIMAL
    (61) expresion_numerica -> . ID
    (63) expresion_cadena -> . CADENA
    (64) expresion_cadena -> . expresion_numerica
    (62) expresion_char -> . CHAR

    MENOS           shift and go to state 35
    PARIZQ          shift and go to state 27
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    ID              shift and go to state 65
    CADENA          shift and go to state 39
    CHAR            shift and go to state 42

    expresion_numerica             shift and go to state 95
    expresion_char                 shift and go to state 63
    expresion_cadena               shift and go to state 64

state 71

    (47) expresion_numerica -> expresion_numerica ELEVADO . expresion_numerica
    (43) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (44) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (45) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (46) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (47) expresion_numerica -> . expresion_numerica ELEVADO expresion_numerica
    (48) expresion_numerica -> . expresion_numerica MOD expresion_numerica
    (49) expresion_numerica -> . expresion_numerica MAS expresion_char
    (50) expresion_numerica -> . expresion_cadena MAS expresion_cadena
    (51) expresion_numerica -> . expresion_cadena MAS expresion_numerica
    (52) expresion_numerica -> . expresion_cadena MAS expresion_char
    (53) expresion_numerica -> . expresion_numerica MAS expresion_cadena
    (54) expresion_numerica -> . expresion_char MAS expresion_char
    (55) expresion_numerica -> . expresion_char MAS expresion_cadena
    (56) expresion_numerica -> . expresion_char MAS expresion_numerica
    (57) expresion_numerica -> . MENOS expresion_numerica
    (58) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (59) expresion_numerica -> . ENTERO
    (60) expresion_numerica -> . DECIMAL
    (61) expresion_numerica -> . ID
    (63) expresion_cadena -> . CADENA
    (64) expresion_cadena -> . expresion_numerica
    (62) expresion_char -> . CHAR

    MENOS           shift and go to state 35
    PARIZQ          shift and go to state 27
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    ID              shift and go to state 65
    CADENA          shift and go to state 39
    CHAR            shift and go to state 42

    expresion_numerica             shift and go to state 96
    expresion_char                 shift and go to state 63
    expresion_cadena               shift and go to state 64

state 72

    (48) expresion_numerica -> expresion_numerica MOD . expresion_numerica
    (43) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (44) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (45) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (46) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (47) expresion_numerica -> . expresion_numerica ELEVADO expresion_numerica
    (48) expresion_numerica -> . expresion_numerica MOD expresion_numerica
    (49) expresion_numerica -> . expresion_numerica MAS expresion_char
    (50) expresion_numerica -> . expresion_cadena MAS expresion_cadena
    (51) expresion_numerica -> . expresion_cadena MAS expresion_numerica
    (52) expresion_numerica -> . expresion_cadena MAS expresion_char
    (53) expresion_numerica -> . expresion_numerica MAS expresion_cadena
    (54) expresion_numerica -> . expresion_char MAS expresion_char
    (55) expresion_numerica -> . expresion_char MAS expresion_cadena
    (56) expresion_numerica -> . expresion_char MAS expresion_numerica
    (57) expresion_numerica -> . MENOS expresion_numerica
    (58) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (59) expresion_numerica -> . ENTERO
    (60) expresion_numerica -> . DECIMAL
    (61) expresion_numerica -> . ID
    (63) expresion_cadena -> . CADENA
    (64) expresion_cadena -> . expresion_numerica
    (62) expresion_char -> . CHAR

    MENOS           shift and go to state 35
    PARIZQ          shift and go to state 27
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    ID              shift and go to state 65
    CADENA          shift and go to state 39
    CHAR            shift and go to state 42

    expresion_numerica             shift and go to state 97
    expresion_char                 shift and go to state 63
    expresion_cadena               shift and go to state 64

state 73

    (65) expresion_logica -> expresion_numerica MAYQUE . expresion_numerica
    (43) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (44) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (45) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (46) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (47) expresion_numerica -> . expresion_numerica ELEVADO expresion_numerica
    (48) expresion_numerica -> . expresion_numerica MOD expresion_numerica
    (49) expresion_numerica -> . expresion_numerica MAS expresion_char
    (50) expresion_numerica -> . expresion_cadena MAS expresion_cadena
    (51) expresion_numerica -> . expresion_cadena MAS expresion_numerica
    (52) expresion_numerica -> . expresion_cadena MAS expresion_char
    (53) expresion_numerica -> . expresion_numerica MAS expresion_cadena
    (54) expresion_numerica -> . expresion_char MAS expresion_char
    (55) expresion_numerica -> . expresion_char MAS expresion_cadena
    (56) expresion_numerica -> . expresion_char MAS expresion_numerica
    (57) expresion_numerica -> . MENOS expresion_numerica
    (58) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (59) expresion_numerica -> . ENTERO
    (60) expresion_numerica -> . DECIMAL
    (61) expresion_numerica -> . ID
    (63) expresion_cadena -> . CADENA
    (64) expresion_cadena -> . expresion_numerica
    (62) expresion_char -> . CHAR

    MENOS           shift and go to state 35
    PARIZQ          shift and go to state 27
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    ID              shift and go to state 65
    CADENA          shift and go to state 39
    CHAR            shift and go to state 42

    expresion_numerica             shift and go to state 98
    expresion_char                 shift and go to state 63
    expresion_cadena               shift and go to state 64

state 74

    (66) expresion_logica -> expresion_numerica MENQUE . expresion_numerica
    (43) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (44) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (45) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (46) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (47) expresion_numerica -> . expresion_numerica ELEVADO expresion_numerica
    (48) expresion_numerica -> . expresion_numerica MOD expresion_numerica
    (49) expresion_numerica -> . expresion_numerica MAS expresion_char
    (50) expresion_numerica -> . expresion_cadena MAS expresion_cadena
    (51) expresion_numerica -> . expresion_cadena MAS expresion_numerica
    (52) expresion_numerica -> . expresion_cadena MAS expresion_char
    (53) expresion_numerica -> . expresion_numerica MAS expresion_cadena
    (54) expresion_numerica -> . expresion_char MAS expresion_char
    (55) expresion_numerica -> . expresion_char MAS expresion_cadena
    (56) expresion_numerica -> . expresion_char MAS expresion_numerica
    (57) expresion_numerica -> . MENOS expresion_numerica
    (58) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (59) expresion_numerica -> . ENTERO
    (60) expresion_numerica -> . DECIMAL
    (61) expresion_numerica -> . ID
    (63) expresion_cadena -> . CADENA
    (64) expresion_cadena -> . expresion_numerica
    (62) expresion_char -> . CHAR

    MENOS           shift and go to state 35
    PARIZQ          shift and go to state 27
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    ID              shift and go to state 65
    CADENA          shift and go to state 39
    CHAR            shift and go to state 42

    expresion_numerica             shift and go to state 99
    expresion_char                 shift and go to state 63
    expresion_cadena               shift and go to state 64

state 75

    (68) expresion_logica -> expresion_numerica NIGUALQUE . expresion_numerica
    (43) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (44) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (45) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (46) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (47) expresion_numerica -> . expresion_numerica ELEVADO expresion_numerica
    (48) expresion_numerica -> . expresion_numerica MOD expresion_numerica
    (49) expresion_numerica -> . expresion_numerica MAS expresion_char
    (50) expresion_numerica -> . expresion_cadena MAS expresion_cadena
    (51) expresion_numerica -> . expresion_cadena MAS expresion_numerica
    (52) expresion_numerica -> . expresion_cadena MAS expresion_char
    (53) expresion_numerica -> . expresion_numerica MAS expresion_cadena
    (54) expresion_numerica -> . expresion_char MAS expresion_char
    (55) expresion_numerica -> . expresion_char MAS expresion_cadena
    (56) expresion_numerica -> . expresion_char MAS expresion_numerica
    (57) expresion_numerica -> . MENOS expresion_numerica
    (58) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (59) expresion_numerica -> . ENTERO
    (60) expresion_numerica -> . DECIMAL
    (61) expresion_numerica -> . ID
    (63) expresion_cadena -> . CADENA
    (64) expresion_cadena -> . expresion_numerica
    (62) expresion_char -> . CHAR

    MENOS           shift and go to state 35
    PARIZQ          shift and go to state 27
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    ID              shift and go to state 65
    CADENA          shift and go to state 39
    CHAR            shift and go to state 42

    expresion_numerica             shift and go to state 100
    expresion_char                 shift and go to state 63
    expresion_cadena               shift and go to state 64

state 76

    (50) expresion_numerica -> expresion_cadena MAS . expresion_cadena
    (51) expresion_numerica -> expresion_cadena MAS . expresion_numerica
    (52) expresion_numerica -> expresion_cadena MAS . expresion_char
    (63) expresion_cadena -> . CADENA
    (64) expresion_cadena -> . expresion_numerica
    (43) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (44) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (45) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (46) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (47) expresion_numerica -> . expresion_numerica ELEVADO expresion_numerica
    (48) expresion_numerica -> . expresion_numerica MOD expresion_numerica
    (49) expresion_numerica -> . expresion_numerica MAS expresion_char
    (50) expresion_numerica -> . expresion_cadena MAS expresion_cadena
    (51) expresion_numerica -> . expresion_cadena MAS expresion_numerica
    (52) expresion_numerica -> . expresion_cadena MAS expresion_char
    (53) expresion_numerica -> . expresion_numerica MAS expresion_cadena
    (54) expresion_numerica -> . expresion_char MAS expresion_char
    (55) expresion_numerica -> . expresion_char MAS expresion_cadena
    (56) expresion_numerica -> . expresion_char MAS expresion_numerica
    (57) expresion_numerica -> . MENOS expresion_numerica
    (58) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (59) expresion_numerica -> . ENTERO
    (60) expresion_numerica -> . DECIMAL
    (61) expresion_numerica -> . ID
    (62) expresion_char -> . CHAR

    CADENA          shift and go to state 39
    MENOS           shift and go to state 35
    PARIZQ          shift and go to state 27
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    ID              shift and go to state 65
    CHAR            shift and go to state 42

    expresion_cadena               shift and go to state 101
    expresion_numerica             shift and go to state 102
    expresion_char                 shift and go to state 103

state 77

    (54) expresion_numerica -> expresion_char MAS . expresion_char
    (55) expresion_numerica -> expresion_char MAS . expresion_cadena
    (56) expresion_numerica -> expresion_char MAS . expresion_numerica
    (62) expresion_char -> . CHAR
    (63) expresion_cadena -> . CADENA
    (64) expresion_cadena -> . expresion_numerica
    (43) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (44) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (45) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (46) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (47) expresion_numerica -> . expresion_numerica ELEVADO expresion_numerica
    (48) expresion_numerica -> . expresion_numerica MOD expresion_numerica
    (49) expresion_numerica -> . expresion_numerica MAS expresion_char
    (50) expresion_numerica -> . expresion_cadena MAS expresion_cadena
    (51) expresion_numerica -> . expresion_cadena MAS expresion_numerica
    (52) expresion_numerica -> . expresion_cadena MAS expresion_char
    (53) expresion_numerica -> . expresion_numerica MAS expresion_cadena
    (54) expresion_numerica -> . expresion_char MAS expresion_char
    (55) expresion_numerica -> . expresion_char MAS expresion_cadena
    (56) expresion_numerica -> . expresion_char MAS expresion_numerica
    (57) expresion_numerica -> . MENOS expresion_numerica
    (58) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (59) expresion_numerica -> . ENTERO
    (60) expresion_numerica -> . DECIMAL
    (61) expresion_numerica -> . ID

    CHAR            shift and go to state 42
    CADENA          shift and go to state 39
    MENOS           shift and go to state 35
    PARIZQ          shift and go to state 27
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    ID              shift and go to state 65

    expresion_char                 shift and go to state 104
    expresion_cadena               shift and go to state 105
    expresion_numerica             shift and go to state 106

state 78

    (57) expresion_numerica -> MENOS expresion_numerica .
    (43) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (44) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (45) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (46) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (47) expresion_numerica -> expresion_numerica . ELEVADO expresion_numerica
    (48) expresion_numerica -> expresion_numerica . MOD expresion_numerica
    (49) expresion_numerica -> expresion_numerica . MAS expresion_char
    (53) expresion_numerica -> expresion_numerica . MAS expresion_cadena
    (64) expresion_cadena -> expresion_numerica .

  ! reduce/reduce conflict for MAS resolved using rule 57 (expresion_numerica -> MENOS expresion_numerica .)
    MAS             reduce using rule 57 (expresion_numerica -> MENOS expresion_numerica .)
    MENOS           reduce using rule 57 (expresion_numerica -> MENOS expresion_numerica .)
    POR             reduce using rule 57 (expresion_numerica -> MENOS expresion_numerica .)
    DIVIDIDO        reduce using rule 57 (expresion_numerica -> MENOS expresion_numerica .)
    ELEVADO         reduce using rule 57 (expresion_numerica -> MENOS expresion_numerica .)
    MOD             reduce using rule 57 (expresion_numerica -> MENOS expresion_numerica .)
    MAYQUE          reduce using rule 57 (expresion_numerica -> MENOS expresion_numerica .)
    MENQUE          reduce using rule 57 (expresion_numerica -> MENOS expresion_numerica .)
    NIGUALQUE       reduce using rule 57 (expresion_numerica -> MENOS expresion_numerica .)
    PARDER          reduce using rule 57 (expresion_numerica -> MENOS expresion_numerica .)
    IGUALQUE        reduce using rule 57 (expresion_numerica -> MENOS expresion_numerica .)
    PTCOMA          reduce using rule 57 (expresion_numerica -> MENOS expresion_numerica .)
    MAIN            reduce using rule 57 (expresion_numerica -> MENOS expresion_numerica .)
    PRINT           reduce using rule 57 (expresion_numerica -> MENOS expresion_numerica .)
    VAR             reduce using rule 57 (expresion_numerica -> MENOS expresion_numerica .)
    ID              reduce using rule 57 (expresion_numerica -> MENOS expresion_numerica .)
    MIENTRAS        reduce using rule 57 (expresion_numerica -> MENOS expresion_numerica .)
    IF              reduce using rule 57 (expresion_numerica -> MENOS expresion_numerica .)
    $end            reduce using rule 57 (expresion_numerica -> MENOS expresion_numerica .)
    LLAVDER         reduce using rule 57 (expresion_numerica -> MENOS expresion_numerica .)

  ! MAS             [ shift and go to state 67 ]
  ! MENOS           [ shift and go to state 68 ]
  ! POR             [ shift and go to state 69 ]
  ! DIVIDIDO        [ shift and go to state 70 ]
  ! ELEVADO         [ shift and go to state 71 ]
  ! MOD             [ shift and go to state 72 ]
  ! MAS             [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]


state 79

    (67) expresion_logica -> asign_def_expresion_general IGUALQUE . asign_def_expresion_general
    (35) asign_def_expresion_general -> . expresion_numerica
    (36) asign_def_expresion_general -> . expresion_cadena
    (37) asign_def_expresion_general -> . expresion_id
    (38) asign_def_expresion_general -> . expresion_boolean
    (39) asign_def_expresion_general -> . expresion_char
    (43) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (44) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (45) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (46) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (47) expresion_numerica -> . expresion_numerica ELEVADO expresion_numerica
    (48) expresion_numerica -> . expresion_numerica MOD expresion_numerica
    (49) expresion_numerica -> . expresion_numerica MAS expresion_char
    (50) expresion_numerica -> . expresion_cadena MAS expresion_cadena
    (51) expresion_numerica -> . expresion_cadena MAS expresion_numerica
    (52) expresion_numerica -> . expresion_cadena MAS expresion_char
    (53) expresion_numerica -> . expresion_numerica MAS expresion_cadena
    (54) expresion_numerica -> . expresion_char MAS expresion_char
    (55) expresion_numerica -> . expresion_char MAS expresion_cadena
    (56) expresion_numerica -> . expresion_char MAS expresion_numerica
    (57) expresion_numerica -> . MENOS expresion_numerica
    (58) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (59) expresion_numerica -> . ENTERO
    (60) expresion_numerica -> . DECIMAL
    (61) expresion_numerica -> . ID
    (63) expresion_cadena -> . CADENA
    (64) expresion_cadena -> . expresion_numerica
    (21) expresion_id -> . ID
    (22) expresion_boolean -> . TRUE
    (23) expresion_boolean -> . FALSE
    (62) expresion_char -> . CHAR

    MENOS           shift and go to state 35
    PARIZQ          shift and go to state 27
    ENTERO          shift and go to state 36
    DECIMAL         shift and go to state 37
    ID              shift and go to state 38
    CADENA          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    CHAR            shift and go to state 42

    asign_def_expresion_general    shift and go to state 107
    expresion_numerica             shift and go to state 81
    expresion_cadena               shift and go to state 82
    expresion_id                   shift and go to state 58
    expresion_boolean              shift and go to state 59
    expresion_char                 shift and go to state 83

state 80

    (34) def_asig_instr -> VAR ID IGUAL asign_def_expresion_general . def_instr_prima
    (25) def_instr_prima -> . PTCOMA
    (26) def_instr_prima -> . empty
    (27) empty -> .

    PTCOMA          shift and go to state 46
    MAIN            reduce using rule 27 (empty -> .)
    PRINT           reduce using rule 27 (empty -> .)
    VAR             reduce using rule 27 (empty -> .)
    ID              reduce using rule 27 (empty -> .)
    MIENTRAS        reduce using rule 27 (empty -> .)
    IF              reduce using rule 27 (empty -> .)
    $end            reduce using rule 27 (empty -> .)
    LLAVDER         reduce using rule 27 (empty -> .)

    def_instr_prima                shift and go to state 108
    empty                          shift and go to state 47

state 81

    (35) asign_def_expresion_general -> expresion_numerica .
    (43) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (44) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (45) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (46) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (47) expresion_numerica -> expresion_numerica . ELEVADO expresion_numerica
    (48) expresion_numerica -> expresion_numerica . MOD expresion_numerica
    (49) expresion_numerica -> expresion_numerica . MAS expresion_char
    (53) expresion_numerica -> expresion_numerica . MAS expresion_cadena
    (64) expresion_cadena -> expresion_numerica .

  ! shift/reduce conflict for MAS resolved as shift
  ! reduce/reduce conflict for PTCOMA resolved using rule 35 (asign_def_expresion_general -> expresion_numerica .)
  ! reduce/reduce conflict for MAIN resolved using rule 35 (asign_def_expresion_general -> expresion_numerica .)
  ! reduce/reduce conflict for PRINT resolved using rule 35 (asign_def_expresion_general -> expresion_numerica .)
  ! reduce/reduce conflict for VAR resolved using rule 35 (asign_def_expresion_general -> expresion_numerica .)
  ! reduce/reduce conflict for ID resolved using rule 35 (asign_def_expresion_general -> expresion_numerica .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 35 (asign_def_expresion_general -> expresion_numerica .)
  ! reduce/reduce conflict for IF resolved using rule 35 (asign_def_expresion_general -> expresion_numerica .)
  ! reduce/reduce conflict for $end resolved using rule 35 (asign_def_expresion_general -> expresion_numerica .)
  ! reduce/reduce conflict for LLAVDER resolved using rule 35 (asign_def_expresion_general -> expresion_numerica .)
  ! reduce/reduce conflict for PARDER resolved using rule 35 (asign_def_expresion_general -> expresion_numerica .)
    PTCOMA          reduce using rule 35 (asign_def_expresion_general -> expresion_numerica .)
    MAIN            reduce using rule 35 (asign_def_expresion_general -> expresion_numerica .)
    PRINT           reduce using rule 35 (asign_def_expresion_general -> expresion_numerica .)
    VAR             reduce using rule 35 (asign_def_expresion_general -> expresion_numerica .)
    ID              reduce using rule 35 (asign_def_expresion_general -> expresion_numerica .)
    MIENTRAS        reduce using rule 35 (asign_def_expresion_general -> expresion_numerica .)
    IF              reduce using rule 35 (asign_def_expresion_general -> expresion_numerica .)
    $end            reduce using rule 35 (asign_def_expresion_general -> expresion_numerica .)
    LLAVDER         reduce using rule 35 (asign_def_expresion_general -> expresion_numerica .)
    PARDER          reduce using rule 35 (asign_def_expresion_general -> expresion_numerica .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    ELEVADO         shift and go to state 71
    MOD             shift and go to state 72

  ! MAS             [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! PTCOMA          [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! MAIN            [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! PRINT           [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! VAR             [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! ID              [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! MIENTRAS        [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! IF              [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! $end            [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! LLAVDER         [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! PARDER          [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]


state 82

    (36) asign_def_expresion_general -> expresion_cadena .
    (50) expresion_numerica -> expresion_cadena . MAS expresion_cadena
    (51) expresion_numerica -> expresion_cadena . MAS expresion_numerica
    (52) expresion_numerica -> expresion_cadena . MAS expresion_char

    PTCOMA          reduce using rule 36 (asign_def_expresion_general -> expresion_cadena .)
    MAIN            reduce using rule 36 (asign_def_expresion_general -> expresion_cadena .)
    PRINT           reduce using rule 36 (asign_def_expresion_general -> expresion_cadena .)
    VAR             reduce using rule 36 (asign_def_expresion_general -> expresion_cadena .)
    ID              reduce using rule 36 (asign_def_expresion_general -> expresion_cadena .)
    MIENTRAS        reduce using rule 36 (asign_def_expresion_general -> expresion_cadena .)
    IF              reduce using rule 36 (asign_def_expresion_general -> expresion_cadena .)
    $end            reduce using rule 36 (asign_def_expresion_general -> expresion_cadena .)
    LLAVDER         reduce using rule 36 (asign_def_expresion_general -> expresion_cadena .)
    PARDER          reduce using rule 36 (asign_def_expresion_general -> expresion_cadena .)
    MAS             shift and go to state 76


state 83

    (39) asign_def_expresion_general -> expresion_char .
    (54) expresion_numerica -> expresion_char . MAS expresion_char
    (55) expresion_numerica -> expresion_char . MAS expresion_cadena
    (56) expresion_numerica -> expresion_char . MAS expresion_numerica

    PTCOMA          reduce using rule 39 (asign_def_expresion_general -> expresion_char .)
    MAIN            reduce using rule 39 (asign_def_expresion_general -> expresion_char .)
    PRINT           reduce using rule 39 (asign_def_expresion_general -> expresion_char .)
    VAR             reduce using rule 39 (asign_def_expresion_general -> expresion_char .)
    ID              reduce using rule 39 (asign_def_expresion_general -> expresion_char .)
    MIENTRAS        reduce using rule 39 (asign_def_expresion_general -> expresion_char .)
    IF              reduce using rule 39 (asign_def_expresion_general -> expresion_char .)
    $end            reduce using rule 39 (asign_def_expresion_general -> expresion_char .)
    LLAVDER         reduce using rule 39 (asign_def_expresion_general -> expresion_char .)
    PARDER          reduce using rule 39 (asign_def_expresion_general -> expresion_char .)
    MAS             shift and go to state 77


state 84

    (28) asignacion_instr -> ID IGUAL asign_expresion_general def_instr_prima .

    MAIN            reduce using rule 28 (asignacion_instr -> ID IGUAL asign_expresion_general def_instr_prima .)
    PRINT           reduce using rule 28 (asignacion_instr -> ID IGUAL asign_expresion_general def_instr_prima .)
    VAR             reduce using rule 28 (asignacion_instr -> ID IGUAL asign_expresion_general def_instr_prima .)
    ID              reduce using rule 28 (asignacion_instr -> ID IGUAL asign_expresion_general def_instr_prima .)
    MIENTRAS        reduce using rule 28 (asignacion_instr -> ID IGUAL asign_expresion_general def_instr_prima .)
    IF              reduce using rule 28 (asignacion_instr -> ID IGUAL asign_expresion_general def_instr_prima .)
    $end            reduce using rule 28 (asignacion_instr -> ID IGUAL asign_expresion_general def_instr_prima .)
    LLAVDER         reduce using rule 28 (asignacion_instr -> ID IGUAL asign_expresion_general def_instr_prima .)


state 85

    (40) mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 109


state 86

    (41) if_instr -> IF PARIZQ expresion_logica PARDER . LLAVIZQ instrucciones LLAVDER
    (42) if_else_instr -> IF PARIZQ expresion_logica PARDER . LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 110


state 87

    (13) func_main -> MAIN PARIZQ PARDER LLAVIZQ instrucciones . LLAVDER
    (2) instrucciones -> instrucciones . instruccion
    (5) instruccion -> . func_main
    (6) instruccion -> . imprimir_instr
    (7) instruccion -> . definicion_instr
    (8) instruccion -> . asignacion_instr
    (9) instruccion -> . def_asig_instr
    (10) instruccion -> . mientras_instr
    (11) instruccion -> . if_instr
    (12) instruccion -> . if_else_instr
    (13) func_main -> . MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (14) imprimir_instr -> . PRINT PARIZQ print_expresion_general PARDER def_instr_prima
    (24) definicion_instr -> . VAR ID def_instr_prima
    (28) asignacion_instr -> . ID IGUAL asign_expresion_general def_instr_prima
    (34) def_asig_instr -> . VAR ID IGUAL asign_def_expresion_general def_instr_prima
    (40) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (41) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (42) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    LLAVDER         shift and go to state 111
    MAIN            shift and go to state 13
    PRINT           shift and go to state 14
    VAR             shift and go to state 15
    ID              shift and go to state 16
    MIENTRAS        shift and go to state 17
    IF              shift and go to state 18

    instruccion                    shift and go to state 19
    func_main                      shift and go to state 5
    imprimir_instr                 shift and go to state 6
    definicion_instr               shift and go to state 7
    asignacion_instr               shift and go to state 8
    def_asig_instr                 shift and go to state 9
    mientras_instr                 shift and go to state 10
    if_instr                       shift and go to state 11
    if_else_instr                  shift and go to state 12

state 88

    (58) expresion_numerica -> PARIZQ expresion_numerica PARDER .

    MAS             reduce using rule 58 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    MENOS           reduce using rule 58 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    POR             reduce using rule 58 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    DIVIDIDO        reduce using rule 58 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    ELEVADO         reduce using rule 58 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    MOD             reduce using rule 58 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    MAYQUE          reduce using rule 58 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    MENQUE          reduce using rule 58 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    NIGUALQUE       reduce using rule 58 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    PARDER          reduce using rule 58 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    IGUALQUE        reduce using rule 58 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    PTCOMA          reduce using rule 58 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    MAIN            reduce using rule 58 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    PRINT           reduce using rule 58 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    VAR             reduce using rule 58 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    ID              reduce using rule 58 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    MIENTRAS        reduce using rule 58 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    IF              reduce using rule 58 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    $end            reduce using rule 58 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    LLAVDER         reduce using rule 58 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)


state 89

    (14) imprimir_instr -> PRINT PARIZQ print_expresion_general PARDER def_instr_prima .

    MAIN            reduce using rule 14 (imprimir_instr -> PRINT PARIZQ print_expresion_general PARDER def_instr_prima .)
    PRINT           reduce using rule 14 (imprimir_instr -> PRINT PARIZQ print_expresion_general PARDER def_instr_prima .)
    VAR             reduce using rule 14 (imprimir_instr -> PRINT PARIZQ print_expresion_general PARDER def_instr_prima .)
    ID              reduce using rule 14 (imprimir_instr -> PRINT PARIZQ print_expresion_general PARDER def_instr_prima .)
    MIENTRAS        reduce using rule 14 (imprimir_instr -> PRINT PARIZQ print_expresion_general PARDER def_instr_prima .)
    IF              reduce using rule 14 (imprimir_instr -> PRINT PARIZQ print_expresion_general PARDER def_instr_prima .)
    $end            reduce using rule 14 (imprimir_instr -> PRINT PARIZQ print_expresion_general PARDER def_instr_prima .)
    LLAVDER         reduce using rule 14 (imprimir_instr -> PRINT PARIZQ print_expresion_general PARDER def_instr_prima .)


state 90

    (43) expresion_numerica -> expresion_numerica MAS expresion_numerica .
    (43) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (44) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (45) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (46) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (47) expresion_numerica -> expresion_numerica . ELEVADO expresion_numerica
    (48) expresion_numerica -> expresion_numerica . MOD expresion_numerica
    (49) expresion_numerica -> expresion_numerica . MAS expresion_char
    (53) expresion_numerica -> expresion_numerica . MAS expresion_cadena
    (64) expresion_cadena -> expresion_numerica .

  ! reduce/reduce conflict for MAS resolved using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
  ! reduce/reduce conflict for MENOS resolved using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for ELEVADO resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! reduce/reduce conflict for MAYQUE resolved using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
  ! reduce/reduce conflict for MENQUE resolved using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
  ! reduce/reduce conflict for NIGUALQUE resolved using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
  ! reduce/reduce conflict for PARDER resolved using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
  ! reduce/reduce conflict for IGUALQUE resolved using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
  ! reduce/reduce conflict for PTCOMA resolved using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
  ! reduce/reduce conflict for MAIN resolved using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
  ! reduce/reduce conflict for PRINT resolved using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
  ! reduce/reduce conflict for VAR resolved using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
  ! reduce/reduce conflict for ID resolved using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
  ! reduce/reduce conflict for IF resolved using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
  ! reduce/reduce conflict for $end resolved using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
  ! reduce/reduce conflict for LLAVDER resolved using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    MAS             reduce using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    MENOS           reduce using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    MAYQUE          reduce using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    MENQUE          reduce using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    NIGUALQUE       reduce using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    PARDER          reduce using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    IGUALQUE        reduce using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    PTCOMA          reduce using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    MAIN            reduce using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    PRINT           reduce using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    VAR             reduce using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    ID              reduce using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    MIENTRAS        reduce using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    IF              reduce using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    $end            reduce using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    LLAVDER         reduce using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    ELEVADO         shift and go to state 71
    MOD             shift and go to state 72

  ! POR             [ reduce using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .) ]
  ! ELEVADO         [ reduce using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .) ]
  ! MOD             [ reduce using rule 43 (expresion_numerica -> expresion_numerica MAS expresion_numerica .) ]
  ! MAS             [ shift and go to state 67 ]
  ! MENOS           [ shift and go to state 68 ]
  ! MAS             [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! MENOS           [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! POR             [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! ELEVADO         [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! MOD             [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! MAYQUE          [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! MENQUE          [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! NIGUALQUE       [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! PARDER          [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! IGUALQUE        [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! PTCOMA          [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! MAIN            [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! PRINT           [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! VAR             [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! ID              [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! MIENTRAS        [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! IF              [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! $end            [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! LLAVDER         [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]


state 91

    (49) expresion_numerica -> expresion_numerica MAS expresion_char .
    (54) expresion_numerica -> expresion_char . MAS expresion_char
    (55) expresion_numerica -> expresion_char . MAS expresion_cadena
    (56) expresion_numerica -> expresion_char . MAS expresion_numerica

    MAS             reduce using rule 49 (expresion_numerica -> expresion_numerica MAS expresion_char .)
    MENOS           reduce using rule 49 (expresion_numerica -> expresion_numerica MAS expresion_char .)
    POR             reduce using rule 49 (expresion_numerica -> expresion_numerica MAS expresion_char .)
    DIVIDIDO        reduce using rule 49 (expresion_numerica -> expresion_numerica MAS expresion_char .)
    ELEVADO         reduce using rule 49 (expresion_numerica -> expresion_numerica MAS expresion_char .)
    MOD             reduce using rule 49 (expresion_numerica -> expresion_numerica MAS expresion_char .)
    MAYQUE          reduce using rule 49 (expresion_numerica -> expresion_numerica MAS expresion_char .)
    MENQUE          reduce using rule 49 (expresion_numerica -> expresion_numerica MAS expresion_char .)
    NIGUALQUE       reduce using rule 49 (expresion_numerica -> expresion_numerica MAS expresion_char .)
    PARDER          reduce using rule 49 (expresion_numerica -> expresion_numerica MAS expresion_char .)
    IGUALQUE        reduce using rule 49 (expresion_numerica -> expresion_numerica MAS expresion_char .)
    PTCOMA          reduce using rule 49 (expresion_numerica -> expresion_numerica MAS expresion_char .)
    MAIN            reduce using rule 49 (expresion_numerica -> expresion_numerica MAS expresion_char .)
    PRINT           reduce using rule 49 (expresion_numerica -> expresion_numerica MAS expresion_char .)
    VAR             reduce using rule 49 (expresion_numerica -> expresion_numerica MAS expresion_char .)
    ID              reduce using rule 49 (expresion_numerica -> expresion_numerica MAS expresion_char .)
    MIENTRAS        reduce using rule 49 (expresion_numerica -> expresion_numerica MAS expresion_char .)
    IF              reduce using rule 49 (expresion_numerica -> expresion_numerica MAS expresion_char .)
    $end            reduce using rule 49 (expresion_numerica -> expresion_numerica MAS expresion_char .)
    LLAVDER         reduce using rule 49 (expresion_numerica -> expresion_numerica MAS expresion_char .)

  ! MAS             [ shift and go to state 77 ]


state 92

    (53) expresion_numerica -> expresion_numerica MAS expresion_cadena .
    (50) expresion_numerica -> expresion_cadena . MAS expresion_cadena
    (51) expresion_numerica -> expresion_cadena . MAS expresion_numerica
    (52) expresion_numerica -> expresion_cadena . MAS expresion_char

    MAS             reduce using rule 53 (expresion_numerica -> expresion_numerica MAS expresion_cadena .)
    MENOS           reduce using rule 53 (expresion_numerica -> expresion_numerica MAS expresion_cadena .)
    POR             reduce using rule 53 (expresion_numerica -> expresion_numerica MAS expresion_cadena .)
    DIVIDIDO        reduce using rule 53 (expresion_numerica -> expresion_numerica MAS expresion_cadena .)
    ELEVADO         reduce using rule 53 (expresion_numerica -> expresion_numerica MAS expresion_cadena .)
    MOD             reduce using rule 53 (expresion_numerica -> expresion_numerica MAS expresion_cadena .)
    MAYQUE          reduce using rule 53 (expresion_numerica -> expresion_numerica MAS expresion_cadena .)
    MENQUE          reduce using rule 53 (expresion_numerica -> expresion_numerica MAS expresion_cadena .)
    NIGUALQUE       reduce using rule 53 (expresion_numerica -> expresion_numerica MAS expresion_cadena .)
    PARDER          reduce using rule 53 (expresion_numerica -> expresion_numerica MAS expresion_cadena .)
    IGUALQUE        reduce using rule 53 (expresion_numerica -> expresion_numerica MAS expresion_cadena .)
    PTCOMA          reduce using rule 53 (expresion_numerica -> expresion_numerica MAS expresion_cadena .)
    MAIN            reduce using rule 53 (expresion_numerica -> expresion_numerica MAS expresion_cadena .)
    PRINT           reduce using rule 53 (expresion_numerica -> expresion_numerica MAS expresion_cadena .)
    VAR             reduce using rule 53 (expresion_numerica -> expresion_numerica MAS expresion_cadena .)
    ID              reduce using rule 53 (expresion_numerica -> expresion_numerica MAS expresion_cadena .)
    MIENTRAS        reduce using rule 53 (expresion_numerica -> expresion_numerica MAS expresion_cadena .)
    IF              reduce using rule 53 (expresion_numerica -> expresion_numerica MAS expresion_cadena .)
    $end            reduce using rule 53 (expresion_numerica -> expresion_numerica MAS expresion_cadena .)
    LLAVDER         reduce using rule 53 (expresion_numerica -> expresion_numerica MAS expresion_cadena .)

  ! MAS             [ shift and go to state 76 ]


state 93

    (44) expresion_numerica -> expresion_numerica MENOS expresion_numerica .
    (43) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (44) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (45) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (46) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (47) expresion_numerica -> expresion_numerica . ELEVADO expresion_numerica
    (48) expresion_numerica -> expresion_numerica . MOD expresion_numerica
    (49) expresion_numerica -> expresion_numerica . MAS expresion_char
    (53) expresion_numerica -> expresion_numerica . MAS expresion_cadena
    (64) expresion_cadena -> expresion_numerica .

  ! reduce/reduce conflict for MAS resolved using rule 44 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    MAS             reduce using rule 44 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    MENOS           reduce using rule 44 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    MAYQUE          reduce using rule 44 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    MENQUE          reduce using rule 44 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    NIGUALQUE       reduce using rule 44 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    PARDER          reduce using rule 44 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    IGUALQUE        reduce using rule 44 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    PTCOMA          reduce using rule 44 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    MAIN            reduce using rule 44 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    PRINT           reduce using rule 44 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    VAR             reduce using rule 44 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    ID              reduce using rule 44 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    MIENTRAS        reduce using rule 44 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    IF              reduce using rule 44 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    $end            reduce using rule 44 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    LLAVDER         reduce using rule 44 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    ELEVADO         shift and go to state 71
    MOD             shift and go to state 72

  ! POR             [ reduce using rule 44 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 44 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .) ]
  ! ELEVADO         [ reduce using rule 44 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .) ]
  ! MOD             [ reduce using rule 44 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .) ]
  ! MAS             [ shift and go to state 67 ]
  ! MENOS           [ shift and go to state 68 ]
  ! MAS             [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]


state 94

    (45) expresion_numerica -> expresion_numerica POR expresion_numerica .
    (43) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (44) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (45) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (46) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (47) expresion_numerica -> expresion_numerica . ELEVADO expresion_numerica
    (48) expresion_numerica -> expresion_numerica . MOD expresion_numerica
    (49) expresion_numerica -> expresion_numerica . MAS expresion_char
    (53) expresion_numerica -> expresion_numerica . MAS expresion_cadena
    (64) expresion_cadena -> expresion_numerica .

  ! reduce/reduce conflict for MAS resolved using rule 45 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    MAS             reduce using rule 45 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    MENOS           reduce using rule 45 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    POR             reduce using rule 45 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    DIVIDIDO        reduce using rule 45 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    MOD             reduce using rule 45 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    MAYQUE          reduce using rule 45 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    MENQUE          reduce using rule 45 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    NIGUALQUE       reduce using rule 45 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    PARDER          reduce using rule 45 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    IGUALQUE        reduce using rule 45 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    PTCOMA          reduce using rule 45 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    MAIN            reduce using rule 45 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    PRINT           reduce using rule 45 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    VAR             reduce using rule 45 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    ID              reduce using rule 45 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    MIENTRAS        reduce using rule 45 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    IF              reduce using rule 45 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    $end            reduce using rule 45 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    LLAVDER         reduce using rule 45 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    ELEVADO         shift and go to state 71

  ! ELEVADO         [ reduce using rule 45 (expresion_numerica -> expresion_numerica POR expresion_numerica .) ]
  ! MAS             [ shift and go to state 67 ]
  ! MENOS           [ shift and go to state 68 ]
  ! POR             [ shift and go to state 69 ]
  ! DIVIDIDO        [ shift and go to state 70 ]
  ! MOD             [ shift and go to state 72 ]
  ! MAS             [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]


state 95

    (46) expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .
    (43) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (44) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (45) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (46) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (47) expresion_numerica -> expresion_numerica . ELEVADO expresion_numerica
    (48) expresion_numerica -> expresion_numerica . MOD expresion_numerica
    (49) expresion_numerica -> expresion_numerica . MAS expresion_char
    (53) expresion_numerica -> expresion_numerica . MAS expresion_cadena
    (64) expresion_cadena -> expresion_numerica .

  ! reduce/reduce conflict for MAS resolved using rule 46 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    MAS             reduce using rule 46 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    MENOS           reduce using rule 46 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    POR             reduce using rule 46 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    DIVIDIDO        reduce using rule 46 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    MOD             reduce using rule 46 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    MAYQUE          reduce using rule 46 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    MENQUE          reduce using rule 46 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    NIGUALQUE       reduce using rule 46 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    PARDER          reduce using rule 46 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    IGUALQUE        reduce using rule 46 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    PTCOMA          reduce using rule 46 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    MAIN            reduce using rule 46 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    PRINT           reduce using rule 46 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    VAR             reduce using rule 46 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    ID              reduce using rule 46 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    MIENTRAS        reduce using rule 46 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    IF              reduce using rule 46 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    $end            reduce using rule 46 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    LLAVDER         reduce using rule 46 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    ELEVADO         shift and go to state 71

  ! ELEVADO         [ reduce using rule 46 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .) ]
  ! MAS             [ shift and go to state 67 ]
  ! MENOS           [ shift and go to state 68 ]
  ! POR             [ shift and go to state 69 ]
  ! DIVIDIDO        [ shift and go to state 70 ]
  ! MOD             [ shift and go to state 72 ]
  ! MAS             [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]


state 96

    (47) expresion_numerica -> expresion_numerica ELEVADO expresion_numerica .
    (43) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (44) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (45) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (46) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (47) expresion_numerica -> expresion_numerica . ELEVADO expresion_numerica
    (48) expresion_numerica -> expresion_numerica . MOD expresion_numerica
    (49) expresion_numerica -> expresion_numerica . MAS expresion_char
    (53) expresion_numerica -> expresion_numerica . MAS expresion_cadena
    (64) expresion_cadena -> expresion_numerica .

  ! reduce/reduce conflict for MAS resolved using rule 47 (expresion_numerica -> expresion_numerica ELEVADO expresion_numerica .)
    MAS             reduce using rule 47 (expresion_numerica -> expresion_numerica ELEVADO expresion_numerica .)
    MENOS           reduce using rule 47 (expresion_numerica -> expresion_numerica ELEVADO expresion_numerica .)
    POR             reduce using rule 47 (expresion_numerica -> expresion_numerica ELEVADO expresion_numerica .)
    DIVIDIDO        reduce using rule 47 (expresion_numerica -> expresion_numerica ELEVADO expresion_numerica .)
    ELEVADO         reduce using rule 47 (expresion_numerica -> expresion_numerica ELEVADO expresion_numerica .)
    MOD             reduce using rule 47 (expresion_numerica -> expresion_numerica ELEVADO expresion_numerica .)
    MAYQUE          reduce using rule 47 (expresion_numerica -> expresion_numerica ELEVADO expresion_numerica .)
    MENQUE          reduce using rule 47 (expresion_numerica -> expresion_numerica ELEVADO expresion_numerica .)
    NIGUALQUE       reduce using rule 47 (expresion_numerica -> expresion_numerica ELEVADO expresion_numerica .)
    PARDER          reduce using rule 47 (expresion_numerica -> expresion_numerica ELEVADO expresion_numerica .)
    IGUALQUE        reduce using rule 47 (expresion_numerica -> expresion_numerica ELEVADO expresion_numerica .)
    PTCOMA          reduce using rule 47 (expresion_numerica -> expresion_numerica ELEVADO expresion_numerica .)
    MAIN            reduce using rule 47 (expresion_numerica -> expresion_numerica ELEVADO expresion_numerica .)
    PRINT           reduce using rule 47 (expresion_numerica -> expresion_numerica ELEVADO expresion_numerica .)
    VAR             reduce using rule 47 (expresion_numerica -> expresion_numerica ELEVADO expresion_numerica .)
    ID              reduce using rule 47 (expresion_numerica -> expresion_numerica ELEVADO expresion_numerica .)
    MIENTRAS        reduce using rule 47 (expresion_numerica -> expresion_numerica ELEVADO expresion_numerica .)
    IF              reduce using rule 47 (expresion_numerica -> expresion_numerica ELEVADO expresion_numerica .)
    $end            reduce using rule 47 (expresion_numerica -> expresion_numerica ELEVADO expresion_numerica .)
    LLAVDER         reduce using rule 47 (expresion_numerica -> expresion_numerica ELEVADO expresion_numerica .)

  ! MAS             [ shift and go to state 67 ]
  ! MENOS           [ shift and go to state 68 ]
  ! POR             [ shift and go to state 69 ]
  ! DIVIDIDO        [ shift and go to state 70 ]
  ! ELEVADO         [ shift and go to state 71 ]
  ! MOD             [ shift and go to state 72 ]
  ! MAS             [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]


state 97

    (48) expresion_numerica -> expresion_numerica MOD expresion_numerica .
    (43) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (44) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (45) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (46) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (47) expresion_numerica -> expresion_numerica . ELEVADO expresion_numerica
    (48) expresion_numerica -> expresion_numerica . MOD expresion_numerica
    (49) expresion_numerica -> expresion_numerica . MAS expresion_char
    (53) expresion_numerica -> expresion_numerica . MAS expresion_cadena
    (64) expresion_cadena -> expresion_numerica .

  ! reduce/reduce conflict for MAS resolved using rule 48 (expresion_numerica -> expresion_numerica MOD expresion_numerica .)
    MAS             reduce using rule 48 (expresion_numerica -> expresion_numerica MOD expresion_numerica .)
    MENOS           reduce using rule 48 (expresion_numerica -> expresion_numerica MOD expresion_numerica .)
    POR             reduce using rule 48 (expresion_numerica -> expresion_numerica MOD expresion_numerica .)
    DIVIDIDO        reduce using rule 48 (expresion_numerica -> expresion_numerica MOD expresion_numerica .)
    MOD             reduce using rule 48 (expresion_numerica -> expresion_numerica MOD expresion_numerica .)
    MAYQUE          reduce using rule 48 (expresion_numerica -> expresion_numerica MOD expresion_numerica .)
    MENQUE          reduce using rule 48 (expresion_numerica -> expresion_numerica MOD expresion_numerica .)
    NIGUALQUE       reduce using rule 48 (expresion_numerica -> expresion_numerica MOD expresion_numerica .)
    PARDER          reduce using rule 48 (expresion_numerica -> expresion_numerica MOD expresion_numerica .)
    IGUALQUE        reduce using rule 48 (expresion_numerica -> expresion_numerica MOD expresion_numerica .)
    PTCOMA          reduce using rule 48 (expresion_numerica -> expresion_numerica MOD expresion_numerica .)
    MAIN            reduce using rule 48 (expresion_numerica -> expresion_numerica MOD expresion_numerica .)
    PRINT           reduce using rule 48 (expresion_numerica -> expresion_numerica MOD expresion_numerica .)
    VAR             reduce using rule 48 (expresion_numerica -> expresion_numerica MOD expresion_numerica .)
    ID              reduce using rule 48 (expresion_numerica -> expresion_numerica MOD expresion_numerica .)
    MIENTRAS        reduce using rule 48 (expresion_numerica -> expresion_numerica MOD expresion_numerica .)
    IF              reduce using rule 48 (expresion_numerica -> expresion_numerica MOD expresion_numerica .)
    $end            reduce using rule 48 (expresion_numerica -> expresion_numerica MOD expresion_numerica .)
    LLAVDER         reduce using rule 48 (expresion_numerica -> expresion_numerica MOD expresion_numerica .)
    ELEVADO         shift and go to state 71

  ! ELEVADO         [ reduce using rule 48 (expresion_numerica -> expresion_numerica MOD expresion_numerica .) ]
  ! MAS             [ shift and go to state 67 ]
  ! MENOS           [ shift and go to state 68 ]
  ! POR             [ shift and go to state 69 ]
  ! DIVIDIDO        [ shift and go to state 70 ]
  ! MOD             [ shift and go to state 72 ]
  ! MAS             [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]


state 98

    (65) expresion_logica -> expresion_numerica MAYQUE expresion_numerica .
    (43) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (44) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (45) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (46) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (47) expresion_numerica -> expresion_numerica . ELEVADO expresion_numerica
    (48) expresion_numerica -> expresion_numerica . MOD expresion_numerica
    (49) expresion_numerica -> expresion_numerica . MAS expresion_char
    (53) expresion_numerica -> expresion_numerica . MAS expresion_cadena
    (64) expresion_cadena -> expresion_numerica .

  ! shift/reduce conflict for MAS resolved as shift
    PARDER          reduce using rule 65 (expresion_logica -> expresion_numerica MAYQUE expresion_numerica .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    ELEVADO         shift and go to state 71
    MOD             shift and go to state 72

  ! MAS             [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]


state 99

    (66) expresion_logica -> expresion_numerica MENQUE expresion_numerica .
    (43) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (44) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (45) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (46) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (47) expresion_numerica -> expresion_numerica . ELEVADO expresion_numerica
    (48) expresion_numerica -> expresion_numerica . MOD expresion_numerica
    (49) expresion_numerica -> expresion_numerica . MAS expresion_char
    (53) expresion_numerica -> expresion_numerica . MAS expresion_cadena
    (64) expresion_cadena -> expresion_numerica .

  ! shift/reduce conflict for MAS resolved as shift
    PARDER          reduce using rule 66 (expresion_logica -> expresion_numerica MENQUE expresion_numerica .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    ELEVADO         shift and go to state 71
    MOD             shift and go to state 72

  ! MAS             [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]


state 100

    (68) expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica .
    (43) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (44) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (45) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (46) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (47) expresion_numerica -> expresion_numerica . ELEVADO expresion_numerica
    (48) expresion_numerica -> expresion_numerica . MOD expresion_numerica
    (49) expresion_numerica -> expresion_numerica . MAS expresion_char
    (53) expresion_numerica -> expresion_numerica . MAS expresion_cadena
    (64) expresion_cadena -> expresion_numerica .

  ! shift/reduce conflict for MAS resolved as shift
    PARDER          reduce using rule 68 (expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica .)
    MAS             shift and go to state 67
    MENOS           shift and go to state 68
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    ELEVADO         shift and go to state 71
    MOD             shift and go to state 72

  ! MAS             [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]


state 101

    (50) expresion_numerica -> expresion_cadena MAS expresion_cadena .
    (50) expresion_numerica -> expresion_cadena . MAS expresion_cadena
    (51) expresion_numerica -> expresion_cadena . MAS expresion_numerica
    (52) expresion_numerica -> expresion_cadena . MAS expresion_char

    MAS             reduce using rule 50 (expresion_numerica -> expresion_cadena MAS expresion_cadena .)
    MENOS           reduce using rule 50 (expresion_numerica -> expresion_cadena MAS expresion_cadena .)
    POR             reduce using rule 50 (expresion_numerica -> expresion_cadena MAS expresion_cadena .)
    DIVIDIDO        reduce using rule 50 (expresion_numerica -> expresion_cadena MAS expresion_cadena .)
    ELEVADO         reduce using rule 50 (expresion_numerica -> expresion_cadena MAS expresion_cadena .)
    MOD             reduce using rule 50 (expresion_numerica -> expresion_cadena MAS expresion_cadena .)
    MAYQUE          reduce using rule 50 (expresion_numerica -> expresion_cadena MAS expresion_cadena .)
    MENQUE          reduce using rule 50 (expresion_numerica -> expresion_cadena MAS expresion_cadena .)
    NIGUALQUE       reduce using rule 50 (expresion_numerica -> expresion_cadena MAS expresion_cadena .)
    PARDER          reduce using rule 50 (expresion_numerica -> expresion_cadena MAS expresion_cadena .)
    IGUALQUE        reduce using rule 50 (expresion_numerica -> expresion_cadena MAS expresion_cadena .)
    PTCOMA          reduce using rule 50 (expresion_numerica -> expresion_cadena MAS expresion_cadena .)
    MAIN            reduce using rule 50 (expresion_numerica -> expresion_cadena MAS expresion_cadena .)
    PRINT           reduce using rule 50 (expresion_numerica -> expresion_cadena MAS expresion_cadena .)
    VAR             reduce using rule 50 (expresion_numerica -> expresion_cadena MAS expresion_cadena .)
    ID              reduce using rule 50 (expresion_numerica -> expresion_cadena MAS expresion_cadena .)
    MIENTRAS        reduce using rule 50 (expresion_numerica -> expresion_cadena MAS expresion_cadena .)
    IF              reduce using rule 50 (expresion_numerica -> expresion_cadena MAS expresion_cadena .)
    $end            reduce using rule 50 (expresion_numerica -> expresion_cadena MAS expresion_cadena .)
    LLAVDER         reduce using rule 50 (expresion_numerica -> expresion_cadena MAS expresion_cadena .)

  ! MAS             [ shift and go to state 76 ]


state 102

    (51) expresion_numerica -> expresion_cadena MAS expresion_numerica .
    (64) expresion_cadena -> expresion_numerica .
    (43) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (44) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (45) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (46) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (47) expresion_numerica -> expresion_numerica . ELEVADO expresion_numerica
    (48) expresion_numerica -> expresion_numerica . MOD expresion_numerica
    (49) expresion_numerica -> expresion_numerica . MAS expresion_char
    (53) expresion_numerica -> expresion_numerica . MAS expresion_cadena

  ! reduce/reduce conflict for MAS resolved using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
  ! reduce/reduce conflict for MENOS resolved using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
  ! reduce/reduce conflict for POR resolved using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
  ! reduce/reduce conflict for DIVIDIDO resolved using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
  ! reduce/reduce conflict for ELEVADO resolved using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
  ! reduce/reduce conflict for MOD resolved using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
  ! reduce/reduce conflict for MAYQUE resolved using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
  ! reduce/reduce conflict for MENQUE resolved using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
  ! reduce/reduce conflict for NIGUALQUE resolved using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
  ! reduce/reduce conflict for PARDER resolved using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
  ! reduce/reduce conflict for IGUALQUE resolved using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
  ! reduce/reduce conflict for PTCOMA resolved using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
  ! reduce/reduce conflict for MAIN resolved using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
  ! reduce/reduce conflict for PRINT resolved using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
  ! reduce/reduce conflict for VAR resolved using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
  ! reduce/reduce conflict for ID resolved using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
  ! reduce/reduce conflict for IF resolved using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
  ! reduce/reduce conflict for $end resolved using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
  ! reduce/reduce conflict for LLAVDER resolved using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
    MAS             reduce using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
    MENOS           reduce using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
    MAYQUE          reduce using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
    MENQUE          reduce using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
    NIGUALQUE       reduce using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
    PARDER          reduce using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
    IGUALQUE        reduce using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
    PTCOMA          reduce using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
    MAIN            reduce using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
    PRINT           reduce using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
    VAR             reduce using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
    ID              reduce using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
    MIENTRAS        reduce using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
    IF              reduce using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
    $end            reduce using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
    LLAVDER         reduce using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .)
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    ELEVADO         shift and go to state 71
    MOD             shift and go to state 72

  ! POR             [ reduce using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .) ]
  ! ELEVADO         [ reduce using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .) ]
  ! MOD             [ reduce using rule 51 (expresion_numerica -> expresion_cadena MAS expresion_numerica .) ]
  ! MAS             [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! MENOS           [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! POR             [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! ELEVADO         [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! MOD             [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! MAYQUE          [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! MENQUE          [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! NIGUALQUE       [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! PARDER          [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! IGUALQUE        [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! PTCOMA          [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! MAIN            [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! PRINT           [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! VAR             [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! ID              [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! MIENTRAS        [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! IF              [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! $end            [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! LLAVDER         [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! MAS             [ shift and go to state 67 ]
  ! MENOS           [ shift and go to state 68 ]


state 103

    (52) expresion_numerica -> expresion_cadena MAS expresion_char .
    (54) expresion_numerica -> expresion_char . MAS expresion_char
    (55) expresion_numerica -> expresion_char . MAS expresion_cadena
    (56) expresion_numerica -> expresion_char . MAS expresion_numerica

    MAS             reduce using rule 52 (expresion_numerica -> expresion_cadena MAS expresion_char .)
    MENOS           reduce using rule 52 (expresion_numerica -> expresion_cadena MAS expresion_char .)
    POR             reduce using rule 52 (expresion_numerica -> expresion_cadena MAS expresion_char .)
    DIVIDIDO        reduce using rule 52 (expresion_numerica -> expresion_cadena MAS expresion_char .)
    ELEVADO         reduce using rule 52 (expresion_numerica -> expresion_cadena MAS expresion_char .)
    MOD             reduce using rule 52 (expresion_numerica -> expresion_cadena MAS expresion_char .)
    MAYQUE          reduce using rule 52 (expresion_numerica -> expresion_cadena MAS expresion_char .)
    MENQUE          reduce using rule 52 (expresion_numerica -> expresion_cadena MAS expresion_char .)
    NIGUALQUE       reduce using rule 52 (expresion_numerica -> expresion_cadena MAS expresion_char .)
    PARDER          reduce using rule 52 (expresion_numerica -> expresion_cadena MAS expresion_char .)
    IGUALQUE        reduce using rule 52 (expresion_numerica -> expresion_cadena MAS expresion_char .)
    PTCOMA          reduce using rule 52 (expresion_numerica -> expresion_cadena MAS expresion_char .)
    MAIN            reduce using rule 52 (expresion_numerica -> expresion_cadena MAS expresion_char .)
    PRINT           reduce using rule 52 (expresion_numerica -> expresion_cadena MAS expresion_char .)
    VAR             reduce using rule 52 (expresion_numerica -> expresion_cadena MAS expresion_char .)
    ID              reduce using rule 52 (expresion_numerica -> expresion_cadena MAS expresion_char .)
    MIENTRAS        reduce using rule 52 (expresion_numerica -> expresion_cadena MAS expresion_char .)
    IF              reduce using rule 52 (expresion_numerica -> expresion_cadena MAS expresion_char .)
    $end            reduce using rule 52 (expresion_numerica -> expresion_cadena MAS expresion_char .)
    LLAVDER         reduce using rule 52 (expresion_numerica -> expresion_cadena MAS expresion_char .)

  ! MAS             [ shift and go to state 77 ]


state 104

    (54) expresion_numerica -> expresion_char MAS expresion_char .
    (54) expresion_numerica -> expresion_char . MAS expresion_char
    (55) expresion_numerica -> expresion_char . MAS expresion_cadena
    (56) expresion_numerica -> expresion_char . MAS expresion_numerica

    MAS             reduce using rule 54 (expresion_numerica -> expresion_char MAS expresion_char .)
    MENOS           reduce using rule 54 (expresion_numerica -> expresion_char MAS expresion_char .)
    POR             reduce using rule 54 (expresion_numerica -> expresion_char MAS expresion_char .)
    DIVIDIDO        reduce using rule 54 (expresion_numerica -> expresion_char MAS expresion_char .)
    ELEVADO         reduce using rule 54 (expresion_numerica -> expresion_char MAS expresion_char .)
    MOD             reduce using rule 54 (expresion_numerica -> expresion_char MAS expresion_char .)
    MAYQUE          reduce using rule 54 (expresion_numerica -> expresion_char MAS expresion_char .)
    MENQUE          reduce using rule 54 (expresion_numerica -> expresion_char MAS expresion_char .)
    NIGUALQUE       reduce using rule 54 (expresion_numerica -> expresion_char MAS expresion_char .)
    PARDER          reduce using rule 54 (expresion_numerica -> expresion_char MAS expresion_char .)
    IGUALQUE        reduce using rule 54 (expresion_numerica -> expresion_char MAS expresion_char .)
    PTCOMA          reduce using rule 54 (expresion_numerica -> expresion_char MAS expresion_char .)
    MAIN            reduce using rule 54 (expresion_numerica -> expresion_char MAS expresion_char .)
    PRINT           reduce using rule 54 (expresion_numerica -> expresion_char MAS expresion_char .)
    VAR             reduce using rule 54 (expresion_numerica -> expresion_char MAS expresion_char .)
    ID              reduce using rule 54 (expresion_numerica -> expresion_char MAS expresion_char .)
    MIENTRAS        reduce using rule 54 (expresion_numerica -> expresion_char MAS expresion_char .)
    IF              reduce using rule 54 (expresion_numerica -> expresion_char MAS expresion_char .)
    $end            reduce using rule 54 (expresion_numerica -> expresion_char MAS expresion_char .)
    LLAVDER         reduce using rule 54 (expresion_numerica -> expresion_char MAS expresion_char .)

  ! MAS             [ shift and go to state 77 ]


state 105

    (55) expresion_numerica -> expresion_char MAS expresion_cadena .
    (50) expresion_numerica -> expresion_cadena . MAS expresion_cadena
    (51) expresion_numerica -> expresion_cadena . MAS expresion_numerica
    (52) expresion_numerica -> expresion_cadena . MAS expresion_char

    MAS             reduce using rule 55 (expresion_numerica -> expresion_char MAS expresion_cadena .)
    MENOS           reduce using rule 55 (expresion_numerica -> expresion_char MAS expresion_cadena .)
    POR             reduce using rule 55 (expresion_numerica -> expresion_char MAS expresion_cadena .)
    DIVIDIDO        reduce using rule 55 (expresion_numerica -> expresion_char MAS expresion_cadena .)
    ELEVADO         reduce using rule 55 (expresion_numerica -> expresion_char MAS expresion_cadena .)
    MOD             reduce using rule 55 (expresion_numerica -> expresion_char MAS expresion_cadena .)
    MAYQUE          reduce using rule 55 (expresion_numerica -> expresion_char MAS expresion_cadena .)
    MENQUE          reduce using rule 55 (expresion_numerica -> expresion_char MAS expresion_cadena .)
    NIGUALQUE       reduce using rule 55 (expresion_numerica -> expresion_char MAS expresion_cadena .)
    PARDER          reduce using rule 55 (expresion_numerica -> expresion_char MAS expresion_cadena .)
    IGUALQUE        reduce using rule 55 (expresion_numerica -> expresion_char MAS expresion_cadena .)
    PTCOMA          reduce using rule 55 (expresion_numerica -> expresion_char MAS expresion_cadena .)
    MAIN            reduce using rule 55 (expresion_numerica -> expresion_char MAS expresion_cadena .)
    PRINT           reduce using rule 55 (expresion_numerica -> expresion_char MAS expresion_cadena .)
    VAR             reduce using rule 55 (expresion_numerica -> expresion_char MAS expresion_cadena .)
    ID              reduce using rule 55 (expresion_numerica -> expresion_char MAS expresion_cadena .)
    MIENTRAS        reduce using rule 55 (expresion_numerica -> expresion_char MAS expresion_cadena .)
    IF              reduce using rule 55 (expresion_numerica -> expresion_char MAS expresion_cadena .)
    $end            reduce using rule 55 (expresion_numerica -> expresion_char MAS expresion_cadena .)
    LLAVDER         reduce using rule 55 (expresion_numerica -> expresion_char MAS expresion_cadena .)

  ! MAS             [ shift and go to state 76 ]


state 106

    (56) expresion_numerica -> expresion_char MAS expresion_numerica .
    (64) expresion_cadena -> expresion_numerica .
    (43) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (44) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (45) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (46) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (47) expresion_numerica -> expresion_numerica . ELEVADO expresion_numerica
    (48) expresion_numerica -> expresion_numerica . MOD expresion_numerica
    (49) expresion_numerica -> expresion_numerica . MAS expresion_char
    (53) expresion_numerica -> expresion_numerica . MAS expresion_cadena

  ! reduce/reduce conflict for MAS resolved using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
  ! reduce/reduce conflict for MENOS resolved using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
  ! reduce/reduce conflict for POR resolved using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
  ! reduce/reduce conflict for DIVIDIDO resolved using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
  ! reduce/reduce conflict for ELEVADO resolved using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
  ! reduce/reduce conflict for MOD resolved using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
  ! reduce/reduce conflict for MAYQUE resolved using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
  ! reduce/reduce conflict for MENQUE resolved using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
  ! reduce/reduce conflict for NIGUALQUE resolved using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
  ! reduce/reduce conflict for PARDER resolved using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
  ! reduce/reduce conflict for IGUALQUE resolved using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
  ! reduce/reduce conflict for PTCOMA resolved using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
  ! reduce/reduce conflict for MAIN resolved using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
  ! reduce/reduce conflict for PRINT resolved using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
  ! reduce/reduce conflict for VAR resolved using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
  ! reduce/reduce conflict for ID resolved using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
  ! reduce/reduce conflict for MIENTRAS resolved using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
  ! reduce/reduce conflict for IF resolved using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
  ! reduce/reduce conflict for $end resolved using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
  ! reduce/reduce conflict for LLAVDER resolved using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
    MAS             reduce using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
    MENOS           reduce using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
    MAYQUE          reduce using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
    MENQUE          reduce using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
    NIGUALQUE       reduce using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
    PARDER          reduce using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
    IGUALQUE        reduce using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
    PTCOMA          reduce using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
    MAIN            reduce using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
    PRINT           reduce using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
    VAR             reduce using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
    ID              reduce using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
    MIENTRAS        reduce using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
    IF              reduce using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
    $end            reduce using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
    LLAVDER         reduce using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .)
    POR             shift and go to state 69
    DIVIDIDO        shift and go to state 70
    ELEVADO         shift and go to state 71
    MOD             shift and go to state 72

  ! POR             [ reduce using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .) ]
  ! ELEVADO         [ reduce using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .) ]
  ! MOD             [ reduce using rule 56 (expresion_numerica -> expresion_char MAS expresion_numerica .) ]
  ! MAS             [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! MENOS           [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! POR             [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! ELEVADO         [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! MOD             [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! MAYQUE          [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! MENQUE          [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! NIGUALQUE       [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! PARDER          [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! IGUALQUE        [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! PTCOMA          [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! MAIN            [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! PRINT           [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! VAR             [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! ID              [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! MIENTRAS        [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! IF              [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! $end            [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! LLAVDER         [ reduce using rule 64 (expresion_cadena -> expresion_numerica .) ]
  ! MAS             [ shift and go to state 67 ]
  ! MENOS           [ shift and go to state 68 ]


state 107

    (67) expresion_logica -> asign_def_expresion_general IGUALQUE asign_def_expresion_general .

    PARDER          reduce using rule 67 (expresion_logica -> asign_def_expresion_general IGUALQUE asign_def_expresion_general .)


state 108

    (34) def_asig_instr -> VAR ID IGUAL asign_def_expresion_general def_instr_prima .

    MAIN            reduce using rule 34 (def_asig_instr -> VAR ID IGUAL asign_def_expresion_general def_instr_prima .)
    PRINT           reduce using rule 34 (def_asig_instr -> VAR ID IGUAL asign_def_expresion_general def_instr_prima .)
    VAR             reduce using rule 34 (def_asig_instr -> VAR ID IGUAL asign_def_expresion_general def_instr_prima .)
    ID              reduce using rule 34 (def_asig_instr -> VAR ID IGUAL asign_def_expresion_general def_instr_prima .)
    MIENTRAS        reduce using rule 34 (def_asig_instr -> VAR ID IGUAL asign_def_expresion_general def_instr_prima .)
    IF              reduce using rule 34 (def_asig_instr -> VAR ID IGUAL asign_def_expresion_general def_instr_prima .)
    $end            reduce using rule 34 (def_asig_instr -> VAR ID IGUAL asign_def_expresion_general def_instr_prima .)
    LLAVDER         reduce using rule 34 (def_asig_instr -> VAR ID IGUAL asign_def_expresion_general def_instr_prima .)


state 109

    (40) mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ . instrucciones LLAVDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instrucciones -> . empty
    (5) instruccion -> . func_main
    (6) instruccion -> . imprimir_instr
    (7) instruccion -> . definicion_instr
    (8) instruccion -> . asignacion_instr
    (9) instruccion -> . def_asig_instr
    (10) instruccion -> . mientras_instr
    (11) instruccion -> . if_instr
    (12) instruccion -> . if_else_instr
    (27) empty -> .
    (13) func_main -> . MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (14) imprimir_instr -> . PRINT PARIZQ print_expresion_general PARDER def_instr_prima
    (24) definicion_instr -> . VAR ID def_instr_prima
    (28) asignacion_instr -> . ID IGUAL asign_expresion_general def_instr_prima
    (34) def_asig_instr -> . VAR ID IGUAL asign_def_expresion_general def_instr_prima
    (40) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (41) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (42) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    LLAVDER         reduce using rule 27 (empty -> .)
    MAIN            shift and go to state 13
    PRINT           shift and go to state 14
    VAR             shift and go to state 15
    ID              shift and go to state 16
    MIENTRAS        shift and go to state 17
    IF              shift and go to state 18

  ! MAIN            [ reduce using rule 27 (empty -> .) ]
  ! PRINT           [ reduce using rule 27 (empty -> .) ]
  ! VAR             [ reduce using rule 27 (empty -> .) ]
  ! ID              [ reduce using rule 27 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 27 (empty -> .) ]
  ! IF              [ reduce using rule 27 (empty -> .) ]

    instrucciones                  shift and go to state 112
    instruccion                    shift and go to state 3
    empty                          shift and go to state 4
    func_main                      shift and go to state 5
    imprimir_instr                 shift and go to state 6
    definicion_instr               shift and go to state 7
    asignacion_instr               shift and go to state 8
    def_asig_instr                 shift and go to state 9
    mientras_instr                 shift and go to state 10
    if_instr                       shift and go to state 11
    if_else_instr                  shift and go to state 12

state 110

    (41) if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ . instrucciones LLAVDER
    (42) if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ . instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instrucciones -> . empty
    (5) instruccion -> . func_main
    (6) instruccion -> . imprimir_instr
    (7) instruccion -> . definicion_instr
    (8) instruccion -> . asignacion_instr
    (9) instruccion -> . def_asig_instr
    (10) instruccion -> . mientras_instr
    (11) instruccion -> . if_instr
    (12) instruccion -> . if_else_instr
    (27) empty -> .
    (13) func_main -> . MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (14) imprimir_instr -> . PRINT PARIZQ print_expresion_general PARDER def_instr_prima
    (24) definicion_instr -> . VAR ID def_instr_prima
    (28) asignacion_instr -> . ID IGUAL asign_expresion_general def_instr_prima
    (34) def_asig_instr -> . VAR ID IGUAL asign_def_expresion_general def_instr_prima
    (40) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (41) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (42) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    LLAVDER         reduce using rule 27 (empty -> .)
    MAIN            shift and go to state 13
    PRINT           shift and go to state 14
    VAR             shift and go to state 15
    ID              shift and go to state 16
    MIENTRAS        shift and go to state 17
    IF              shift and go to state 18

  ! MAIN            [ reduce using rule 27 (empty -> .) ]
  ! PRINT           [ reduce using rule 27 (empty -> .) ]
  ! VAR             [ reduce using rule 27 (empty -> .) ]
  ! ID              [ reduce using rule 27 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 27 (empty -> .) ]
  ! IF              [ reduce using rule 27 (empty -> .) ]

    instrucciones                  shift and go to state 113
    instruccion                    shift and go to state 3
    empty                          shift and go to state 4
    func_main                      shift and go to state 5
    imprimir_instr                 shift and go to state 6
    definicion_instr               shift and go to state 7
    asignacion_instr               shift and go to state 8
    def_asig_instr                 shift and go to state 9
    mientras_instr                 shift and go to state 10
    if_instr                       shift and go to state 11
    if_else_instr                  shift and go to state 12

state 111

    (13) func_main -> MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .

    MAIN            reduce using rule 13 (func_main -> MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    PRINT           reduce using rule 13 (func_main -> MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    VAR             reduce using rule 13 (func_main -> MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 13 (func_main -> MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    MIENTRAS        reduce using rule 13 (func_main -> MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 13 (func_main -> MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 13 (func_main -> MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 13 (func_main -> MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)


state 112

    (40) mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones . LLAVDER
    (2) instrucciones -> instrucciones . instruccion
    (5) instruccion -> . func_main
    (6) instruccion -> . imprimir_instr
    (7) instruccion -> . definicion_instr
    (8) instruccion -> . asignacion_instr
    (9) instruccion -> . def_asig_instr
    (10) instruccion -> . mientras_instr
    (11) instruccion -> . if_instr
    (12) instruccion -> . if_else_instr
    (13) func_main -> . MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (14) imprimir_instr -> . PRINT PARIZQ print_expresion_general PARDER def_instr_prima
    (24) definicion_instr -> . VAR ID def_instr_prima
    (28) asignacion_instr -> . ID IGUAL asign_expresion_general def_instr_prima
    (34) def_asig_instr -> . VAR ID IGUAL asign_def_expresion_general def_instr_prima
    (40) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (41) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (42) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    LLAVDER         shift and go to state 114
    MAIN            shift and go to state 13
    PRINT           shift and go to state 14
    VAR             shift and go to state 15
    ID              shift and go to state 16
    MIENTRAS        shift and go to state 17
    IF              shift and go to state 18

    instruccion                    shift and go to state 19
    func_main                      shift and go to state 5
    imprimir_instr                 shift and go to state 6
    definicion_instr               shift and go to state 7
    asignacion_instr               shift and go to state 8
    def_asig_instr                 shift and go to state 9
    mientras_instr                 shift and go to state 10
    if_instr                       shift and go to state 11
    if_else_instr                  shift and go to state 12

state 113

    (41) if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones . LLAVDER
    (42) if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones . LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (2) instrucciones -> instrucciones . instruccion
    (5) instruccion -> . func_main
    (6) instruccion -> . imprimir_instr
    (7) instruccion -> . definicion_instr
    (8) instruccion -> . asignacion_instr
    (9) instruccion -> . def_asig_instr
    (10) instruccion -> . mientras_instr
    (11) instruccion -> . if_instr
    (12) instruccion -> . if_else_instr
    (13) func_main -> . MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (14) imprimir_instr -> . PRINT PARIZQ print_expresion_general PARDER def_instr_prima
    (24) definicion_instr -> . VAR ID def_instr_prima
    (28) asignacion_instr -> . ID IGUAL asign_expresion_general def_instr_prima
    (34) def_asig_instr -> . VAR ID IGUAL asign_def_expresion_general def_instr_prima
    (40) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (41) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (42) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    LLAVDER         shift and go to state 115
    MAIN            shift and go to state 13
    PRINT           shift and go to state 14
    VAR             shift and go to state 15
    ID              shift and go to state 16
    MIENTRAS        shift and go to state 17
    IF              shift and go to state 18

    instruccion                    shift and go to state 19
    func_main                      shift and go to state 5
    imprimir_instr                 shift and go to state 6
    definicion_instr               shift and go to state 7
    asignacion_instr               shift and go to state 8
    def_asig_instr                 shift and go to state 9
    mientras_instr                 shift and go to state 10
    if_instr                       shift and go to state 11
    if_else_instr                  shift and go to state 12

state 114

    (40) mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .

    MAIN            reduce using rule 40 (mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    PRINT           reduce using rule 40 (mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    VAR             reduce using rule 40 (mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 40 (mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    MIENTRAS        reduce using rule 40 (mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 40 (mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 40 (mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 40 (mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)


state 115

    (41) if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .
    (42) if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER . ELSE LLAVIZQ instrucciones LLAVDER

    MAIN            reduce using rule 41 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    PRINT           reduce using rule 41 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    VAR             reduce using rule 41 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 41 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    MIENTRAS        reduce using rule 41 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 41 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 41 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 41 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    ELSE            shift and go to state 116


state 116

    (42) if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 117


state 117

    (42) if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ . instrucciones LLAVDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instrucciones -> . empty
    (5) instruccion -> . func_main
    (6) instruccion -> . imprimir_instr
    (7) instruccion -> . definicion_instr
    (8) instruccion -> . asignacion_instr
    (9) instruccion -> . def_asig_instr
    (10) instruccion -> . mientras_instr
    (11) instruccion -> . if_instr
    (12) instruccion -> . if_else_instr
    (27) empty -> .
    (13) func_main -> . MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (14) imprimir_instr -> . PRINT PARIZQ print_expresion_general PARDER def_instr_prima
    (24) definicion_instr -> . VAR ID def_instr_prima
    (28) asignacion_instr -> . ID IGUAL asign_expresion_general def_instr_prima
    (34) def_asig_instr -> . VAR ID IGUAL asign_def_expresion_general def_instr_prima
    (40) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (41) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (42) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

  ! shift/reduce conflict for MAIN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    LLAVDER         reduce using rule 27 (empty -> .)
    MAIN            shift and go to state 13
    PRINT           shift and go to state 14
    VAR             shift and go to state 15
    ID              shift and go to state 16
    MIENTRAS        shift and go to state 17
    IF              shift and go to state 18

  ! MAIN            [ reduce using rule 27 (empty -> .) ]
  ! PRINT           [ reduce using rule 27 (empty -> .) ]
  ! VAR             [ reduce using rule 27 (empty -> .) ]
  ! ID              [ reduce using rule 27 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 27 (empty -> .) ]
  ! IF              [ reduce using rule 27 (empty -> .) ]

    instrucciones                  shift and go to state 118
    instruccion                    shift and go to state 3
    empty                          shift and go to state 4
    func_main                      shift and go to state 5
    imprimir_instr                 shift and go to state 6
    definicion_instr               shift and go to state 7
    asignacion_instr               shift and go to state 8
    def_asig_instr                 shift and go to state 9
    mientras_instr                 shift and go to state 10
    if_instr                       shift and go to state 11
    if_else_instr                  shift and go to state 12

state 118

    (42) if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones . LLAVDER
    (2) instrucciones -> instrucciones . instruccion
    (5) instruccion -> . func_main
    (6) instruccion -> . imprimir_instr
    (7) instruccion -> . definicion_instr
    (8) instruccion -> . asignacion_instr
    (9) instruccion -> . def_asig_instr
    (10) instruccion -> . mientras_instr
    (11) instruccion -> . if_instr
    (12) instruccion -> . if_else_instr
    (13) func_main -> . MAIN PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (14) imprimir_instr -> . PRINT PARIZQ print_expresion_general PARDER def_instr_prima
    (24) definicion_instr -> . VAR ID def_instr_prima
    (28) asignacion_instr -> . ID IGUAL asign_expresion_general def_instr_prima
    (34) def_asig_instr -> . VAR ID IGUAL asign_def_expresion_general def_instr_prima
    (40) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (41) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (42) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    LLAVDER         shift and go to state 119
    MAIN            shift and go to state 13
    PRINT           shift and go to state 14
    VAR             shift and go to state 15
    ID              shift and go to state 16
    MIENTRAS        shift and go to state 17
    IF              shift and go to state 18

    instruccion                    shift and go to state 19
    func_main                      shift and go to state 5
    imprimir_instr                 shift and go to state 6
    definicion_instr               shift and go to state 7
    asignacion_instr               shift and go to state 8
    def_asig_instr                 shift and go to state 9
    mientras_instr                 shift and go to state 10
    if_instr                       shift and go to state 11
    if_else_instr                  shift and go to state 12

state 119

    (42) if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .

    MAIN            reduce using rule 42 (if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    PRINT           reduce using rule 42 (if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    VAR             reduce using rule 42 (if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 42 (if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    MIENTRAS        reduce using rule 42 (if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 42 (if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 42 (if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 42 (if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAIN in state 0 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 0 resolved as shift
WARNING: shift/reduce conflict for VAR in state 0 resolved as shift
WARNING: shift/reduce conflict for ID in state 0 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 0 resolved as shift
WARNING: shift/reduce conflict for IF in state 0 resolved as shift
WARNING: shift/reduce conflict for MAS in state 29 resolved as shift
WARNING: shift/reduce conflict for MAS in state 49 resolved as shift
WARNING: shift/reduce conflict for MAS in state 55 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 61 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 61 resolved as shift
WARNING: shift/reduce conflict for VAR in state 61 resolved as shift
WARNING: shift/reduce conflict for ID in state 61 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 61 resolved as shift
WARNING: shift/reduce conflict for IF in state 61 resolved as shift
WARNING: shift/reduce conflict for MAS in state 62 resolved as shift
WARNING: shift/reduce conflict for MAS in state 81 resolved as shift
WARNING: shift/reduce conflict for POR in state 90 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 90 resolved as shift
WARNING: shift/reduce conflict for ELEVADO in state 90 resolved as shift
WARNING: shift/reduce conflict for MOD in state 90 resolved as shift
WARNING: shift/reduce conflict for MAS in state 98 resolved as shift
WARNING: shift/reduce conflict for MAS in state 99 resolved as shift
WARNING: shift/reduce conflict for MAS in state 100 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 109 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 109 resolved as shift
WARNING: shift/reduce conflict for VAR in state 109 resolved as shift
WARNING: shift/reduce conflict for ID in state 109 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 109 resolved as shift
WARNING: shift/reduce conflict for IF in state 109 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 110 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 110 resolved as shift
WARNING: shift/reduce conflict for VAR in state 110 resolved as shift
WARNING: shift/reduce conflict for ID in state 110 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 110 resolved as shift
WARNING: shift/reduce conflict for IF in state 110 resolved as shift
WARNING: shift/reduce conflict for MAIN in state 117 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 117 resolved as shift
WARNING: shift/reduce conflict for VAR in state 117 resolved as shift
WARNING: shift/reduce conflict for ID in state 117 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 117 resolved as shift
WARNING: shift/reduce conflict for IF in state 117 resolved as shift
WARNING: reduce/reduce conflict in state 29 resolved using rule (print_expresion_general -> expresion_numerica)
WARNING: rejected rule (expresion_cadena -> expresion_numerica) in state 29
WARNING: reduce/reduce conflict in state 29 resolved using rule (asign_def_expresion_general -> expresion_numerica)
WARNING: rejected rule (expresion_cadena -> expresion_numerica) in state 29
WARNING: reduce/reduce conflict in state 38 resolved using rule (expresion_id -> ID)
WARNING: rejected rule (expresion_numerica -> ID) in state 38
WARNING: reduce/reduce conflict in state 49 resolved using rule (asign_expresion_general -> expresion_numerica)
WARNING: rejected rule (expresion_cadena -> expresion_numerica) in state 49
WARNING: reduce/reduce conflict in state 55 resolved using rule (asign_def_expresion_general -> expresion_numerica)
WARNING: rejected rule (expresion_cadena -> expresion_numerica) in state 55
WARNING: reduce/reduce conflict in state 78 resolved using rule (expresion_numerica -> MENOS expresion_numerica)
WARNING: rejected rule (expresion_cadena -> expresion_numerica) in state 78
WARNING: reduce/reduce conflict in state 81 resolved using rule (asign_def_expresion_general -> expresion_numerica)
WARNING: rejected rule (expresion_cadena -> expresion_numerica) in state 81
WARNING: reduce/reduce conflict in state 90 resolved using rule (expresion_numerica -> expresion_numerica MAS expresion_numerica)
WARNING: rejected rule (expresion_cadena -> expresion_numerica) in state 90
WARNING: reduce/reduce conflict in state 93 resolved using rule (expresion_numerica -> expresion_numerica MENOS expresion_numerica)
WARNING: rejected rule (expresion_cadena -> expresion_numerica) in state 93
WARNING: reduce/reduce conflict in state 94 resolved using rule (expresion_numerica -> expresion_numerica POR expresion_numerica)
WARNING: rejected rule (expresion_cadena -> expresion_numerica) in state 94
WARNING: reduce/reduce conflict in state 95 resolved using rule (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica)
WARNING: rejected rule (expresion_cadena -> expresion_numerica) in state 95
WARNING: reduce/reduce conflict in state 96 resolved using rule (expresion_numerica -> expresion_numerica ELEVADO expresion_numerica)
WARNING: rejected rule (expresion_cadena -> expresion_numerica) in state 96
WARNING: reduce/reduce conflict in state 97 resolved using rule (expresion_numerica -> expresion_numerica MOD expresion_numerica)
WARNING: rejected rule (expresion_cadena -> expresion_numerica) in state 97
WARNING: reduce/reduce conflict in state 102 resolved using rule (expresion_numerica -> expresion_cadena MAS expresion_numerica)
WARNING: rejected rule (expresion_cadena -> expresion_numerica) in state 102
WARNING: reduce/reduce conflict in state 106 resolved using rule (expresion_numerica -> expresion_char MAS expresion_numerica)
WARNING: rejected rule (expresion_cadena -> expresion_numerica) in state 106
WARNING: Rule (expresion_cadena -> expresion_numerica) is never reduced
