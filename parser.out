Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> imprimir_instr
Rule 5     instruccion -> definicion_instr
Rule 6     instruccion -> asignacion_instr
Rule 7     instruccion -> def_asig_instr
Rule 8     instruccion -> mientras_instr
Rule 9     instruccion -> if_instr
Rule 10    instruccion -> if_else_instr
Rule 11    imprimir_instr -> PRINT PARIZQ expresion_general PARDER PTCOMA
Rule 12    expresion_general -> expresion_numerica
Rule 13    expresion_general -> expresion_cadena
Rule 14    expresion_general -> expresion_id
Rule 15    expresion_id -> ID
Rule 16    definicion_instr -> VAR ID PTCOMA
Rule 17    asignacion_instr -> ID IGUAL expresion_numerica PTCOMA
Rule 18    def_asig_instr -> VAR ID IGUAL expresion_numerica PTCOMA
Rule 19    mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
Rule 20    if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
Rule 21    if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
Rule 22    expresion_numerica -> expresion_numerica MAS expresion_numerica
Rule 23    expresion_numerica -> expresion_numerica MENOS expresion_numerica
Rule 24    expresion_numerica -> expresion_numerica POR expresion_numerica
Rule 25    expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica
Rule 26    expresion_numerica -> MENOS expresion_numerica
Rule 27    expresion_numerica -> PARIZQ expresion_numerica PARDER
Rule 28    expresion_numerica -> ENTERO
Rule 29    expresion_numerica -> DECIMAL
Rule 30    expresion_numerica -> ID
Rule 31    expresion_cadena -> expresion_cadena CONCAT expresion_cadena
Rule 32    expresion_cadena -> CADENA
Rule 33    expresion_cadena -> expresion_numerica
Rule 34    expresion_logica -> expresion_numerica MAYQUE expresion_numerica
Rule 35    expresion_logica -> expresion_numerica MENQUE expresion_numerica
Rule 36    expresion_logica -> expresion_numerica IGUALQUE expresion_numerica
Rule 37    expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica

Terminals, with rules where they appear

CADENA               : 32
CONCAT               : 31
DECIMAL              : 29
DIVIDIDO             : 25
ELSE                 : 21
ENTERO               : 28
ID                   : 15 16 17 18 30
IF                   : 20 21
IGUAL                : 17 18
IGUALQUE             : 36
LLAVDER              : 19 20 21 21
LLAVIZQ              : 19 20 21 21
MAS                  : 22
MAYQUE               : 34
MENOS                : 23 26
MENQUE               : 35
MIENTRAS             : 19
NIGUALQUE            : 37
PARDER               : 11 19 20 21 27
PARIZQ               : 11 19 20 21 27
POR                  : 24
PRINT                : 11
PTCOMA               : 11 16 17 18
VAR                  : 16 18
error                : 

Nonterminals, with rules where they appear

asignacion_instr     : 6
def_asig_instr       : 7
definicion_instr     : 5
expresion_cadena     : 13 31 31
expresion_general    : 11
expresion_id         : 14
expresion_logica     : 19 20 21
expresion_numerica   : 12 17 18 22 22 23 23 24 24 25 25 26 27 33 34 34 35 35 36 36 37 37
if_else_instr        : 10
if_instr             : 9
imprimir_instr       : 4
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2 19 20 21 21
mientras_instr       : 8

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . def_asig_instr
    (8) instruccion -> . mientras_instr
    (9) instruccion -> . if_instr
    (10) instruccion -> . if_else_instr
    (11) imprimir_instr -> . PRINT PARIZQ expresion_general PARDER PTCOMA
    (16) definicion_instr -> . VAR ID PTCOMA
    (17) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (18) def_asig_instr -> . VAR ID IGUAL expresion_numerica PTCOMA
    (19) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (20) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (21) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    PRINT           shift and go to state 11
    VAR             shift and go to state 12
    ID              shift and go to state 13
    MIENTRAS        shift and go to state 14
    IF              shift and go to state 15

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    def_asig_instr                 shift and go to state 7
    mientras_instr                 shift and go to state 8
    if_instr                       shift and go to state 9
    if_else_instr                  shift and go to state 10

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . def_asig_instr
    (8) instruccion -> . mientras_instr
    (9) instruccion -> . if_instr
    (10) instruccion -> . if_else_instr
    (11) imprimir_instr -> . PRINT PARIZQ expresion_general PARDER PTCOMA
    (16) definicion_instr -> . VAR ID PTCOMA
    (17) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (18) def_asig_instr -> . VAR ID IGUAL expresion_numerica PTCOMA
    (19) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (20) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (21) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    $end            reduce using rule 1 (init -> instrucciones .)
    PRINT           shift and go to state 11
    VAR             shift and go to state 12
    ID              shift and go to state 13
    MIENTRAS        shift and go to state 14
    IF              shift and go to state 15

    instruccion                    shift and go to state 16
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    def_asig_instr                 shift and go to state 7
    mientras_instr                 shift and go to state 8
    if_instr                       shift and go to state 9
    if_else_instr                  shift and go to state 10

state 3

    (3) instrucciones -> instruccion .

    PRINT           reduce using rule 3 (instrucciones -> instruccion .)
    VAR             reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    MIENTRAS        reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLAVDER         reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> imprimir_instr .

    PRINT           reduce using rule 4 (instruccion -> imprimir_instr .)
    VAR             reduce using rule 4 (instruccion -> imprimir_instr .)
    ID              reduce using rule 4 (instruccion -> imprimir_instr .)
    MIENTRAS        reduce using rule 4 (instruccion -> imprimir_instr .)
    IF              reduce using rule 4 (instruccion -> imprimir_instr .)
    $end            reduce using rule 4 (instruccion -> imprimir_instr .)
    LLAVDER         reduce using rule 4 (instruccion -> imprimir_instr .)


state 5

    (5) instruccion -> definicion_instr .

    PRINT           reduce using rule 5 (instruccion -> definicion_instr .)
    VAR             reduce using rule 5 (instruccion -> definicion_instr .)
    ID              reduce using rule 5 (instruccion -> definicion_instr .)
    MIENTRAS        reduce using rule 5 (instruccion -> definicion_instr .)
    IF              reduce using rule 5 (instruccion -> definicion_instr .)
    $end            reduce using rule 5 (instruccion -> definicion_instr .)
    LLAVDER         reduce using rule 5 (instruccion -> definicion_instr .)


state 6

    (6) instruccion -> asignacion_instr .

    PRINT           reduce using rule 6 (instruccion -> asignacion_instr .)
    VAR             reduce using rule 6 (instruccion -> asignacion_instr .)
    ID              reduce using rule 6 (instruccion -> asignacion_instr .)
    MIENTRAS        reduce using rule 6 (instruccion -> asignacion_instr .)
    IF              reduce using rule 6 (instruccion -> asignacion_instr .)
    $end            reduce using rule 6 (instruccion -> asignacion_instr .)
    LLAVDER         reduce using rule 6 (instruccion -> asignacion_instr .)


state 7

    (7) instruccion -> def_asig_instr .

    PRINT           reduce using rule 7 (instruccion -> def_asig_instr .)
    VAR             reduce using rule 7 (instruccion -> def_asig_instr .)
    ID              reduce using rule 7 (instruccion -> def_asig_instr .)
    MIENTRAS        reduce using rule 7 (instruccion -> def_asig_instr .)
    IF              reduce using rule 7 (instruccion -> def_asig_instr .)
    $end            reduce using rule 7 (instruccion -> def_asig_instr .)
    LLAVDER         reduce using rule 7 (instruccion -> def_asig_instr .)


state 8

    (8) instruccion -> mientras_instr .

    PRINT           reduce using rule 8 (instruccion -> mientras_instr .)
    VAR             reduce using rule 8 (instruccion -> mientras_instr .)
    ID              reduce using rule 8 (instruccion -> mientras_instr .)
    MIENTRAS        reduce using rule 8 (instruccion -> mientras_instr .)
    IF              reduce using rule 8 (instruccion -> mientras_instr .)
    $end            reduce using rule 8 (instruccion -> mientras_instr .)
    LLAVDER         reduce using rule 8 (instruccion -> mientras_instr .)


state 9

    (9) instruccion -> if_instr .

    PRINT           reduce using rule 9 (instruccion -> if_instr .)
    VAR             reduce using rule 9 (instruccion -> if_instr .)
    ID              reduce using rule 9 (instruccion -> if_instr .)
    MIENTRAS        reduce using rule 9 (instruccion -> if_instr .)
    IF              reduce using rule 9 (instruccion -> if_instr .)
    $end            reduce using rule 9 (instruccion -> if_instr .)
    LLAVDER         reduce using rule 9 (instruccion -> if_instr .)


state 10

    (10) instruccion -> if_else_instr .

    PRINT           reduce using rule 10 (instruccion -> if_else_instr .)
    VAR             reduce using rule 10 (instruccion -> if_else_instr .)
    ID              reduce using rule 10 (instruccion -> if_else_instr .)
    MIENTRAS        reduce using rule 10 (instruccion -> if_else_instr .)
    IF              reduce using rule 10 (instruccion -> if_else_instr .)
    $end            reduce using rule 10 (instruccion -> if_else_instr .)
    LLAVDER         reduce using rule 10 (instruccion -> if_else_instr .)


state 11

    (11) imprimir_instr -> PRINT . PARIZQ expresion_general PARDER PTCOMA

    PARIZQ          shift and go to state 17


state 12

    (16) definicion_instr -> VAR . ID PTCOMA
    (18) def_asig_instr -> VAR . ID IGUAL expresion_numerica PTCOMA

    ID              shift and go to state 18


state 13

    (17) asignacion_instr -> ID . IGUAL expresion_numerica PTCOMA

    IGUAL           shift and go to state 19


state 14

    (19) mientras_instr -> MIENTRAS . PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER

    PARIZQ          shift and go to state 20


state 15

    (20) if_instr -> IF . PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (21) if_else_instr -> IF . PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    PARIZQ          shift and go to state 21


state 16

    (2) instrucciones -> instrucciones instruccion .

    PRINT           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    VAR             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    MIENTRAS        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLAVDER         reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 17

    (11) imprimir_instr -> PRINT PARIZQ . expresion_general PARDER PTCOMA
    (12) expresion_general -> . expresion_numerica
    (13) expresion_general -> . expresion_cadena
    (14) expresion_general -> . expresion_id
    (22) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (23) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (24) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (25) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (26) expresion_numerica -> . MENOS expresion_numerica
    (27) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (28) expresion_numerica -> . ENTERO
    (29) expresion_numerica -> . DECIMAL
    (30) expresion_numerica -> . ID
    (31) expresion_cadena -> . expresion_cadena CONCAT expresion_cadena
    (32) expresion_cadena -> . CADENA
    (33) expresion_cadena -> . expresion_numerica
    (15) expresion_id -> . ID

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 22
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    ID              shift and go to state 30
    CADENA          shift and go to state 31

    expresion_general              shift and go to state 23
    expresion_numerica             shift and go to state 24
    expresion_cadena               shift and go to state 25
    expresion_id                   shift and go to state 26

state 18

    (16) definicion_instr -> VAR ID . PTCOMA
    (18) def_asig_instr -> VAR ID . IGUAL expresion_numerica PTCOMA

    PTCOMA          shift and go to state 32
    IGUAL           shift and go to state 33


state 19

    (17) asignacion_instr -> ID IGUAL . expresion_numerica PTCOMA
    (22) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (23) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (24) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (25) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (26) expresion_numerica -> . MENOS expresion_numerica
    (27) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (28) expresion_numerica -> . ENTERO
    (29) expresion_numerica -> . DECIMAL
    (30) expresion_numerica -> . ID

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 22
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    ID              shift and go to state 34

    expresion_numerica             shift and go to state 35

state 20

    (19) mientras_instr -> MIENTRAS PARIZQ . expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (34) expresion_logica -> . expresion_numerica MAYQUE expresion_numerica
    (35) expresion_logica -> . expresion_numerica MENQUE expresion_numerica
    (36) expresion_logica -> . expresion_numerica IGUALQUE expresion_numerica
    (37) expresion_logica -> . expresion_numerica NIGUALQUE expresion_numerica
    (22) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (23) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (24) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (25) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (26) expresion_numerica -> . MENOS expresion_numerica
    (27) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (28) expresion_numerica -> . ENTERO
    (29) expresion_numerica -> . DECIMAL
    (30) expresion_numerica -> . ID

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 22
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    ID              shift and go to state 34

    expresion_logica               shift and go to state 36
    expresion_numerica             shift and go to state 37

state 21

    (20) if_instr -> IF PARIZQ . expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (21) if_else_instr -> IF PARIZQ . expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (34) expresion_logica -> . expresion_numerica MAYQUE expresion_numerica
    (35) expresion_logica -> . expresion_numerica MENQUE expresion_numerica
    (36) expresion_logica -> . expresion_numerica IGUALQUE expresion_numerica
    (37) expresion_logica -> . expresion_numerica NIGUALQUE expresion_numerica
    (22) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (23) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (24) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (25) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (26) expresion_numerica -> . MENOS expresion_numerica
    (27) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (28) expresion_numerica -> . ENTERO
    (29) expresion_numerica -> . DECIMAL
    (30) expresion_numerica -> . ID

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 22
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    ID              shift and go to state 34

    expresion_logica               shift and go to state 38
    expresion_numerica             shift and go to state 37

state 22

    (27) expresion_numerica -> PARIZQ . expresion_numerica PARDER
    (22) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (23) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (24) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (25) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (26) expresion_numerica -> . MENOS expresion_numerica
    (27) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (28) expresion_numerica -> . ENTERO
    (29) expresion_numerica -> . DECIMAL
    (30) expresion_numerica -> . ID

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 22
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    ID              shift and go to state 34

    expresion_numerica             shift and go to state 39

state 23

    (11) imprimir_instr -> PRINT PARIZQ expresion_general . PARDER PTCOMA

    PARDER          shift and go to state 40


state 24

    (12) expresion_general -> expresion_numerica .
    (22) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (23) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (24) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (25) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (33) expresion_cadena -> expresion_numerica .

  ! reduce/reduce conflict for PARDER resolved using rule 12 (expresion_general -> expresion_numerica .)
    PARDER          reduce using rule 12 (expresion_general -> expresion_numerica .)
    MAS             shift and go to state 41
    MENOS           shift and go to state 42
    POR             shift and go to state 43
    DIVIDIDO        shift and go to state 44
    CONCAT          reduce using rule 33 (expresion_cadena -> expresion_numerica .)

  ! PARDER          [ reduce using rule 33 (expresion_cadena -> expresion_numerica .) ]


state 25

    (13) expresion_general -> expresion_cadena .
    (31) expresion_cadena -> expresion_cadena . CONCAT expresion_cadena

    PARDER          reduce using rule 13 (expresion_general -> expresion_cadena .)
    CONCAT          shift and go to state 45


state 26

    (14) expresion_general -> expresion_id .

    PARDER          reduce using rule 14 (expresion_general -> expresion_id .)


state 27

    (26) expresion_numerica -> MENOS . expresion_numerica
    (22) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (23) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (24) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (25) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (26) expresion_numerica -> . MENOS expresion_numerica
    (27) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (28) expresion_numerica -> . ENTERO
    (29) expresion_numerica -> . DECIMAL
    (30) expresion_numerica -> . ID

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 22
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    ID              shift and go to state 34

    expresion_numerica             shift and go to state 46

state 28

    (28) expresion_numerica -> ENTERO .

    MAS             reduce using rule 28 (expresion_numerica -> ENTERO .)
    MENOS           reduce using rule 28 (expresion_numerica -> ENTERO .)
    POR             reduce using rule 28 (expresion_numerica -> ENTERO .)
    DIVIDIDO        reduce using rule 28 (expresion_numerica -> ENTERO .)
    PARDER          reduce using rule 28 (expresion_numerica -> ENTERO .)
    CONCAT          reduce using rule 28 (expresion_numerica -> ENTERO .)
    PTCOMA          reduce using rule 28 (expresion_numerica -> ENTERO .)
    MAYQUE          reduce using rule 28 (expresion_numerica -> ENTERO .)
    MENQUE          reduce using rule 28 (expresion_numerica -> ENTERO .)
    IGUALQUE        reduce using rule 28 (expresion_numerica -> ENTERO .)
    NIGUALQUE       reduce using rule 28 (expresion_numerica -> ENTERO .)


state 29

    (29) expresion_numerica -> DECIMAL .

    MAS             reduce using rule 29 (expresion_numerica -> DECIMAL .)
    MENOS           reduce using rule 29 (expresion_numerica -> DECIMAL .)
    POR             reduce using rule 29 (expresion_numerica -> DECIMAL .)
    DIVIDIDO        reduce using rule 29 (expresion_numerica -> DECIMAL .)
    PARDER          reduce using rule 29 (expresion_numerica -> DECIMAL .)
    CONCAT          reduce using rule 29 (expresion_numerica -> DECIMAL .)
    PTCOMA          reduce using rule 29 (expresion_numerica -> DECIMAL .)
    MAYQUE          reduce using rule 29 (expresion_numerica -> DECIMAL .)
    MENQUE          reduce using rule 29 (expresion_numerica -> DECIMAL .)
    IGUALQUE        reduce using rule 29 (expresion_numerica -> DECIMAL .)
    NIGUALQUE       reduce using rule 29 (expresion_numerica -> DECIMAL .)


state 30

    (30) expresion_numerica -> ID .
    (15) expresion_id -> ID .

  ! reduce/reduce conflict for PARDER resolved using rule 15 (expresion_id -> ID .)
    MAS             reduce using rule 30 (expresion_numerica -> ID .)
    MENOS           reduce using rule 30 (expresion_numerica -> ID .)
    POR             reduce using rule 30 (expresion_numerica -> ID .)
    DIVIDIDO        reduce using rule 30 (expresion_numerica -> ID .)
    CONCAT          reduce using rule 30 (expresion_numerica -> ID .)
    PARDER          reduce using rule 15 (expresion_id -> ID .)

  ! PARDER          [ reduce using rule 30 (expresion_numerica -> ID .) ]


state 31

    (32) expresion_cadena -> CADENA .

    CONCAT          reduce using rule 32 (expresion_cadena -> CADENA .)
    PARDER          reduce using rule 32 (expresion_cadena -> CADENA .)


state 32

    (16) definicion_instr -> VAR ID PTCOMA .

    PRINT           reduce using rule 16 (definicion_instr -> VAR ID PTCOMA .)
    VAR             reduce using rule 16 (definicion_instr -> VAR ID PTCOMA .)
    ID              reduce using rule 16 (definicion_instr -> VAR ID PTCOMA .)
    MIENTRAS        reduce using rule 16 (definicion_instr -> VAR ID PTCOMA .)
    IF              reduce using rule 16 (definicion_instr -> VAR ID PTCOMA .)
    $end            reduce using rule 16 (definicion_instr -> VAR ID PTCOMA .)
    LLAVDER         reduce using rule 16 (definicion_instr -> VAR ID PTCOMA .)


state 33

    (18) def_asig_instr -> VAR ID IGUAL . expresion_numerica PTCOMA
    (22) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (23) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (24) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (25) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (26) expresion_numerica -> . MENOS expresion_numerica
    (27) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (28) expresion_numerica -> . ENTERO
    (29) expresion_numerica -> . DECIMAL
    (30) expresion_numerica -> . ID

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 22
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    ID              shift and go to state 34

    expresion_numerica             shift and go to state 47

state 34

    (30) expresion_numerica -> ID .

    PTCOMA          reduce using rule 30 (expresion_numerica -> ID .)
    MAS             reduce using rule 30 (expresion_numerica -> ID .)
    MENOS           reduce using rule 30 (expresion_numerica -> ID .)
    POR             reduce using rule 30 (expresion_numerica -> ID .)
    DIVIDIDO        reduce using rule 30 (expresion_numerica -> ID .)
    MAYQUE          reduce using rule 30 (expresion_numerica -> ID .)
    MENQUE          reduce using rule 30 (expresion_numerica -> ID .)
    IGUALQUE        reduce using rule 30 (expresion_numerica -> ID .)
    NIGUALQUE       reduce using rule 30 (expresion_numerica -> ID .)
    PARDER          reduce using rule 30 (expresion_numerica -> ID .)
    CONCAT          reduce using rule 30 (expresion_numerica -> ID .)


state 35

    (17) asignacion_instr -> ID IGUAL expresion_numerica . PTCOMA
    (22) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (23) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (24) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (25) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PTCOMA          shift and go to state 48
    MAS             shift and go to state 41
    MENOS           shift and go to state 42
    POR             shift and go to state 43
    DIVIDIDO        shift and go to state 44


state 36

    (19) mientras_instr -> MIENTRAS PARIZQ expresion_logica . PARDER LLAVIZQ instrucciones LLAVDER

    PARDER          shift and go to state 49


state 37

    (34) expresion_logica -> expresion_numerica . MAYQUE expresion_numerica
    (35) expresion_logica -> expresion_numerica . MENQUE expresion_numerica
    (36) expresion_logica -> expresion_numerica . IGUALQUE expresion_numerica
    (37) expresion_logica -> expresion_numerica . NIGUALQUE expresion_numerica
    (22) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (23) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (24) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (25) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAYQUE          shift and go to state 50
    MENQUE          shift and go to state 51
    IGUALQUE        shift and go to state 52
    NIGUALQUE       shift and go to state 53
    MAS             shift and go to state 41
    MENOS           shift and go to state 42
    POR             shift and go to state 43
    DIVIDIDO        shift and go to state 44


state 38

    (20) if_instr -> IF PARIZQ expresion_logica . PARDER LLAVIZQ instrucciones LLAVDER
    (21) if_else_instr -> IF PARIZQ expresion_logica . PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    PARDER          shift and go to state 54


state 39

    (27) expresion_numerica -> PARIZQ expresion_numerica . PARDER
    (22) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (23) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (24) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (25) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PARDER          shift and go to state 55
    MAS             shift and go to state 41
    MENOS           shift and go to state 42
    POR             shift and go to state 43
    DIVIDIDO        shift and go to state 44


state 40

    (11) imprimir_instr -> PRINT PARIZQ expresion_general PARDER . PTCOMA

    PTCOMA          shift and go to state 56


state 41

    (22) expresion_numerica -> expresion_numerica MAS . expresion_numerica
    (22) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (23) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (24) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (25) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (26) expresion_numerica -> . MENOS expresion_numerica
    (27) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (28) expresion_numerica -> . ENTERO
    (29) expresion_numerica -> . DECIMAL
    (30) expresion_numerica -> . ID

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 22
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    ID              shift and go to state 34

    expresion_numerica             shift and go to state 57

state 42

    (23) expresion_numerica -> expresion_numerica MENOS . expresion_numerica
    (22) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (23) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (24) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (25) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (26) expresion_numerica -> . MENOS expresion_numerica
    (27) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (28) expresion_numerica -> . ENTERO
    (29) expresion_numerica -> . DECIMAL
    (30) expresion_numerica -> . ID

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 22
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    ID              shift and go to state 34

    expresion_numerica             shift and go to state 58

state 43

    (24) expresion_numerica -> expresion_numerica POR . expresion_numerica
    (22) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (23) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (24) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (25) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (26) expresion_numerica -> . MENOS expresion_numerica
    (27) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (28) expresion_numerica -> . ENTERO
    (29) expresion_numerica -> . DECIMAL
    (30) expresion_numerica -> . ID

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 22
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    ID              shift and go to state 34

    expresion_numerica             shift and go to state 59

state 44

    (25) expresion_numerica -> expresion_numerica DIVIDIDO . expresion_numerica
    (22) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (23) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (24) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (25) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (26) expresion_numerica -> . MENOS expresion_numerica
    (27) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (28) expresion_numerica -> . ENTERO
    (29) expresion_numerica -> . DECIMAL
    (30) expresion_numerica -> . ID

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 22
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    ID              shift and go to state 34

    expresion_numerica             shift and go to state 60

state 45

    (31) expresion_cadena -> expresion_cadena CONCAT . expresion_cadena
    (31) expresion_cadena -> . expresion_cadena CONCAT expresion_cadena
    (32) expresion_cadena -> . CADENA
    (33) expresion_cadena -> . expresion_numerica
    (22) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (23) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (24) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (25) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (26) expresion_numerica -> . MENOS expresion_numerica
    (27) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (28) expresion_numerica -> . ENTERO
    (29) expresion_numerica -> . DECIMAL
    (30) expresion_numerica -> . ID

    CADENA          shift and go to state 31
    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 22
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    ID              shift and go to state 34

    expresion_cadena               shift and go to state 61
    expresion_numerica             shift and go to state 62

state 46

    (26) expresion_numerica -> MENOS expresion_numerica .
    (22) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (23) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (24) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (25) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAS             reduce using rule 26 (expresion_numerica -> MENOS expresion_numerica .)
    MENOS           reduce using rule 26 (expresion_numerica -> MENOS expresion_numerica .)
    POR             reduce using rule 26 (expresion_numerica -> MENOS expresion_numerica .)
    DIVIDIDO        reduce using rule 26 (expresion_numerica -> MENOS expresion_numerica .)
    PARDER          reduce using rule 26 (expresion_numerica -> MENOS expresion_numerica .)
    CONCAT          reduce using rule 26 (expresion_numerica -> MENOS expresion_numerica .)
    PTCOMA          reduce using rule 26 (expresion_numerica -> MENOS expresion_numerica .)
    MAYQUE          reduce using rule 26 (expresion_numerica -> MENOS expresion_numerica .)
    MENQUE          reduce using rule 26 (expresion_numerica -> MENOS expresion_numerica .)
    IGUALQUE        reduce using rule 26 (expresion_numerica -> MENOS expresion_numerica .)
    NIGUALQUE       reduce using rule 26 (expresion_numerica -> MENOS expresion_numerica .)

  ! MAS             [ shift and go to state 41 ]
  ! MENOS           [ shift and go to state 42 ]
  ! POR             [ shift and go to state 43 ]
  ! DIVIDIDO        [ shift and go to state 44 ]


state 47

    (18) def_asig_instr -> VAR ID IGUAL expresion_numerica . PTCOMA
    (22) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (23) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (24) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (25) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PTCOMA          shift and go to state 63
    MAS             shift and go to state 41
    MENOS           shift and go to state 42
    POR             shift and go to state 43
    DIVIDIDO        shift and go to state 44


state 48

    (17) asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .

    PRINT           reduce using rule 17 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)
    VAR             reduce using rule 17 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)
    ID              reduce using rule 17 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)
    MIENTRAS        reduce using rule 17 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)
    IF              reduce using rule 17 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)
    $end            reduce using rule 17 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)
    LLAVDER         reduce using rule 17 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)


state 49

    (19) mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 64


state 50

    (34) expresion_logica -> expresion_numerica MAYQUE . expresion_numerica
    (22) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (23) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (24) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (25) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (26) expresion_numerica -> . MENOS expresion_numerica
    (27) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (28) expresion_numerica -> . ENTERO
    (29) expresion_numerica -> . DECIMAL
    (30) expresion_numerica -> . ID

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 22
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    ID              shift and go to state 34

    expresion_numerica             shift and go to state 65

state 51

    (35) expresion_logica -> expresion_numerica MENQUE . expresion_numerica
    (22) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (23) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (24) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (25) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (26) expresion_numerica -> . MENOS expresion_numerica
    (27) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (28) expresion_numerica -> . ENTERO
    (29) expresion_numerica -> . DECIMAL
    (30) expresion_numerica -> . ID

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 22
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    ID              shift and go to state 34

    expresion_numerica             shift and go to state 66

state 52

    (36) expresion_logica -> expresion_numerica IGUALQUE . expresion_numerica
    (22) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (23) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (24) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (25) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (26) expresion_numerica -> . MENOS expresion_numerica
    (27) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (28) expresion_numerica -> . ENTERO
    (29) expresion_numerica -> . DECIMAL
    (30) expresion_numerica -> . ID

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 22
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    ID              shift and go to state 34

    expresion_numerica             shift and go to state 67

state 53

    (37) expresion_logica -> expresion_numerica NIGUALQUE . expresion_numerica
    (22) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (23) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (24) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (25) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (26) expresion_numerica -> . MENOS expresion_numerica
    (27) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (28) expresion_numerica -> . ENTERO
    (29) expresion_numerica -> . DECIMAL
    (30) expresion_numerica -> . ID

    MENOS           shift and go to state 27
    PARIZQ          shift and go to state 22
    ENTERO          shift and go to state 28
    DECIMAL         shift and go to state 29
    ID              shift and go to state 34

    expresion_numerica             shift and go to state 68

state 54

    (20) if_instr -> IF PARIZQ expresion_logica PARDER . LLAVIZQ instrucciones LLAVDER
    (21) if_else_instr -> IF PARIZQ expresion_logica PARDER . LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 69


state 55

    (27) expresion_numerica -> PARIZQ expresion_numerica PARDER .

    MAS             reduce using rule 27 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    MENOS           reduce using rule 27 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    POR             reduce using rule 27 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    DIVIDIDO        reduce using rule 27 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    PARDER          reduce using rule 27 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    CONCAT          reduce using rule 27 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    PTCOMA          reduce using rule 27 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    MAYQUE          reduce using rule 27 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    MENQUE          reduce using rule 27 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    IGUALQUE        reduce using rule 27 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    NIGUALQUE       reduce using rule 27 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)


state 56

    (11) imprimir_instr -> PRINT PARIZQ expresion_general PARDER PTCOMA .

    PRINT           reduce using rule 11 (imprimir_instr -> PRINT PARIZQ expresion_general PARDER PTCOMA .)
    VAR             reduce using rule 11 (imprimir_instr -> PRINT PARIZQ expresion_general PARDER PTCOMA .)
    ID              reduce using rule 11 (imprimir_instr -> PRINT PARIZQ expresion_general PARDER PTCOMA .)
    MIENTRAS        reduce using rule 11 (imprimir_instr -> PRINT PARIZQ expresion_general PARDER PTCOMA .)
    IF              reduce using rule 11 (imprimir_instr -> PRINT PARIZQ expresion_general PARDER PTCOMA .)
    $end            reduce using rule 11 (imprimir_instr -> PRINT PARIZQ expresion_general PARDER PTCOMA .)
    LLAVDER         reduce using rule 11 (imprimir_instr -> PRINT PARIZQ expresion_general PARDER PTCOMA .)


state 57

    (22) expresion_numerica -> expresion_numerica MAS expresion_numerica .
    (22) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (23) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (24) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (25) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAS             reduce using rule 22 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    MENOS           reduce using rule 22 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    PARDER          reduce using rule 22 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    CONCAT          reduce using rule 22 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    PTCOMA          reduce using rule 22 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    MAYQUE          reduce using rule 22 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    MENQUE          reduce using rule 22 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    IGUALQUE        reduce using rule 22 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    NIGUALQUE       reduce using rule 22 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    POR             shift and go to state 43
    DIVIDIDO        shift and go to state 44

  ! POR             [ reduce using rule 22 (expresion_numerica -> expresion_numerica MAS expresion_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 22 (expresion_numerica -> expresion_numerica MAS expresion_numerica .) ]
  ! MAS             [ shift and go to state 41 ]
  ! MENOS           [ shift and go to state 42 ]


state 58

    (23) expresion_numerica -> expresion_numerica MENOS expresion_numerica .
    (22) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (23) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (24) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (25) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAS             reduce using rule 23 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    MENOS           reduce using rule 23 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    PARDER          reduce using rule 23 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    CONCAT          reduce using rule 23 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    PTCOMA          reduce using rule 23 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    MAYQUE          reduce using rule 23 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    MENQUE          reduce using rule 23 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    IGUALQUE        reduce using rule 23 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    NIGUALQUE       reduce using rule 23 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    POR             shift and go to state 43
    DIVIDIDO        shift and go to state 44

  ! POR             [ reduce using rule 23 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 23 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .) ]
  ! MAS             [ shift and go to state 41 ]
  ! MENOS           [ shift and go to state 42 ]


state 59

    (24) expresion_numerica -> expresion_numerica POR expresion_numerica .
    (22) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (23) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (24) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (25) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAS             reduce using rule 24 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    MENOS           reduce using rule 24 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    POR             reduce using rule 24 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    DIVIDIDO        reduce using rule 24 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    PARDER          reduce using rule 24 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    CONCAT          reduce using rule 24 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    PTCOMA          reduce using rule 24 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    MAYQUE          reduce using rule 24 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    MENQUE          reduce using rule 24 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    IGUALQUE        reduce using rule 24 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    NIGUALQUE       reduce using rule 24 (expresion_numerica -> expresion_numerica POR expresion_numerica .)

  ! MAS             [ shift and go to state 41 ]
  ! MENOS           [ shift and go to state 42 ]
  ! POR             [ shift and go to state 43 ]
  ! DIVIDIDO        [ shift and go to state 44 ]


state 60

    (25) expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .
    (22) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (23) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (24) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (25) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAS             reduce using rule 25 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    MENOS           reduce using rule 25 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    POR             reduce using rule 25 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    DIVIDIDO        reduce using rule 25 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    PARDER          reduce using rule 25 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    CONCAT          reduce using rule 25 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    PTCOMA          reduce using rule 25 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    MAYQUE          reduce using rule 25 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    MENQUE          reduce using rule 25 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    IGUALQUE        reduce using rule 25 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    NIGUALQUE       reduce using rule 25 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)

  ! MAS             [ shift and go to state 41 ]
  ! MENOS           [ shift and go to state 42 ]
  ! POR             [ shift and go to state 43 ]
  ! DIVIDIDO        [ shift and go to state 44 ]


state 61

    (31) expresion_cadena -> expresion_cadena CONCAT expresion_cadena .
    (31) expresion_cadena -> expresion_cadena . CONCAT expresion_cadena

    CONCAT          reduce using rule 31 (expresion_cadena -> expresion_cadena CONCAT expresion_cadena .)
    PARDER          reduce using rule 31 (expresion_cadena -> expresion_cadena CONCAT expresion_cadena .)

  ! CONCAT          [ shift and go to state 45 ]


state 62

    (33) expresion_cadena -> expresion_numerica .
    (22) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (23) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (24) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (25) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    CONCAT          reduce using rule 33 (expresion_cadena -> expresion_numerica .)
    PARDER          reduce using rule 33 (expresion_cadena -> expresion_numerica .)
    MAS             shift and go to state 41
    MENOS           shift and go to state 42
    POR             shift and go to state 43
    DIVIDIDO        shift and go to state 44


state 63

    (18) def_asig_instr -> VAR ID IGUAL expresion_numerica PTCOMA .

    PRINT           reduce using rule 18 (def_asig_instr -> VAR ID IGUAL expresion_numerica PTCOMA .)
    VAR             reduce using rule 18 (def_asig_instr -> VAR ID IGUAL expresion_numerica PTCOMA .)
    ID              reduce using rule 18 (def_asig_instr -> VAR ID IGUAL expresion_numerica PTCOMA .)
    MIENTRAS        reduce using rule 18 (def_asig_instr -> VAR ID IGUAL expresion_numerica PTCOMA .)
    IF              reduce using rule 18 (def_asig_instr -> VAR ID IGUAL expresion_numerica PTCOMA .)
    $end            reduce using rule 18 (def_asig_instr -> VAR ID IGUAL expresion_numerica PTCOMA .)
    LLAVDER         reduce using rule 18 (def_asig_instr -> VAR ID IGUAL expresion_numerica PTCOMA .)


state 64

    (19) mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ . instrucciones LLAVDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . def_asig_instr
    (8) instruccion -> . mientras_instr
    (9) instruccion -> . if_instr
    (10) instruccion -> . if_else_instr
    (11) imprimir_instr -> . PRINT PARIZQ expresion_general PARDER PTCOMA
    (16) definicion_instr -> . VAR ID PTCOMA
    (17) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (18) def_asig_instr -> . VAR ID IGUAL expresion_numerica PTCOMA
    (19) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (20) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (21) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    PRINT           shift and go to state 11
    VAR             shift and go to state 12
    ID              shift and go to state 13
    MIENTRAS        shift and go to state 14
    IF              shift and go to state 15

    instrucciones                  shift and go to state 70
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    def_asig_instr                 shift and go to state 7
    mientras_instr                 shift and go to state 8
    if_instr                       shift and go to state 9
    if_else_instr                  shift and go to state 10

state 65

    (34) expresion_logica -> expresion_numerica MAYQUE expresion_numerica .
    (22) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (23) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (24) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (25) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PARDER          reduce using rule 34 (expresion_logica -> expresion_numerica MAYQUE expresion_numerica .)
    MAS             shift and go to state 41
    MENOS           shift and go to state 42
    POR             shift and go to state 43
    DIVIDIDO        shift and go to state 44


state 66

    (35) expresion_logica -> expresion_numerica MENQUE expresion_numerica .
    (22) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (23) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (24) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (25) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PARDER          reduce using rule 35 (expresion_logica -> expresion_numerica MENQUE expresion_numerica .)
    MAS             shift and go to state 41
    MENOS           shift and go to state 42
    POR             shift and go to state 43
    DIVIDIDO        shift and go to state 44


state 67

    (36) expresion_logica -> expresion_numerica IGUALQUE expresion_numerica .
    (22) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (23) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (24) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (25) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PARDER          reduce using rule 36 (expresion_logica -> expresion_numerica IGUALQUE expresion_numerica .)
    MAS             shift and go to state 41
    MENOS           shift and go to state 42
    POR             shift and go to state 43
    DIVIDIDO        shift and go to state 44


state 68

    (37) expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica .
    (22) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (23) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (24) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (25) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PARDER          reduce using rule 37 (expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica .)
    MAS             shift and go to state 41
    MENOS           shift and go to state 42
    POR             shift and go to state 43
    DIVIDIDO        shift and go to state 44


state 69

    (20) if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ . instrucciones LLAVDER
    (21) if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ . instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . def_asig_instr
    (8) instruccion -> . mientras_instr
    (9) instruccion -> . if_instr
    (10) instruccion -> . if_else_instr
    (11) imprimir_instr -> . PRINT PARIZQ expresion_general PARDER PTCOMA
    (16) definicion_instr -> . VAR ID PTCOMA
    (17) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (18) def_asig_instr -> . VAR ID IGUAL expresion_numerica PTCOMA
    (19) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (20) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (21) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    PRINT           shift and go to state 11
    VAR             shift and go to state 12
    ID              shift and go to state 13
    MIENTRAS        shift and go to state 14
    IF              shift and go to state 15

    instrucciones                  shift and go to state 71
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    def_asig_instr                 shift and go to state 7
    mientras_instr                 shift and go to state 8
    if_instr                       shift and go to state 9
    if_else_instr                  shift and go to state 10

state 70

    (19) mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones . LLAVDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . def_asig_instr
    (8) instruccion -> . mientras_instr
    (9) instruccion -> . if_instr
    (10) instruccion -> . if_else_instr
    (11) imprimir_instr -> . PRINT PARIZQ expresion_general PARDER PTCOMA
    (16) definicion_instr -> . VAR ID PTCOMA
    (17) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (18) def_asig_instr -> . VAR ID IGUAL expresion_numerica PTCOMA
    (19) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (20) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (21) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    LLAVDER         shift and go to state 72
    PRINT           shift and go to state 11
    VAR             shift and go to state 12
    ID              shift and go to state 13
    MIENTRAS        shift and go to state 14
    IF              shift and go to state 15

    instruccion                    shift and go to state 16
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    def_asig_instr                 shift and go to state 7
    mientras_instr                 shift and go to state 8
    if_instr                       shift and go to state 9
    if_else_instr                  shift and go to state 10

state 71

    (20) if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones . LLAVDER
    (21) if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones . LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . def_asig_instr
    (8) instruccion -> . mientras_instr
    (9) instruccion -> . if_instr
    (10) instruccion -> . if_else_instr
    (11) imprimir_instr -> . PRINT PARIZQ expresion_general PARDER PTCOMA
    (16) definicion_instr -> . VAR ID PTCOMA
    (17) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (18) def_asig_instr -> . VAR ID IGUAL expresion_numerica PTCOMA
    (19) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (20) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (21) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    LLAVDER         shift and go to state 73
    PRINT           shift and go to state 11
    VAR             shift and go to state 12
    ID              shift and go to state 13
    MIENTRAS        shift and go to state 14
    IF              shift and go to state 15

    instruccion                    shift and go to state 16
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    def_asig_instr                 shift and go to state 7
    mientras_instr                 shift and go to state 8
    if_instr                       shift and go to state 9
    if_else_instr                  shift and go to state 10

state 72

    (19) mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .

    PRINT           reduce using rule 19 (mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    VAR             reduce using rule 19 (mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 19 (mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    MIENTRAS        reduce using rule 19 (mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 19 (mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 19 (mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 19 (mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)


state 73

    (20) if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .
    (21) if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER . ELSE LLAVIZQ instrucciones LLAVDER

    PRINT           reduce using rule 20 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    VAR             reduce using rule 20 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 20 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    MIENTRAS        reduce using rule 20 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 20 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 20 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 20 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    ELSE            shift and go to state 74


state 74

    (21) if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 75


state 75

    (21) if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ . instrucciones LLAVDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . def_asig_instr
    (8) instruccion -> . mientras_instr
    (9) instruccion -> . if_instr
    (10) instruccion -> . if_else_instr
    (11) imprimir_instr -> . PRINT PARIZQ expresion_general PARDER PTCOMA
    (16) definicion_instr -> . VAR ID PTCOMA
    (17) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (18) def_asig_instr -> . VAR ID IGUAL expresion_numerica PTCOMA
    (19) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (20) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (21) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    PRINT           shift and go to state 11
    VAR             shift and go to state 12
    ID              shift and go to state 13
    MIENTRAS        shift and go to state 14
    IF              shift and go to state 15

    instrucciones                  shift and go to state 76
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    def_asig_instr                 shift and go to state 7
    mientras_instr                 shift and go to state 8
    if_instr                       shift and go to state 9
    if_else_instr                  shift and go to state 10

state 76

    (21) if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones . LLAVDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . def_asig_instr
    (8) instruccion -> . mientras_instr
    (9) instruccion -> . if_instr
    (10) instruccion -> . if_else_instr
    (11) imprimir_instr -> . PRINT PARIZQ expresion_general PARDER PTCOMA
    (16) definicion_instr -> . VAR ID PTCOMA
    (17) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (18) def_asig_instr -> . VAR ID IGUAL expresion_numerica PTCOMA
    (19) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (20) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (21) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    LLAVDER         shift and go to state 77
    PRINT           shift and go to state 11
    VAR             shift and go to state 12
    ID              shift and go to state 13
    MIENTRAS        shift and go to state 14
    IF              shift and go to state 15

    instruccion                    shift and go to state 16
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    def_asig_instr                 shift and go to state 7
    mientras_instr                 shift and go to state 8
    if_instr                       shift and go to state 9
    if_else_instr                  shift and go to state 10

state 77

    (21) if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .

    PRINT           reduce using rule 21 (if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    VAR             reduce using rule 21 (if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 21 (if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    MIENTRAS        reduce using rule 21 (if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 21 (if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 21 (if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 21 (if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 24 resolved using rule (expresion_general -> expresion_numerica)
WARNING: rejected rule (expresion_cadena -> expresion_numerica) in state 24
WARNING: reduce/reduce conflict in state 30 resolved using rule (expresion_id -> ID)
WARNING: rejected rule (expresion_numerica -> ID) in state 30
