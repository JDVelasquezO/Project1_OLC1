Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> imprimir_instr
Rule 5     instruccion -> definicion_instr
Rule 6     instruccion -> asignacion_instr
Rule 7     instruccion -> mientras_instr
Rule 8     instruccion -> if_instr
Rule 9     instruccion -> if_else_instr
Rule 10    imprimir_instr -> PRINT PARIZQ expresion_general PARDER PTCOMA
Rule 11    expresion_general -> expresion_numerica
Rule 12    expresion_general -> expresion_cadena
Rule 13    expresion_general -> expresion_id
Rule 14    expresion_id -> ID
Rule 15    definicion_instr -> VAR ID PTCOMA
Rule 16    asignacion_instr -> ID IGUAL expresion_numerica PTCOMA
Rule 17    mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
Rule 18    if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
Rule 19    if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
Rule 20    expresion_numerica -> expresion_numerica MAS expresion_numerica
Rule 21    expresion_numerica -> expresion_numerica MENOS expresion_numerica
Rule 22    expresion_numerica -> expresion_numerica POR expresion_numerica
Rule 23    expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica
Rule 24    expresion_numerica -> MENOS expresion_numerica
Rule 25    expresion_numerica -> PARIZQ expresion_numerica PARDER
Rule 26    expresion_numerica -> ENTERO
Rule 27    expresion_numerica -> DECIMAL
Rule 28    expresion_numerica -> ID
Rule 29    expresion_cadena -> expresion_cadena CONCAT expresion_cadena
Rule 30    expresion_cadena -> CADENA
Rule 31    expresion_cadena -> expresion_numerica
Rule 32    expresion_logica -> expresion_numerica MAYQUE expresion_numerica
Rule 33    expresion_logica -> expresion_numerica MENQUE expresion_numerica
Rule 34    expresion_logica -> expresion_numerica IGUALQUE expresion_numerica
Rule 35    expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica

Terminals, with rules where they appear

CADENA               : 30
CONCAT               : 29
DECIMAL              : 27
DIVIDIDO             : 23
ELSE                 : 19
ENTERO               : 26
ID                   : 14 15 16 28
IF                   : 18 19
IGUAL                : 16
IGUALQUE             : 34
LLAVDER              : 17 18 19 19
LLAVIZQ              : 17 18 19 19
MAS                  : 20
MAYQUE               : 32
MENOS                : 21 24
MENQUE               : 33
MIENTRAS             : 17
NIGUALQUE            : 35
PARDER               : 10 17 18 19 25
PARIZQ               : 10 17 18 19 25
POR                  : 22
PRINT                : 10
PTCOMA               : 10 15 16
VAR                  : 15
error                : 

Nonterminals, with rules where they appear

asignacion_instr     : 6
definicion_instr     : 5
expresion_cadena     : 12 29 29
expresion_general    : 10
expresion_id         : 13
expresion_logica     : 17 18 19
expresion_numerica   : 11 16 20 20 21 21 22 22 23 23 24 25 31 32 32 33 33 34 34 35 35
if_else_instr        : 9
if_instr             : 8
imprimir_instr       : 4
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2 17 18 19 19
mientras_instr       : 7

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientras_instr
    (8) instruccion -> . if_instr
    (9) instruccion -> . if_else_instr
    (10) imprimir_instr -> . PRINT PARIZQ expresion_general PARDER PTCOMA
    (15) definicion_instr -> . VAR ID PTCOMA
    (16) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (17) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (18) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (19) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    PRINT           shift and go to state 10
    VAR             shift and go to state 11
    ID              shift and go to state 12
    MIENTRAS        shift and go to state 13
    IF              shift and go to state 14

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientras_instr                 shift and go to state 7
    if_instr                       shift and go to state 8
    if_else_instr                  shift and go to state 9

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientras_instr
    (8) instruccion -> . if_instr
    (9) instruccion -> . if_else_instr
    (10) imprimir_instr -> . PRINT PARIZQ expresion_general PARDER PTCOMA
    (15) definicion_instr -> . VAR ID PTCOMA
    (16) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (17) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (18) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (19) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    $end            reduce using rule 1 (init -> instrucciones .)
    PRINT           shift and go to state 10
    VAR             shift and go to state 11
    ID              shift and go to state 12
    MIENTRAS        shift and go to state 13
    IF              shift and go to state 14

    instruccion                    shift and go to state 15
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientras_instr                 shift and go to state 7
    if_instr                       shift and go to state 8
    if_else_instr                  shift and go to state 9

state 3

    (3) instrucciones -> instruccion .

    PRINT           reduce using rule 3 (instrucciones -> instruccion .)
    VAR             reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    MIENTRAS        reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLAVDER         reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> imprimir_instr .

    PRINT           reduce using rule 4 (instruccion -> imprimir_instr .)
    VAR             reduce using rule 4 (instruccion -> imprimir_instr .)
    ID              reduce using rule 4 (instruccion -> imprimir_instr .)
    MIENTRAS        reduce using rule 4 (instruccion -> imprimir_instr .)
    IF              reduce using rule 4 (instruccion -> imprimir_instr .)
    $end            reduce using rule 4 (instruccion -> imprimir_instr .)
    LLAVDER         reduce using rule 4 (instruccion -> imprimir_instr .)


state 5

    (5) instruccion -> definicion_instr .

    PRINT           reduce using rule 5 (instruccion -> definicion_instr .)
    VAR             reduce using rule 5 (instruccion -> definicion_instr .)
    ID              reduce using rule 5 (instruccion -> definicion_instr .)
    MIENTRAS        reduce using rule 5 (instruccion -> definicion_instr .)
    IF              reduce using rule 5 (instruccion -> definicion_instr .)
    $end            reduce using rule 5 (instruccion -> definicion_instr .)
    LLAVDER         reduce using rule 5 (instruccion -> definicion_instr .)


state 6

    (6) instruccion -> asignacion_instr .

    PRINT           reduce using rule 6 (instruccion -> asignacion_instr .)
    VAR             reduce using rule 6 (instruccion -> asignacion_instr .)
    ID              reduce using rule 6 (instruccion -> asignacion_instr .)
    MIENTRAS        reduce using rule 6 (instruccion -> asignacion_instr .)
    IF              reduce using rule 6 (instruccion -> asignacion_instr .)
    $end            reduce using rule 6 (instruccion -> asignacion_instr .)
    LLAVDER         reduce using rule 6 (instruccion -> asignacion_instr .)


state 7

    (7) instruccion -> mientras_instr .

    PRINT           reduce using rule 7 (instruccion -> mientras_instr .)
    VAR             reduce using rule 7 (instruccion -> mientras_instr .)
    ID              reduce using rule 7 (instruccion -> mientras_instr .)
    MIENTRAS        reduce using rule 7 (instruccion -> mientras_instr .)
    IF              reduce using rule 7 (instruccion -> mientras_instr .)
    $end            reduce using rule 7 (instruccion -> mientras_instr .)
    LLAVDER         reduce using rule 7 (instruccion -> mientras_instr .)


state 8

    (8) instruccion -> if_instr .

    PRINT           reduce using rule 8 (instruccion -> if_instr .)
    VAR             reduce using rule 8 (instruccion -> if_instr .)
    ID              reduce using rule 8 (instruccion -> if_instr .)
    MIENTRAS        reduce using rule 8 (instruccion -> if_instr .)
    IF              reduce using rule 8 (instruccion -> if_instr .)
    $end            reduce using rule 8 (instruccion -> if_instr .)
    LLAVDER         reduce using rule 8 (instruccion -> if_instr .)


state 9

    (9) instruccion -> if_else_instr .

    PRINT           reduce using rule 9 (instruccion -> if_else_instr .)
    VAR             reduce using rule 9 (instruccion -> if_else_instr .)
    ID              reduce using rule 9 (instruccion -> if_else_instr .)
    MIENTRAS        reduce using rule 9 (instruccion -> if_else_instr .)
    IF              reduce using rule 9 (instruccion -> if_else_instr .)
    $end            reduce using rule 9 (instruccion -> if_else_instr .)
    LLAVDER         reduce using rule 9 (instruccion -> if_else_instr .)


state 10

    (10) imprimir_instr -> PRINT . PARIZQ expresion_general PARDER PTCOMA

    PARIZQ          shift and go to state 16


state 11

    (15) definicion_instr -> VAR . ID PTCOMA

    ID              shift and go to state 17


state 12

    (16) asignacion_instr -> ID . IGUAL expresion_numerica PTCOMA

    IGUAL           shift and go to state 18


state 13

    (17) mientras_instr -> MIENTRAS . PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER

    PARIZQ          shift and go to state 19


state 14

    (18) if_instr -> IF . PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (19) if_else_instr -> IF . PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    PARIZQ          shift and go to state 20


state 15

    (2) instrucciones -> instrucciones instruccion .

    PRINT           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    VAR             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    MIENTRAS        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLAVDER         reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 16

    (10) imprimir_instr -> PRINT PARIZQ . expresion_general PARDER PTCOMA
    (11) expresion_general -> . expresion_numerica
    (12) expresion_general -> . expresion_cadena
    (13) expresion_general -> . expresion_id
    (20) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (21) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (22) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (23) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (24) expresion_numerica -> . MENOS expresion_numerica
    (25) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (26) expresion_numerica -> . ENTERO
    (27) expresion_numerica -> . DECIMAL
    (28) expresion_numerica -> . ID
    (29) expresion_cadena -> . expresion_cadena CONCAT expresion_cadena
    (30) expresion_cadena -> . CADENA
    (31) expresion_cadena -> . expresion_numerica
    (14) expresion_id -> . ID

    MENOS           shift and go to state 26
    PARIZQ          shift and go to state 21
    ENTERO          shift and go to state 27
    DECIMAL         shift and go to state 28
    ID              shift and go to state 29
    CADENA          shift and go to state 30

    expresion_general              shift and go to state 22
    expresion_numerica             shift and go to state 23
    expresion_cadena               shift and go to state 24
    expresion_id                   shift and go to state 25

state 17

    (15) definicion_instr -> VAR ID . PTCOMA

    PTCOMA          shift and go to state 31


state 18

    (16) asignacion_instr -> ID IGUAL . expresion_numerica PTCOMA
    (20) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (21) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (22) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (23) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (24) expresion_numerica -> . MENOS expresion_numerica
    (25) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (26) expresion_numerica -> . ENTERO
    (27) expresion_numerica -> . DECIMAL
    (28) expresion_numerica -> . ID

    MENOS           shift and go to state 26
    PARIZQ          shift and go to state 21
    ENTERO          shift and go to state 27
    DECIMAL         shift and go to state 28
    ID              shift and go to state 32

    expresion_numerica             shift and go to state 33

state 19

    (17) mientras_instr -> MIENTRAS PARIZQ . expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (32) expresion_logica -> . expresion_numerica MAYQUE expresion_numerica
    (33) expresion_logica -> . expresion_numerica MENQUE expresion_numerica
    (34) expresion_logica -> . expresion_numerica IGUALQUE expresion_numerica
    (35) expresion_logica -> . expresion_numerica NIGUALQUE expresion_numerica
    (20) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (21) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (22) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (23) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (24) expresion_numerica -> . MENOS expresion_numerica
    (25) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (26) expresion_numerica -> . ENTERO
    (27) expresion_numerica -> . DECIMAL
    (28) expresion_numerica -> . ID

    MENOS           shift and go to state 26
    PARIZQ          shift and go to state 21
    ENTERO          shift and go to state 27
    DECIMAL         shift and go to state 28
    ID              shift and go to state 32

    expresion_logica               shift and go to state 34
    expresion_numerica             shift and go to state 35

state 20

    (18) if_instr -> IF PARIZQ . expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (19) if_else_instr -> IF PARIZQ . expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (32) expresion_logica -> . expresion_numerica MAYQUE expresion_numerica
    (33) expresion_logica -> . expresion_numerica MENQUE expresion_numerica
    (34) expresion_logica -> . expresion_numerica IGUALQUE expresion_numerica
    (35) expresion_logica -> . expresion_numerica NIGUALQUE expresion_numerica
    (20) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (21) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (22) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (23) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (24) expresion_numerica -> . MENOS expresion_numerica
    (25) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (26) expresion_numerica -> . ENTERO
    (27) expresion_numerica -> . DECIMAL
    (28) expresion_numerica -> . ID

    MENOS           shift and go to state 26
    PARIZQ          shift and go to state 21
    ENTERO          shift and go to state 27
    DECIMAL         shift and go to state 28
    ID              shift and go to state 32

    expresion_logica               shift and go to state 36
    expresion_numerica             shift and go to state 35

state 21

    (25) expresion_numerica -> PARIZQ . expresion_numerica PARDER
    (20) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (21) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (22) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (23) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (24) expresion_numerica -> . MENOS expresion_numerica
    (25) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (26) expresion_numerica -> . ENTERO
    (27) expresion_numerica -> . DECIMAL
    (28) expresion_numerica -> . ID

    MENOS           shift and go to state 26
    PARIZQ          shift and go to state 21
    ENTERO          shift and go to state 27
    DECIMAL         shift and go to state 28
    ID              shift and go to state 32

    expresion_numerica             shift and go to state 37

state 22

    (10) imprimir_instr -> PRINT PARIZQ expresion_general . PARDER PTCOMA

    PARDER          shift and go to state 38


state 23

    (11) expresion_general -> expresion_numerica .
    (20) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (21) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (22) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (23) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (31) expresion_cadena -> expresion_numerica .

  ! reduce/reduce conflict for PARDER resolved using rule 11 (expresion_general -> expresion_numerica .)
    PARDER          reduce using rule 11 (expresion_general -> expresion_numerica .)
    MAS             shift and go to state 39
    MENOS           shift and go to state 40
    POR             shift and go to state 41
    DIVIDIDO        shift and go to state 42
    CONCAT          reduce using rule 31 (expresion_cadena -> expresion_numerica .)

  ! PARDER          [ reduce using rule 31 (expresion_cadena -> expresion_numerica .) ]


state 24

    (12) expresion_general -> expresion_cadena .
    (29) expresion_cadena -> expresion_cadena . CONCAT expresion_cadena

    PARDER          reduce using rule 12 (expresion_general -> expresion_cadena .)
    CONCAT          shift and go to state 43


state 25

    (13) expresion_general -> expresion_id .

    PARDER          reduce using rule 13 (expresion_general -> expresion_id .)


state 26

    (24) expresion_numerica -> MENOS . expresion_numerica
    (20) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (21) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (22) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (23) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (24) expresion_numerica -> . MENOS expresion_numerica
    (25) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (26) expresion_numerica -> . ENTERO
    (27) expresion_numerica -> . DECIMAL
    (28) expresion_numerica -> . ID

    MENOS           shift and go to state 26
    PARIZQ          shift and go to state 21
    ENTERO          shift and go to state 27
    DECIMAL         shift and go to state 28
    ID              shift and go to state 32

    expresion_numerica             shift and go to state 44

state 27

    (26) expresion_numerica -> ENTERO .

    MAS             reduce using rule 26 (expresion_numerica -> ENTERO .)
    MENOS           reduce using rule 26 (expresion_numerica -> ENTERO .)
    POR             reduce using rule 26 (expresion_numerica -> ENTERO .)
    DIVIDIDO        reduce using rule 26 (expresion_numerica -> ENTERO .)
    PARDER          reduce using rule 26 (expresion_numerica -> ENTERO .)
    CONCAT          reduce using rule 26 (expresion_numerica -> ENTERO .)
    PTCOMA          reduce using rule 26 (expresion_numerica -> ENTERO .)
    MAYQUE          reduce using rule 26 (expresion_numerica -> ENTERO .)
    MENQUE          reduce using rule 26 (expresion_numerica -> ENTERO .)
    IGUALQUE        reduce using rule 26 (expresion_numerica -> ENTERO .)
    NIGUALQUE       reduce using rule 26 (expresion_numerica -> ENTERO .)


state 28

    (27) expresion_numerica -> DECIMAL .

    MAS             reduce using rule 27 (expresion_numerica -> DECIMAL .)
    MENOS           reduce using rule 27 (expresion_numerica -> DECIMAL .)
    POR             reduce using rule 27 (expresion_numerica -> DECIMAL .)
    DIVIDIDO        reduce using rule 27 (expresion_numerica -> DECIMAL .)
    PARDER          reduce using rule 27 (expresion_numerica -> DECIMAL .)
    CONCAT          reduce using rule 27 (expresion_numerica -> DECIMAL .)
    PTCOMA          reduce using rule 27 (expresion_numerica -> DECIMAL .)
    MAYQUE          reduce using rule 27 (expresion_numerica -> DECIMAL .)
    MENQUE          reduce using rule 27 (expresion_numerica -> DECIMAL .)
    IGUALQUE        reduce using rule 27 (expresion_numerica -> DECIMAL .)
    NIGUALQUE       reduce using rule 27 (expresion_numerica -> DECIMAL .)


state 29

    (28) expresion_numerica -> ID .
    (14) expresion_id -> ID .

  ! reduce/reduce conflict for PARDER resolved using rule 14 (expresion_id -> ID .)
    MAS             reduce using rule 28 (expresion_numerica -> ID .)
    MENOS           reduce using rule 28 (expresion_numerica -> ID .)
    POR             reduce using rule 28 (expresion_numerica -> ID .)
    DIVIDIDO        reduce using rule 28 (expresion_numerica -> ID .)
    CONCAT          reduce using rule 28 (expresion_numerica -> ID .)
    PARDER          reduce using rule 14 (expresion_id -> ID .)

  ! PARDER          [ reduce using rule 28 (expresion_numerica -> ID .) ]


state 30

    (30) expresion_cadena -> CADENA .

    CONCAT          reduce using rule 30 (expresion_cadena -> CADENA .)
    PARDER          reduce using rule 30 (expresion_cadena -> CADENA .)


state 31

    (15) definicion_instr -> VAR ID PTCOMA .

    PRINT           reduce using rule 15 (definicion_instr -> VAR ID PTCOMA .)
    VAR             reduce using rule 15 (definicion_instr -> VAR ID PTCOMA .)
    ID              reduce using rule 15 (definicion_instr -> VAR ID PTCOMA .)
    MIENTRAS        reduce using rule 15 (definicion_instr -> VAR ID PTCOMA .)
    IF              reduce using rule 15 (definicion_instr -> VAR ID PTCOMA .)
    $end            reduce using rule 15 (definicion_instr -> VAR ID PTCOMA .)
    LLAVDER         reduce using rule 15 (definicion_instr -> VAR ID PTCOMA .)


state 32

    (28) expresion_numerica -> ID .

    PTCOMA          reduce using rule 28 (expresion_numerica -> ID .)
    MAS             reduce using rule 28 (expresion_numerica -> ID .)
    MENOS           reduce using rule 28 (expresion_numerica -> ID .)
    POR             reduce using rule 28 (expresion_numerica -> ID .)
    DIVIDIDO        reduce using rule 28 (expresion_numerica -> ID .)
    MAYQUE          reduce using rule 28 (expresion_numerica -> ID .)
    MENQUE          reduce using rule 28 (expresion_numerica -> ID .)
    IGUALQUE        reduce using rule 28 (expresion_numerica -> ID .)
    NIGUALQUE       reduce using rule 28 (expresion_numerica -> ID .)
    PARDER          reduce using rule 28 (expresion_numerica -> ID .)
    CONCAT          reduce using rule 28 (expresion_numerica -> ID .)


state 33

    (16) asignacion_instr -> ID IGUAL expresion_numerica . PTCOMA
    (20) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (21) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (22) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (23) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PTCOMA          shift and go to state 45
    MAS             shift and go to state 39
    MENOS           shift and go to state 40
    POR             shift and go to state 41
    DIVIDIDO        shift and go to state 42


state 34

    (17) mientras_instr -> MIENTRAS PARIZQ expresion_logica . PARDER LLAVIZQ instrucciones LLAVDER

    PARDER          shift and go to state 46


state 35

    (32) expresion_logica -> expresion_numerica . MAYQUE expresion_numerica
    (33) expresion_logica -> expresion_numerica . MENQUE expresion_numerica
    (34) expresion_logica -> expresion_numerica . IGUALQUE expresion_numerica
    (35) expresion_logica -> expresion_numerica . NIGUALQUE expresion_numerica
    (20) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (21) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (22) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (23) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAYQUE          shift and go to state 47
    MENQUE          shift and go to state 48
    IGUALQUE        shift and go to state 49
    NIGUALQUE       shift and go to state 50
    MAS             shift and go to state 39
    MENOS           shift and go to state 40
    POR             shift and go to state 41
    DIVIDIDO        shift and go to state 42


state 36

    (18) if_instr -> IF PARIZQ expresion_logica . PARDER LLAVIZQ instrucciones LLAVDER
    (19) if_else_instr -> IF PARIZQ expresion_logica . PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    PARDER          shift and go to state 51


state 37

    (25) expresion_numerica -> PARIZQ expresion_numerica . PARDER
    (20) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (21) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (22) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (23) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PARDER          shift and go to state 52
    MAS             shift and go to state 39
    MENOS           shift and go to state 40
    POR             shift and go to state 41
    DIVIDIDO        shift and go to state 42


state 38

    (10) imprimir_instr -> PRINT PARIZQ expresion_general PARDER . PTCOMA

    PTCOMA          shift and go to state 53


state 39

    (20) expresion_numerica -> expresion_numerica MAS . expresion_numerica
    (20) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (21) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (22) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (23) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (24) expresion_numerica -> . MENOS expresion_numerica
    (25) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (26) expresion_numerica -> . ENTERO
    (27) expresion_numerica -> . DECIMAL
    (28) expresion_numerica -> . ID

    MENOS           shift and go to state 26
    PARIZQ          shift and go to state 21
    ENTERO          shift and go to state 27
    DECIMAL         shift and go to state 28
    ID              shift and go to state 32

    expresion_numerica             shift and go to state 54

state 40

    (21) expresion_numerica -> expresion_numerica MENOS . expresion_numerica
    (20) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (21) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (22) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (23) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (24) expresion_numerica -> . MENOS expresion_numerica
    (25) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (26) expresion_numerica -> . ENTERO
    (27) expresion_numerica -> . DECIMAL
    (28) expresion_numerica -> . ID

    MENOS           shift and go to state 26
    PARIZQ          shift and go to state 21
    ENTERO          shift and go to state 27
    DECIMAL         shift and go to state 28
    ID              shift and go to state 32

    expresion_numerica             shift and go to state 55

state 41

    (22) expresion_numerica -> expresion_numerica POR . expresion_numerica
    (20) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (21) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (22) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (23) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (24) expresion_numerica -> . MENOS expresion_numerica
    (25) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (26) expresion_numerica -> . ENTERO
    (27) expresion_numerica -> . DECIMAL
    (28) expresion_numerica -> . ID

    MENOS           shift and go to state 26
    PARIZQ          shift and go to state 21
    ENTERO          shift and go to state 27
    DECIMAL         shift and go to state 28
    ID              shift and go to state 32

    expresion_numerica             shift and go to state 56

state 42

    (23) expresion_numerica -> expresion_numerica DIVIDIDO . expresion_numerica
    (20) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (21) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (22) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (23) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (24) expresion_numerica -> . MENOS expresion_numerica
    (25) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (26) expresion_numerica -> . ENTERO
    (27) expresion_numerica -> . DECIMAL
    (28) expresion_numerica -> . ID

    MENOS           shift and go to state 26
    PARIZQ          shift and go to state 21
    ENTERO          shift and go to state 27
    DECIMAL         shift and go to state 28
    ID              shift and go to state 32

    expresion_numerica             shift and go to state 57

state 43

    (29) expresion_cadena -> expresion_cadena CONCAT . expresion_cadena
    (29) expresion_cadena -> . expresion_cadena CONCAT expresion_cadena
    (30) expresion_cadena -> . CADENA
    (31) expresion_cadena -> . expresion_numerica
    (20) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (21) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (22) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (23) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (24) expresion_numerica -> . MENOS expresion_numerica
    (25) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (26) expresion_numerica -> . ENTERO
    (27) expresion_numerica -> . DECIMAL
    (28) expresion_numerica -> . ID

    CADENA          shift and go to state 30
    MENOS           shift and go to state 26
    PARIZQ          shift and go to state 21
    ENTERO          shift and go to state 27
    DECIMAL         shift and go to state 28
    ID              shift and go to state 32

    expresion_cadena               shift and go to state 58
    expresion_numerica             shift and go to state 59

state 44

    (24) expresion_numerica -> MENOS expresion_numerica .
    (20) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (21) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (22) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (23) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAS             reduce using rule 24 (expresion_numerica -> MENOS expresion_numerica .)
    MENOS           reduce using rule 24 (expresion_numerica -> MENOS expresion_numerica .)
    POR             reduce using rule 24 (expresion_numerica -> MENOS expresion_numerica .)
    DIVIDIDO        reduce using rule 24 (expresion_numerica -> MENOS expresion_numerica .)
    PARDER          reduce using rule 24 (expresion_numerica -> MENOS expresion_numerica .)
    CONCAT          reduce using rule 24 (expresion_numerica -> MENOS expresion_numerica .)
    PTCOMA          reduce using rule 24 (expresion_numerica -> MENOS expresion_numerica .)
    MAYQUE          reduce using rule 24 (expresion_numerica -> MENOS expresion_numerica .)
    MENQUE          reduce using rule 24 (expresion_numerica -> MENOS expresion_numerica .)
    IGUALQUE        reduce using rule 24 (expresion_numerica -> MENOS expresion_numerica .)
    NIGUALQUE       reduce using rule 24 (expresion_numerica -> MENOS expresion_numerica .)

  ! MAS             [ shift and go to state 39 ]
  ! MENOS           [ shift and go to state 40 ]
  ! POR             [ shift and go to state 41 ]
  ! DIVIDIDO        [ shift and go to state 42 ]


state 45

    (16) asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .

    PRINT           reduce using rule 16 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)
    VAR             reduce using rule 16 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)
    ID              reduce using rule 16 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)
    MIENTRAS        reduce using rule 16 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)
    IF              reduce using rule 16 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)
    $end            reduce using rule 16 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)
    LLAVDER         reduce using rule 16 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)


state 46

    (17) mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 60


state 47

    (32) expresion_logica -> expresion_numerica MAYQUE . expresion_numerica
    (20) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (21) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (22) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (23) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (24) expresion_numerica -> . MENOS expresion_numerica
    (25) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (26) expresion_numerica -> . ENTERO
    (27) expresion_numerica -> . DECIMAL
    (28) expresion_numerica -> . ID

    MENOS           shift and go to state 26
    PARIZQ          shift and go to state 21
    ENTERO          shift and go to state 27
    DECIMAL         shift and go to state 28
    ID              shift and go to state 32

    expresion_numerica             shift and go to state 61

state 48

    (33) expresion_logica -> expresion_numerica MENQUE . expresion_numerica
    (20) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (21) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (22) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (23) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (24) expresion_numerica -> . MENOS expresion_numerica
    (25) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (26) expresion_numerica -> . ENTERO
    (27) expresion_numerica -> . DECIMAL
    (28) expresion_numerica -> . ID

    MENOS           shift and go to state 26
    PARIZQ          shift and go to state 21
    ENTERO          shift and go to state 27
    DECIMAL         shift and go to state 28
    ID              shift and go to state 32

    expresion_numerica             shift and go to state 62

state 49

    (34) expresion_logica -> expresion_numerica IGUALQUE . expresion_numerica
    (20) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (21) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (22) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (23) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (24) expresion_numerica -> . MENOS expresion_numerica
    (25) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (26) expresion_numerica -> . ENTERO
    (27) expresion_numerica -> . DECIMAL
    (28) expresion_numerica -> . ID

    MENOS           shift and go to state 26
    PARIZQ          shift and go to state 21
    ENTERO          shift and go to state 27
    DECIMAL         shift and go to state 28
    ID              shift and go to state 32

    expresion_numerica             shift and go to state 63

state 50

    (35) expresion_logica -> expresion_numerica NIGUALQUE . expresion_numerica
    (20) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (21) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (22) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (23) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (24) expresion_numerica -> . MENOS expresion_numerica
    (25) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (26) expresion_numerica -> . ENTERO
    (27) expresion_numerica -> . DECIMAL
    (28) expresion_numerica -> . ID

    MENOS           shift and go to state 26
    PARIZQ          shift and go to state 21
    ENTERO          shift and go to state 27
    DECIMAL         shift and go to state 28
    ID              shift and go to state 32

    expresion_numerica             shift and go to state 64

state 51

    (18) if_instr -> IF PARIZQ expresion_logica PARDER . LLAVIZQ instrucciones LLAVDER
    (19) if_else_instr -> IF PARIZQ expresion_logica PARDER . LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 65


state 52

    (25) expresion_numerica -> PARIZQ expresion_numerica PARDER .

    MAS             reduce using rule 25 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    MENOS           reduce using rule 25 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    POR             reduce using rule 25 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    DIVIDIDO        reduce using rule 25 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    PARDER          reduce using rule 25 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    CONCAT          reduce using rule 25 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    PTCOMA          reduce using rule 25 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    MAYQUE          reduce using rule 25 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    MENQUE          reduce using rule 25 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    IGUALQUE        reduce using rule 25 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    NIGUALQUE       reduce using rule 25 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)


state 53

    (10) imprimir_instr -> PRINT PARIZQ expresion_general PARDER PTCOMA .

    PRINT           reduce using rule 10 (imprimir_instr -> PRINT PARIZQ expresion_general PARDER PTCOMA .)
    VAR             reduce using rule 10 (imprimir_instr -> PRINT PARIZQ expresion_general PARDER PTCOMA .)
    ID              reduce using rule 10 (imprimir_instr -> PRINT PARIZQ expresion_general PARDER PTCOMA .)
    MIENTRAS        reduce using rule 10 (imprimir_instr -> PRINT PARIZQ expresion_general PARDER PTCOMA .)
    IF              reduce using rule 10 (imprimir_instr -> PRINT PARIZQ expresion_general PARDER PTCOMA .)
    $end            reduce using rule 10 (imprimir_instr -> PRINT PARIZQ expresion_general PARDER PTCOMA .)
    LLAVDER         reduce using rule 10 (imprimir_instr -> PRINT PARIZQ expresion_general PARDER PTCOMA .)


state 54

    (20) expresion_numerica -> expresion_numerica MAS expresion_numerica .
    (20) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (21) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (22) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (23) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAS             reduce using rule 20 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    MENOS           reduce using rule 20 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    PARDER          reduce using rule 20 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    CONCAT          reduce using rule 20 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    PTCOMA          reduce using rule 20 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    MAYQUE          reduce using rule 20 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    MENQUE          reduce using rule 20 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    IGUALQUE        reduce using rule 20 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    NIGUALQUE       reduce using rule 20 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    POR             shift and go to state 41
    DIVIDIDO        shift and go to state 42

  ! POR             [ reduce using rule 20 (expresion_numerica -> expresion_numerica MAS expresion_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 20 (expresion_numerica -> expresion_numerica MAS expresion_numerica .) ]
  ! MAS             [ shift and go to state 39 ]
  ! MENOS           [ shift and go to state 40 ]


state 55

    (21) expresion_numerica -> expresion_numerica MENOS expresion_numerica .
    (20) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (21) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (22) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (23) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAS             reduce using rule 21 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    MENOS           reduce using rule 21 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    PARDER          reduce using rule 21 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    CONCAT          reduce using rule 21 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    PTCOMA          reduce using rule 21 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    MAYQUE          reduce using rule 21 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    MENQUE          reduce using rule 21 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    IGUALQUE        reduce using rule 21 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    NIGUALQUE       reduce using rule 21 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    POR             shift and go to state 41
    DIVIDIDO        shift and go to state 42

  ! POR             [ reduce using rule 21 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 21 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .) ]
  ! MAS             [ shift and go to state 39 ]
  ! MENOS           [ shift and go to state 40 ]


state 56

    (22) expresion_numerica -> expresion_numerica POR expresion_numerica .
    (20) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (21) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (22) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (23) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAS             reduce using rule 22 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    MENOS           reduce using rule 22 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    POR             reduce using rule 22 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    DIVIDIDO        reduce using rule 22 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    PARDER          reduce using rule 22 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    CONCAT          reduce using rule 22 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    PTCOMA          reduce using rule 22 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    MAYQUE          reduce using rule 22 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    MENQUE          reduce using rule 22 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    IGUALQUE        reduce using rule 22 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    NIGUALQUE       reduce using rule 22 (expresion_numerica -> expresion_numerica POR expresion_numerica .)

  ! MAS             [ shift and go to state 39 ]
  ! MENOS           [ shift and go to state 40 ]
  ! POR             [ shift and go to state 41 ]
  ! DIVIDIDO        [ shift and go to state 42 ]


state 57

    (23) expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .
    (20) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (21) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (22) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (23) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAS             reduce using rule 23 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    MENOS           reduce using rule 23 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    POR             reduce using rule 23 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    DIVIDIDO        reduce using rule 23 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    PARDER          reduce using rule 23 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    CONCAT          reduce using rule 23 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    PTCOMA          reduce using rule 23 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    MAYQUE          reduce using rule 23 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    MENQUE          reduce using rule 23 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    IGUALQUE        reduce using rule 23 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    NIGUALQUE       reduce using rule 23 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)

  ! MAS             [ shift and go to state 39 ]
  ! MENOS           [ shift and go to state 40 ]
  ! POR             [ shift and go to state 41 ]
  ! DIVIDIDO        [ shift and go to state 42 ]


state 58

    (29) expresion_cadena -> expresion_cadena CONCAT expresion_cadena .
    (29) expresion_cadena -> expresion_cadena . CONCAT expresion_cadena

    CONCAT          reduce using rule 29 (expresion_cadena -> expresion_cadena CONCAT expresion_cadena .)
    PARDER          reduce using rule 29 (expresion_cadena -> expresion_cadena CONCAT expresion_cadena .)

  ! CONCAT          [ shift and go to state 43 ]


state 59

    (31) expresion_cadena -> expresion_numerica .
    (20) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (21) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (22) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (23) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    CONCAT          reduce using rule 31 (expresion_cadena -> expresion_numerica .)
    PARDER          reduce using rule 31 (expresion_cadena -> expresion_numerica .)
    MAS             shift and go to state 39
    MENOS           shift and go to state 40
    POR             shift and go to state 41
    DIVIDIDO        shift and go to state 42


state 60

    (17) mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ . instrucciones LLAVDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientras_instr
    (8) instruccion -> . if_instr
    (9) instruccion -> . if_else_instr
    (10) imprimir_instr -> . PRINT PARIZQ expresion_general PARDER PTCOMA
    (15) definicion_instr -> . VAR ID PTCOMA
    (16) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (17) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (18) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (19) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    PRINT           shift and go to state 10
    VAR             shift and go to state 11
    ID              shift and go to state 12
    MIENTRAS        shift and go to state 13
    IF              shift and go to state 14

    instrucciones                  shift and go to state 66
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientras_instr                 shift and go to state 7
    if_instr                       shift and go to state 8
    if_else_instr                  shift and go to state 9

state 61

    (32) expresion_logica -> expresion_numerica MAYQUE expresion_numerica .
    (20) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (21) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (22) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (23) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PARDER          reduce using rule 32 (expresion_logica -> expresion_numerica MAYQUE expresion_numerica .)
    MAS             shift and go to state 39
    MENOS           shift and go to state 40
    POR             shift and go to state 41
    DIVIDIDO        shift and go to state 42


state 62

    (33) expresion_logica -> expresion_numerica MENQUE expresion_numerica .
    (20) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (21) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (22) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (23) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PARDER          reduce using rule 33 (expresion_logica -> expresion_numerica MENQUE expresion_numerica .)
    MAS             shift and go to state 39
    MENOS           shift and go to state 40
    POR             shift and go to state 41
    DIVIDIDO        shift and go to state 42


state 63

    (34) expresion_logica -> expresion_numerica IGUALQUE expresion_numerica .
    (20) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (21) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (22) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (23) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PARDER          reduce using rule 34 (expresion_logica -> expresion_numerica IGUALQUE expresion_numerica .)
    MAS             shift and go to state 39
    MENOS           shift and go to state 40
    POR             shift and go to state 41
    DIVIDIDO        shift and go to state 42


state 64

    (35) expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica .
    (20) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (21) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (22) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (23) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PARDER          reduce using rule 35 (expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica .)
    MAS             shift and go to state 39
    MENOS           shift and go to state 40
    POR             shift and go to state 41
    DIVIDIDO        shift and go to state 42


state 65

    (18) if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ . instrucciones LLAVDER
    (19) if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ . instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientras_instr
    (8) instruccion -> . if_instr
    (9) instruccion -> . if_else_instr
    (10) imprimir_instr -> . PRINT PARIZQ expresion_general PARDER PTCOMA
    (15) definicion_instr -> . VAR ID PTCOMA
    (16) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (17) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (18) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (19) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    PRINT           shift and go to state 10
    VAR             shift and go to state 11
    ID              shift and go to state 12
    MIENTRAS        shift and go to state 13
    IF              shift and go to state 14

    instrucciones                  shift and go to state 67
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientras_instr                 shift and go to state 7
    if_instr                       shift and go to state 8
    if_else_instr                  shift and go to state 9

state 66

    (17) mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones . LLAVDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientras_instr
    (8) instruccion -> . if_instr
    (9) instruccion -> . if_else_instr
    (10) imprimir_instr -> . PRINT PARIZQ expresion_general PARDER PTCOMA
    (15) definicion_instr -> . VAR ID PTCOMA
    (16) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (17) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (18) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (19) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    LLAVDER         shift and go to state 68
    PRINT           shift and go to state 10
    VAR             shift and go to state 11
    ID              shift and go to state 12
    MIENTRAS        shift and go to state 13
    IF              shift and go to state 14

    instruccion                    shift and go to state 15
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientras_instr                 shift and go to state 7
    if_instr                       shift and go to state 8
    if_else_instr                  shift and go to state 9

state 67

    (18) if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones . LLAVDER
    (19) if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones . LLAVDER ELSE LLAVIZQ instrucciones LLAVDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientras_instr
    (8) instruccion -> . if_instr
    (9) instruccion -> . if_else_instr
    (10) imprimir_instr -> . PRINT PARIZQ expresion_general PARDER PTCOMA
    (15) definicion_instr -> . VAR ID PTCOMA
    (16) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (17) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (18) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (19) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    LLAVDER         shift and go to state 69
    PRINT           shift and go to state 10
    VAR             shift and go to state 11
    ID              shift and go to state 12
    MIENTRAS        shift and go to state 13
    IF              shift and go to state 14

    instruccion                    shift and go to state 15
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientras_instr                 shift and go to state 7
    if_instr                       shift and go to state 8
    if_else_instr                  shift and go to state 9

state 68

    (17) mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .

    PRINT           reduce using rule 17 (mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    VAR             reduce using rule 17 (mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 17 (mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    MIENTRAS        reduce using rule 17 (mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 17 (mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 17 (mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 17 (mientras_instr -> MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)


state 69

    (18) if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .
    (19) if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER . ELSE LLAVIZQ instrucciones LLAVDER

    PRINT           reduce using rule 18 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    VAR             reduce using rule 18 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 18 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    MIENTRAS        reduce using rule 18 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 18 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 18 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 18 (if_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    ELSE            shift and go to state 70


state 70

    (19) if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 71


state 71

    (19) if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ . instrucciones LLAVDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientras_instr
    (8) instruccion -> . if_instr
    (9) instruccion -> . if_else_instr
    (10) imprimir_instr -> . PRINT PARIZQ expresion_general PARDER PTCOMA
    (15) definicion_instr -> . VAR ID PTCOMA
    (16) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (17) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (18) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (19) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    PRINT           shift and go to state 10
    VAR             shift and go to state 11
    ID              shift and go to state 12
    MIENTRAS        shift and go to state 13
    IF              shift and go to state 14

    instrucciones                  shift and go to state 72
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientras_instr                 shift and go to state 7
    if_instr                       shift and go to state 8
    if_else_instr                  shift and go to state 9

state 72

    (19) if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones . LLAVDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . mientras_instr
    (8) instruccion -> . if_instr
    (9) instruccion -> . if_else_instr
    (10) imprimir_instr -> . PRINT PARIZQ expresion_general PARDER PTCOMA
    (15) definicion_instr -> . VAR ID PTCOMA
    (16) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (17) mientras_instr -> . MIENTRAS PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (18) if_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (19) if_else_instr -> . IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER

    LLAVDER         shift and go to state 73
    PRINT           shift and go to state 10
    VAR             shift and go to state 11
    ID              shift and go to state 12
    MIENTRAS        shift and go to state 13
    IF              shift and go to state 14

    instruccion                    shift and go to state 15
    imprimir_instr                 shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    mientras_instr                 shift and go to state 7
    if_instr                       shift and go to state 8
    if_else_instr                  shift and go to state 9

state 73

    (19) if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .

    PRINT           reduce using rule 19 (if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    VAR             reduce using rule 19 (if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 19 (if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    MIENTRAS        reduce using rule 19 (if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    IF              reduce using rule 19 (if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 19 (if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 19 (if_else_instr -> IF PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ELSE LLAVIZQ instrucciones LLAVDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 23 resolved using rule (expresion_general -> expresion_numerica)
WARNING: rejected rule (expresion_cadena -> expresion_numerica) in state 23
WARNING: reduce/reduce conflict in state 29 resolved using rule (expresion_id -> ID)
WARNING: rejected rule (expresion_numerica -> ID) in state 29
