

main(){
    print("INICIO DEL PROGRAMA")
    print("Ingrese su nombre: ");
    var nombre = Read();
    print("Bienvenido " + nombre);

    CasteosYMas();

    
    
    print("=============CALCULADORA==============");
    while(true){
        if(!calculadoraCALI()){
            break;
        }
    }
    print("Calculadora finalizada correctamente");

    
    print("=============RECURSIVIDAD==============");
    var punteoRecursividad = 0;
    if(factorialCALI(20) == 362880){
        print("Bien factorial");
        punteoRecursividad++;
    }
    if(parCALI(202)){
        print("Bien par");
        punteoRecursividad++;
    }
    if(!imparCALI(202)){
        print("Bien impar");
        punteoRecursividad++;
    }
    if(ackermannCALI(3,4) == 125){
        print("Bien ackermann");
        punteoRecursividad++;
    }
    var discos = 3;
    var origen = 1;
    var auxiliar = 2;
    var destino = 3;
    HanoiCALI(discos, origen, auxiliar, destino);
    #*
    Mover disco de 1 a 3
    Mover disco de 1 a 2
    Mover disco de 3 a 2
    Mover disco de 1 a 3
    Mover disco de 2 a 1
    Mover disco de 2 a 3
    Mover disco de 1 a 3
    *#
}

func CasteosYMas(){
    #* print("Validando Continue")
    var cont = 1
    while(cont < 11){
        if(cont == 6){
            print("Se salta esta iteracion")
            cont ++
            continue
        }
        print("El valor del ciclo con continue es: " + cont)
        cont ++
    } *#

    print("CASTEOS");
    var num500 = 50;
    var double501 = 50.4
    var char502 = 'a'
    var string503 = "50"
    var string504 = "50.4"
    var string505 = "FalSe"

    print((char)num500)
    print((int)double501)

    print("======================")

    print("Funciones Nativas")

    var nativaNUM = 1024.65;
    var nativaSTRING = "Animos, Ya caSi Termina El CURso";
    print("nativaNUM = " + nativaNUM);
    print("Truncate = " + Truncate(nativaNUM))
    print("Round = " + Round(nativaNUM))
    print("=============================")
    print("nativaSTRING = " + nativaSTRING)
    print("ToLower = " + ToLower(nativaSTRING))
    print("ToUpper = " + ToUpper(nativaSTRING))
    print("Length = " + Length(nativaSTRING))
}

func calculadoraCALI(){
    var numero1;
    var numero2;
    var operacion;
    print("Ingrese el primer número:\n")
    numero1 = (int) read();
    print("Ingrese el segundo número:\n")
    numero2 = (int) read();

    print("Ingrese la operación que desea realizar: (+,-,*,/,**,%)\n");
    operacion =  ReAd()

    switch(operacion){
        case "+":
            print("El resultado de " + numero1 + operacion + numero2 + " es igual a " + ( numero1 + numero2) );
            break;
        case "-":
            print("El resultado de " + numero1 + operacion + numero2 + " es igual a " + ( numero1 - numero2) );
            break;
        case "*":
            print("El resultado de " + numero1 + operacion + numero2 + " es igual a " + ( numero1 * numero2) );
            break;
        case "/":
            print("El resultado de " + numero1 + operacion + numero2 + " es igual a " + ( numero1 / numero2) );
            break;
        case "**":
            print("El resultado de " + numero1 + operacion + numero2 + " es igual a " + ( numero1 ** numero2) );
            break;
        case "%":
            print("El resultado de " + numero1 + operacion + numero2 + " es igual a " + ( numero1 % numero2) );
            break;
        case "+":
            print("El resultado de " + numero1 + operacion + numero2 + " es igual a " + ( numero1 + numero2) );
            break;
        default:
            print("Operación no válida");
            break;
    }

    print("¿Desea realizar otra operación? (true, false)\n");
    if((boolean)Read()){
        return true;
    }
    return false
}

func factorialCALI(int num){
    if(num == 0){
        return 1;
    }
    else{
        return num * factorialCALI(num-1)
    }   
}

func parCALI(int nump) {
    if (nump == 0) {
        return true;
    }
    return imparCALI(nump - 1);
}

func imparCALI(int numi) {
    if (numi == 0) {
        return false;
    }
    return parCALI(numi - 1);
}

func ackermannCALI(int m, int n){
    if (m == 0){
        return n + 1;
    } else if (m > 0 && n == 0){
        return ackermannCALI(m-1, 1)
    } else{
        return ackermannCALI(m-1, ackermannCALI(m, n-1))
    }
}

func HanoiCALI(int discos, int origen, int auxiliar, int destino) {
    if (discos == 1) {
        print("Mover disco de " + origen + " a " + destino);
    } else {
        HanoiCALI(discos - 1, origen, destino, auxiliar);
        print("Mover disco de " + origen + " a " + destino);
        HanoiCALI(discos - 1, auxiliar, origen, destino);
    }
}
